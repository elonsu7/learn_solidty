{
	"id": "7ef2fe81a28d611c874a027c60cbb5a0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.3;\n\ncontract SimpleStorage {\n    // State variable to store a number\n    uint public num;\n    bool public b = true;\n\n    // You need to send a transaction to write to a state variable.\n    function set(uint _num) public {\n        num = _num;\n    }\n\n    // You can read from a state variable without sending a transaction.\n    function get() public view returns (uint) {\n        return num;\n    }\n    \n    function get_b() public view returns (bool) {\n        return b;\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol": {
				"SimpleStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "b",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_b",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "num",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":57:529  contract SimpleStorage {... */\n  mstore(0x40, 0x80)\n    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":163:167  true */\n  0x01\n    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":147:167  bool public b = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  dup2\n  or\n  swap1\n  sstore\n    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":57:529  contract SimpleStorage {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":57:529  contract SimpleStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4df7e3d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4e70b1dc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x60fe47b1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf3d33cf4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":147:167  bool public b = true */\n    tag_3:\n      sload(0x01)\n      tag_8\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":147:167  bool public b = true */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":126:141  uint public num */\n    tag_4:\n      tag_12\n      sload(0x00)\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":352:377   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":340:342   */\n      0x20\n        /* \"#utility.yul\":325:343   */\n      add\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":126:141  uint public num */\n      tag_10\n        /* \"#utility.yul\":206:383   */\n      jump\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":242:300  function set(uint _num) public {... */\n    tag_5:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":283:286  num */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":283:293  num = _num */\n      sstore\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":242:300  function set(uint _num) public {... */\n      jump\n    tag_16:\n      stop\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":379:448  function get() public view returns (uint) {... */\n    tag_6:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":415:419  uint */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":438:441  num */\n      sload\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":379:448  function get() public view returns (uint) {... */\n      jump(tag_12)\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":458:527  function get_b() public view returns (bool) {... */\n    tag_7:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":519:520  b */\n      and(0xff, sload(0x01))\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":458:527  function get_b() public view returns (bool) {... */\n      jump(tag_8)\n        /* \"#utility.yul\":388:568   */\n    tag_18:\n        /* \"#utility.yul\":447:453   */\n      0x00\n        /* \"#utility.yul\":500:502   */\n      0x20\n        /* \"#utility.yul\":488:497   */\n      dup3\n        /* \"#utility.yul\":479:486   */\n      dup5\n        /* \"#utility.yul\":475:498   */\n      sub\n        /* \"#utility.yul\":471:503   */\n      slt\n        /* \"#utility.yul\":468:520   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":516:517   */\n      0x00\n        /* \"#utility.yul\":513:514   */\n      dup1\n        /* \"#utility.yul\":506:518   */\n      revert\n        /* \"#utility.yul\":468:520   */\n    tag_33:\n      pop\n        /* \"#utility.yul\":539:562   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":388:568   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220142413eb74d5342a526ed4ab79d5746ae5ffb4f4c56fd36cc4b6f48c7586f5fa64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001805460ff19168117905534801561001b575f80fd5b5060f4806100285f395ff3fe6080604052348015600e575f80fd5b5060043610604e575f3560e01c80634df7e3d01460525780634e70b1dc14607357806360fe47b11460875780636d4ce63c146098578063f3d33cf414609e575b5f80fd5b600154605e9060ff1681565b60405190151581526020015b60405180910390f35b607a5f5481565b604051908152602001606a565b6096609236600460a8565b5f55565b005b5f54607a565b60015460ff16605e565b5f6020828403121560b7575f80fd5b503591905056fea2646970667358221220142413eb74d5342a526ed4ab79d5746ae5ffb4f4c56fd36cc4b6f48c7586f5fa64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF4 DUP1 PUSH2 0x28 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x4E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DF7E3D0 EQ PUSH1 0x52 JUMPI DUP1 PUSH4 0x4E70B1DC EQ PUSH1 0x73 JUMPI DUP1 PUSH4 0x60FE47B1 EQ PUSH1 0x87 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH1 0x98 JUMPI DUP1 PUSH4 0xF3D33CF4 EQ PUSH1 0x9E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x5E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7A PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6A JUMP JUMPDEST PUSH1 0x96 PUSH1 0x92 CALLDATASIZE PUSH1 0x4 PUSH1 0xA8 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x7A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH1 0x5E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x24 SGT 0xEB PUSH21 0xD5342A526ED4AB79D5746AE5FFB4F4C56FD36CC4B6 DELEGATECALL DUP13 PUSH22 0x86F5FA64736F6C634300081800330000000000000000 ",
							"sourceMap": "57:472:0:-:0;;;163:4;147:20;;-1:-1:-1;;147:20:0;;;;;57:472;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@b_6": {
									"entryPoint": null,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_b_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@num_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@set_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:570:1",
										"nodeType": "YulBlock",
										"src": "0:570:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "109:92:1",
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nativeSrc": "119:26:1",
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "131:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "142:2:1",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "127:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nativeSrc": "127:18:1",
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "119:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "161:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "186:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "179:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nativeSrc": "179:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "172:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nativeSrc": "172:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nativeSrc": "154:41:1",
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nativeSrc": "154:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "14:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "78:9:1",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "89:6:1",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "100:4:1",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nativeSrc": "307:76:1",
													"nodeType": "YulBlock",
													"src": "307:76:1",
													"statements": [
														{
															"nativeSrc": "317:26:1",
															"nodeType": "YulAssignment",
															"src": "317:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "329:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "329:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "340:2:1",
																		"nodeType": "YulLiteral",
																		"src": "340:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "325:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "325:3:1"
																},
																"nativeSrc": "325:18:1",
																"nodeType": "YulFunctionCall",
																"src": "325:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "317:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "317:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "359:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "370:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "370:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "352:6:1"
																},
																"nativeSrc": "352:25:1",
																"nodeType": "YulFunctionCall",
																"src": "352:25:1"
															},
															"nativeSrc": "352:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "352:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "206:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "276:9:1",
														"nodeType": "YulTypedName",
														"src": "276:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "287:6:1",
														"nodeType": "YulTypedName",
														"src": "287:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "298:4:1",
														"nodeType": "YulTypedName",
														"src": "298:4:1",
														"type": ""
													}
												],
												"src": "206:177:1"
											},
											{
												"body": {
													"nativeSrc": "458:110:1",
													"nodeType": "YulBlock",
													"src": "458:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "504:16:1",
																"nodeType": "YulBlock",
																"src": "504:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "513:1:1",
																					"nodeType": "YulLiteral",
																					"src": "513:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "516:1:1",
																					"nodeType": "YulLiteral",
																					"src": "516:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "506:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "506:6:1"
																			},
																			"nativeSrc": "506:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "506:12:1"
																		},
																		"nativeSrc": "506:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "506:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "479:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "479:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "488:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "488:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "475:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "475:3:1"
																		},
																		"nativeSrc": "475:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "475:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "500:2:1",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "471:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:1"
																},
																"nativeSrc": "471:32:1",
																"nodeType": "YulFunctionCall",
																"src": "471:32:1"
															},
															"nativeSrc": "468:52:1",
															"nodeType": "YulIf",
															"src": "468:52:1"
														},
														{
															"nativeSrc": "529:33:1",
															"nodeType": "YulAssignment",
															"src": "529:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "552:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "552:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "539:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "539:12:1"
																},
																"nativeSrc": "539:23:1",
																"nodeType": "YulFunctionCall",
																"src": "539:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "388:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "424:9:1",
														"nodeType": "YulTypedName",
														"src": "424:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "435:7:1",
														"nodeType": "YulTypedName",
														"src": "435:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"src": "388:180:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060043610604e575f3560e01c80634df7e3d01460525780634e70b1dc14607357806360fe47b11460875780636d4ce63c146098578063f3d33cf414609e575b5f80fd5b600154605e9060ff1681565b60405190151581526020015b60405180910390f35b607a5f5481565b604051908152602001606a565b6096609236600460a8565b5f55565b005b5f54607a565b60015460ff16605e565b5f6020828403121560b7575f80fd5b503591905056fea2646970667358221220142413eb74d5342a526ed4ab79d5746ae5ffb4f4c56fd36cc4b6f48c7586f5fa64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x4E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DF7E3D0 EQ PUSH1 0x52 JUMPI DUP1 PUSH4 0x4E70B1DC EQ PUSH1 0x73 JUMPI DUP1 PUSH4 0x60FE47B1 EQ PUSH1 0x87 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH1 0x98 JUMPI DUP1 PUSH4 0xF3D33CF4 EQ PUSH1 0x9E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x5E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7A PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6A JUMP JUMPDEST PUSH1 0x96 PUSH1 0x92 CALLDATASIZE PUSH1 0x4 PUSH1 0xA8 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x7A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH1 0x5E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x24 SGT 0xEB PUSH21 0xD5342A526ED4AB79D5746AE5FFB4F4C56FD36CC4B6 DELEGATECALL DUP13 PUSH22 0x86F5FA64736F6C634300081800330000000000000000 ",
							"sourceMap": "57:472:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;147:20;;;;;;;;;;;;179:14:1;;172:22;154:41;;142:2;127:18;147:20:0;;;;;;;;126:15;;;;;;;;;352:25:1;;;340:2;325:18;126:15:0;206:177:1;242:58:0;;;;;;:::i;:::-;283:3;:10;242:58;;;379:69;415:4;438:3;379:69;;458;519:1;;;;458:69;;388:180:1;447:6;500:2;488:9;479:7;475:23;471:32;468:52;;;516:1;513;506:12;468:52;-1:-1:-1;539:23:1;;388:180;-1:-1:-1;388:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "48800",
								"executionCost": "24321",
								"totalCost": "73121"
							},
							"external": {
								"b()": "2276",
								"get()": "2334",
								"get_b()": "2358",
								"num()": "2293",
								"set(uint256)": "22331"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 163,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 147,
									"end": 167,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 529,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220142413eb74d5342a526ed4ab79d5746ae5ffb4f4c56fd36cc4b6f48c7586f5fa64736f6c63430008180033",
									".code": [
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "4DF7E3D0"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "4E70B1DC"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "60FE47B1"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "6D4CE63C"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "F3D33CF4"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 147,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 352,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 352,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 340,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 206,
											"end": 383,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 242,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 242,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 242,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 242,
											"end": 300,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 242,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 242,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 242,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 242,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 242,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 283,
											"end": 286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 242,
											"end": 300,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 242,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 242,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 300,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 379,
											"end": 448,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 379,
											"end": 448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 415,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 379,
											"end": 448,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 527,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 458,
											"end": 527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 519,
											"end": 520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 458,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 458,
											"end": 527,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 568,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 488,
											"end": 497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 479,
											"end": 486,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 475,
											"end": 498,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 471,
											"end": 503,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 468,
											"end": 520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 468,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 468,
											"end": 520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 516,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 518,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 468,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 468,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 539,
											"end": 562,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 388,
											"end": 568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 388,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"b()": "4df7e3d0",
							"get()": "6d4ce63c",
							"get_b()": "f3d33cf4",
							"num()": "4e70b1dc",
							"set(uint256)": "60fe47b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_b\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"num\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":\"SimpleStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol\":{\"keccak256\":\"0x4f6464986e0d276089aee03a313638c4f31ee0814529025d924d394dae8b751f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2c7cbcfc65eadcaa3c15ed5c628159e70d34a64fbb08ebeb35e9c247f314a\",\"dweb:/ipfs/QmeiML8xtWbGwSK95NsK3kaNwBbEYNUV2kBWZGaHjatkcL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol:SimpleStorage",
								"label": "num",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 6,
								"contract": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol:SimpleStorage",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol": {
				"ast": {
					"absolutePath": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite_answer.sol",
					"exportedSymbols": {
						"SimpleStorage": [
							33
						]
					},
					"id": 34,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33
							],
							"name": "SimpleStorage",
							"nameLocation": "66:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4e70b1dc",
									"id": 3,
									"mutability": "mutable",
									"name": "num",
									"nameLocation": "138:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "126:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "126:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4df7e3d0",
									"id": 6,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "159:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "147:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "147:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "163:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "273:27:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "283:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 12,
														"name": "_num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "289:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "283:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "283:10:0"
											}
										]
									},
									"functionSelector": "60fe47b1",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "251:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "260:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "255:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:11:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:0"
									},
									"scope": 33,
									"src": "242:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "421:27:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"name": "num",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "438:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 22,
												"nodeType": "Return",
												"src": "431:10:0"
											}
										]
									},
									"functionSelector": "6d4ce63c",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "388:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "415:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:6:0"
									},
									"scope": 33,
									"src": "379:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "502:25:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "519:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "512:8:0"
											}
										]
									},
									"functionSelector": "f3d33cf4",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_b",
									"nameLocation": "467:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "496:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 26,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:6:0"
									},
									"scope": 33,
									"src": "458:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 34,
							"src": "57:472:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:497:0"
				},
				"id": 0
			}
		}
	}
}