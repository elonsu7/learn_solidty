{
	"id": "6a991be56a2d0061b3d1f84f135f8f4c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.3;\n\ncontract SimpleStorage {\n    // State variable to store a number\n    uint public num;\n    bool public b;\n\n    function set(bool _b) public  {\n        b = _b;\n    }\n\n    function get_b() public view returns (bool){\n        return b;\n    }\n\n    // You need to send a transaction to write to a state variable.\n    function set(uint _num) public {\n        num = _num;\n    }\n\n    // You can read from a state variable without sending a transaction.\n    function get() public view returns (uint) {\n        return num;\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol": {
				"SimpleStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "b",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_b",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "num",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_b",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":57:576  contract SimpleStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":57:576  contract SimpleStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4df7e3d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4e70b1dc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5f76f6ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x60fe47b1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf3d33cf4\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":147:160  bool public b */\n    tag_3:\n      sload(0x01)\n      tag_9\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":147:160  bool public b */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":126:141  uint public num */\n    tag_4:\n      tag_13\n      sload(0x00)\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":352:377   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":340:342   */\n      0x20\n        /* \"#utility.yul\":325:343   */\n      add\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":126:141  uint public num */\n      tag_11\n        /* \"#utility.yul\":206:383   */\n      jump\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":167:220  function set(bool _b) public  {... */\n    tag_5:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":207:208  b */\n      0x01\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":207:213  b = _b */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":167:220  function set(bool _b) public  {... */\n      jump\n    tag_17:\n      stop\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":368:426  function set(uint _num) public {... */\n    tag_6:\n      tag_17\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":409:412  num */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":409:419  num = _num */\n      sstore\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":368:426  function set(uint _num) public {... */\n      jump\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":505:574  function get() public view returns (uint) {... */\n    tag_7:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":541:545  uint */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":564:567  num */\n      sload\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":505:574  function get() public view returns (uint) {... */\n      jump(tag_13)\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":226:294  function get_b() public view returns (bool){... */\n    tag_8:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":286:287  b */\n      and(0xff, sload(0x01))\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":226:294  function get_b() public view returns (bool){... */\n      jump(tag_9)\n        /* \"#utility.yul\":388:661   */\n    tag_19:\n        /* \"#utility.yul\":444:450   */\n      0x00\n        /* \"#utility.yul\":497:499   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":476:483   */\n      dup5\n        /* \"#utility.yul\":472:495   */\n      sub\n        /* \"#utility.yul\":468:500   */\n      slt\n        /* \"#utility.yul\":465:517   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":513:514   */\n      0x00\n        /* \"#utility.yul\":510:511   */\n      dup1\n        /* \"#utility.yul\":503:515   */\n      revert\n        /* \"#utility.yul\":465:517   */\n    tag_39:\n        /* \"#utility.yul\":552:561   */\n      dup2\n        /* \"#utility.yul\":539:562   */\n      calldataload\n        /* \"#utility.yul\":605:610   */\n      dup1\n        /* \"#utility.yul\":598:611   */\n      iszero\n        /* \"#utility.yul\":591:612   */\n      iszero\n        /* \"#utility.yul\":584:589   */\n      dup2\n        /* \"#utility.yul\":581:613   */\n      eq\n        /* \"#utility.yul\":571:631   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":627:628   */\n      0x00\n        /* \"#utility.yul\":624:625   */\n      dup1\n        /* \"#utility.yul\":617:629   */\n      revert\n        /* \"#utility.yul\":571:631   */\n    tag_40:\n        /* \"#utility.yul\":650:655   */\n      swap4\n        /* \"#utility.yul\":388:661   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":666:846   */\n    tag_23:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":778:780   */\n      0x20\n        /* \"#utility.yul\":766:775   */\n      dup3\n        /* \"#utility.yul\":757:764   */\n      dup5\n        /* \"#utility.yul\":753:776   */\n      sub\n        /* \"#utility.yul\":749:781   */\n      slt\n        /* \"#utility.yul\":746:798   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":794:795   */\n      0x00\n        /* \"#utility.yul\":791:792   */\n      dup1\n        /* \"#utility.yul\":784:796   */\n      revert\n        /* \"#utility.yul\":746:798   */\n    tag_42:\n      pop\n        /* \"#utility.yul\":817:840   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":666:846   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c577fdc41757ac86fb2897a8d2d892c49414b41e04205e6221df185f0d7e00a164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506101568061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80634df7e3d0146100645780634e70b1dc146100865780635f76f6ab1461009c57806360fe47b1146100bf5780636d4ce63c146100d1578063f3d33cf4146100d8575b5f80fd5b6001546100719060ff1681565b60405190151581526020015b60405180910390f35b61008e5f5481565b60405190815260200161007d565b6100bd6100aa3660046100e3565b6001805460ff1916911515919091179055565b005b6100bd6100cd366004610109565b5f55565b5f5461008e565b60015460ff16610071565b5f602082840312156100f3575f80fd5b81358015158114610102575f80fd5b9392505050565b5f60208284031215610119575f80fd5b503591905056fea2646970667358221220c577fdc41757ac86fb2897a8d2d892c49414b41e04205e6221df185f0d7e00a164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x4E70B1DC EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x5F76F6AB EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x60FE47B1 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xF3D33CF4 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x71 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7D JUMP JUMPDEST PUSH2 0xBD PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x8E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x71 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x102 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH24 0xFDC41757AC86FB2897A8D2D892C49414B41E04205E6221DF XOR PUSH0 0xD PUSH31 0xA164736F6C63430008180033000000000000000000000000000000000000 ",
							"sourceMap": "57:519:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@b_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_b_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@num_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@set_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_33": {
									"entryPoint": null,
									"id": 33,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:848:1",
										"nodeType": "YulBlock",
										"src": "0:848:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "109:92:1",
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nativeSrc": "119:26:1",
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "131:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "142:2:1",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "127:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nativeSrc": "127:18:1",
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "119:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "161:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "186:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "179:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nativeSrc": "179:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "172:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nativeSrc": "172:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nativeSrc": "154:41:1",
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nativeSrc": "154:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "14:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "78:9:1",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "89:6:1",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "100:4:1",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nativeSrc": "307:76:1",
													"nodeType": "YulBlock",
													"src": "307:76:1",
													"statements": [
														{
															"nativeSrc": "317:26:1",
															"nodeType": "YulAssignment",
															"src": "317:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "329:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "329:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "340:2:1",
																		"nodeType": "YulLiteral",
																		"src": "340:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "325:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "325:3:1"
																},
																"nativeSrc": "325:18:1",
																"nodeType": "YulFunctionCall",
																"src": "325:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "317:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "317:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "359:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "370:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "370:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "352:6:1"
																},
																"nativeSrc": "352:25:1",
																"nodeType": "YulFunctionCall",
																"src": "352:25:1"
															},
															"nativeSrc": "352:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "352:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "206:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "276:9:1",
														"nodeType": "YulTypedName",
														"src": "276:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "287:6:1",
														"nodeType": "YulTypedName",
														"src": "287:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "298:4:1",
														"nodeType": "YulTypedName",
														"src": "298:4:1",
														"type": ""
													}
												],
												"src": "206:177:1"
											},
											{
												"body": {
													"nativeSrc": "455:206:1",
													"nodeType": "YulBlock",
													"src": "455:206:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "501:16:1",
																"nodeType": "YulBlock",
																"src": "501:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "513:1:1",
																					"nodeType": "YulLiteral",
																					"src": "513:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "503:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "503:6:1"
																			},
																			"nativeSrc": "503:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "503:12:1"
																		},
																		"nativeSrc": "503:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "503:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "476:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "476:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "485:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "472:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "472:3:1"
																		},
																		"nativeSrc": "472:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "472:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "497:2:1",
																		"nodeType": "YulLiteral",
																		"src": "497:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "468:3:1"
																},
																"nativeSrc": "468:32:1",
																"nodeType": "YulFunctionCall",
																"src": "468:32:1"
															},
															"nativeSrc": "465:52:1",
															"nodeType": "YulIf",
															"src": "465:52:1"
														},
														{
															"nativeSrc": "526:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "526:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "552:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "552:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "539:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "539:12:1"
																},
																"nativeSrc": "539:23:1",
																"nodeType": "YulFunctionCall",
																"src": "539:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "530:5:1",
																	"nodeType": "YulTypedName",
																	"src": "530:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "615:16:1",
																"nodeType": "YulBlock",
																"src": "615:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "624:1:1",
																					"nodeType": "YulLiteral",
																					"src": "624:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "627:1:1",
																					"nodeType": "YulLiteral",
																					"src": "627:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "617:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "617:6:1"
																			},
																			"nativeSrc": "617:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "617:12:1"
																		},
																		"nativeSrc": "617:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "617:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "584:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "584:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "605:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "605:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "598:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "598:6:1"
																						},
																						"nativeSrc": "598:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "598:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "591:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "591:6:1"
																				},
																				"nativeSrc": "591:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "591:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "581:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "581:2:1"
																		},
																		"nativeSrc": "581:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "581:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "574:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "574:6:1"
																},
																"nativeSrc": "574:40:1",
																"nodeType": "YulFunctionCall",
																"src": "574:40:1"
															},
															"nativeSrc": "571:60:1",
															"nodeType": "YulIf",
															"src": "571:60:1"
														},
														{
															"nativeSrc": "640:15:1",
															"nodeType": "YulAssignment",
															"src": "640:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "650:5:1",
																"nodeType": "YulIdentifier",
																"src": "650:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "388:273:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "421:9:1",
														"nodeType": "YulTypedName",
														"src": "421:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "432:7:1",
														"nodeType": "YulTypedName",
														"src": "432:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "444:6:1",
														"nodeType": "YulTypedName",
														"src": "444:6:1",
														"type": ""
													}
												],
												"src": "388:273:1"
											},
											{
												"body": {
													"nativeSrc": "736:110:1",
													"nodeType": "YulBlock",
													"src": "736:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "782:16:1",
																"nodeType": "YulBlock",
																"src": "782:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "791:1:1",
																					"nodeType": "YulLiteral",
																					"src": "791:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "794:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "784:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:1"
																			},
																			"nativeSrc": "784:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "784:12:1"
																		},
																		"nativeSrc": "784:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "784:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "757:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "757:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "766:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "766:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "753:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "753:3:1"
																		},
																		"nativeSrc": "753:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "753:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "778:2:1",
																		"nodeType": "YulLiteral",
																		"src": "778:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "749:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "749:3:1"
																},
																"nativeSrc": "749:32:1",
																"nodeType": "YulFunctionCall",
																"src": "749:32:1"
															},
															"nativeSrc": "746:52:1",
															"nodeType": "YulIf",
															"src": "746:52:1"
														},
														{
															"nativeSrc": "807:33:1",
															"nodeType": "YulAssignment",
															"src": "807:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "830:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "830:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "817:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "817:12:1"
																},
																"nativeSrc": "817:23:1",
																"nodeType": "YulFunctionCall",
																"src": "817:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "666:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "702:9:1",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "713:7:1",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "725:6:1",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													}
												],
												"src": "666:180:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80634df7e3d0146100645780634e70b1dc146100865780635f76f6ab1461009c57806360fe47b1146100bf5780636d4ce63c146100d1578063f3d33cf4146100d8575b5f80fd5b6001546100719060ff1681565b60405190151581526020015b60405180910390f35b61008e5f5481565b60405190815260200161007d565b6100bd6100aa3660046100e3565b6001805460ff1916911515919091179055565b005b6100bd6100cd366004610109565b5f55565b5f5461008e565b60015460ff16610071565b5f602082840312156100f3575f80fd5b81358015158114610102575f80fd5b9392505050565b5f60208284031215610119575f80fd5b503591905056fea2646970667358221220c577fdc41757ac86fb2897a8d2d892c49414b41e04205e6221df185f0d7e00a164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x4E70B1DC EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x5F76F6AB EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x60FE47B1 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xF3D33CF4 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x71 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7D JUMP JUMPDEST PUSH2 0xBD PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x8E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x71 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x102 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH24 0xFDC41757AC86FB2897A8D2D892C49414B41E04205E6221DF XOR PUSH0 0xD PUSH31 0xA164736F6C63430008180033000000000000000000000000000000000000 ",
							"sourceMap": "57:519:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;147:13;;;;;;;;;;;;179:14:1;;172:22;154:41;;142:2;127:18;147:13:0;;;;;;;;126:15;;;;;;;;;352:25:1;;;340:2;325:18;126:15:0;206:177:1;167:53:0;;;;;;:::i;:::-;207:1;:6;;-1:-1:-1;;207:6:0;;;;;;;;;;167:53;;;368:58;;;;;;:::i;:::-;409:3;:10;368:58;505:69;541:4;564:3;505:69;;226:68;286:1;;;;226:68;;388:273:1;444:6;497:2;485:9;476:7;472:23;468:32;465:52;;;513:1;510;503:12;465:52;552:9;539:23;605:5;598:13;591:21;584:5;581:32;571:60;;627:1;624;617:12;571:60;650:5;388:273;-1:-1:-1;;;388:273:1:o;666:180::-;725:6;778:2;766:9;757:7;753:23;749:32;746:52;;;794:1;791;784:12;746:52;-1:-1:-1;817:23:1;;666:180;-1:-1:-1;666:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "68400",
								"executionCost": "115",
								"totalCost": "68515"
							},
							"external": {
								"b()": "2276",
								"get()": "2356",
								"get_b()": "2380",
								"num()": "2293",
								"set(bool)": "24502",
								"set(uint256)": "22353"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 576,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 576,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c577fdc41757ac86fb2897a8d2d892c49414b41e04205e6221df185f0d7e00a164736f6c63430008180033",
									".code": [
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "4DF7E3D0"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "4E70B1DC"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "5F76F6AB"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "60FE47B1"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "6D4CE63C"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "F3D33CF4"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 147,
											"end": 160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 147,
											"end": 160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 147,
											"end": 160,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 147,
											"end": 160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 160,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 352,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 352,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 340,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 206,
											"end": 383,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 167,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 167,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 167,
											"end": 220,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 167,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 207,
											"end": 213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 167,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 220,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 368,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 368,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 368,
											"end": 426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 368,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 368,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 368,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 426,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 505,
											"end": 574,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 505,
											"end": 574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 541,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 505,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 505,
											"end": 574,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 226,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 226,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 226,
											"end": 294,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 661,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 388,
											"end": 661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 444,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 476,
											"end": 483,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 472,
											"end": 495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 468,
											"end": 500,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 465,
											"end": 517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 465,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 465,
											"end": 517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 515,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 465,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 465,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 562,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 611,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 591,
											"end": 612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 584,
											"end": 589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 581,
											"end": 613,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 571,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 627,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 629,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 571,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 655,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 388,
											"end": 661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 388,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 666,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 666,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 753,
											"end": 776,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 749,
											"end": 781,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 746,
											"end": 798,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 746,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 796,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 746,
											"end": 798,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 840,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 666,
											"end": 846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 666,
											"end": 846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"b()": "4df7e3d0",
							"get()": "6d4ce63c",
							"get_b()": "f3d33cf4",
							"num()": "4e70b1dc",
							"set(bool)": "5f76f6ab",
							"set(uint256)": "60fe47b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_b\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"num\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_b\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":\"SimpleStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":{\"keccak256\":\"0x0b5878aa538d952f9069093ddf131cbf91d2d094b49403442c85ed475d417326\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8146624ab53c6780cebbb2e01440d31f3f7fb425ed723f0b1fffb271dc0b1df\",\"dweb:/ipfs/Qmf8oEXaeAun94fBHNpi7ZYV8Bbtyi5nXQ2k3Hy7JCho2C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol:SimpleStorage",
								"label": "num",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol:SimpleStorage",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol": {
				"ast": {
					"absolutePath": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol",
					"exportedSymbols": {
						"SimpleStorage": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "SimpleStorage",
							"nameLocation": "66:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4e70b1dc",
									"id": 3,
									"mutability": "mutable",
									"name": "num",
									"nameLocation": "138:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 42,
									"src": "126:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "126:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4df7e3d0",
									"id": 5,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "159:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 42,
									"src": "147:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "147:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "197:23:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "207:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 11,
														"name": "_b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "211:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "207:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "207:6:0"
											}
										]
									},
									"functionSelector": "5f76f6ab",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "176:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_b",
												"nameLocation": "185:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:9:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "197:0:0"
									},
									"scope": 42,
									"src": "167:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "269:25:0",
										"statements": [
											{
												"expression": {
													"id": 20,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5,
													"src": "286:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 19,
												"id": 21,
												"nodeType": "Return",
												"src": "279:8:0"
											}
										]
									},
									"functionSelector": "f3d33cf4",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_b",
									"nameLocation": "235:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "264:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:6:0"
									},
									"scope": 42,
									"src": "226:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "399:27:0",
										"statements": [
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "409:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "415:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "409:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "409:10:0"
											}
										]
									},
									"functionSelector": "60fe47b1",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "377:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "386:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "381:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "381:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:11:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:0:0"
									},
									"scope": 42,
									"src": "368:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "547:27:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"name": "num",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "564:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 39,
												"nodeType": "Return",
												"src": "557:10:0"
											}
										]
									},
									"functionSelector": "6d4ce63c",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "514:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "541:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "541:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:6:0"
									},
									"scope": 42,
									"src": "505:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 43,
							"src": "57:519:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:544:0"
				},
				"id": 0
			}
		}
	}
}