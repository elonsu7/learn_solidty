{
	"id": "2a0a31c04ef59444d69b57d0383852da",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.3;\n\ncontract ReceiveEther {\n    /*\n    Which function is called, fallback() or receive()?\n\n           send Ether\n               |\n         msg.data is empty?\n              / \\\n            yes  no\n            /     \\\nreceive() exists?  fallback()\n         /   \\\n        yes   no\n        /      \\\n    receive()   fallback()\n    */\n\n    // Function to receive Ether. msg.data must be empty\n    receive() external payable {}\n\n    // Fallback function is called when msg.data is not empty\n    fallback() external payable {}\n\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n\ncontract SendEther {\n    function sendViaTransfer(address payable _to) public payable {\n        // This function is no longer recommended for sending Ether.\n        _to.transfer(msg.value);\n    }\n\n    function sendViaSend(address payable _to) public payable {\n        // Send returns a boolean value indicating success or failure.\n        // This function is not recommended for sending Ether.\n        bool sent = _to.send(msg.value);\n        require(sent, \"Failed to send Ether\");\n    }\n\n    function sendViaCall(address payable _to) public payable {\n        // Call returns a boolean value indicating success or failure.\n        // This is the current recommended method to use.\n        (bool sent, bytes memory data) = _to.call{value: msg.value}(\"\");\n        require(sent, \"Failed to send Ether\");\n    }\n}\n\ncontract Charity {\n    address public owner;\n    \n    constructor() {\n        owner = msg.sender;\n    }\n    \n    function donate() public payable {}\n\n    function withdraw() public {\n        uint amount = address(this).balance;\n\n        (bool sent, ) = owner.call{value: amount}(\"\");\n        require(sent, \"Failed to send Ether\");\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol": {
				"Charity": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1485:1823  contract Charity {... */\n  mstore(0x40, 0x80)\n    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1539:1588  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1563:1568  owner */\n  0x00\n    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1563:1581  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1571:1581  msg.sender */\n  caller\n    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1563:1581  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1485:1823  contract Charity {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1485:1823  contract Charity {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1639:1821  function withdraw() public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1508:1528  address public owner */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      sload(0x00)\n      tag_9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_9:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1508:1528  address public owner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1639:1821  function withdraw() public {... */\n    tag_7:\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1676:1687  uint amount */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1738:1743  owner */\n      dup1\n      sload\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1738:1767  owner.call{value: amount}(\"\") */\n      mload(0x40)\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1690:1711  address(this).balance */\n      selfbalance\n      swap3\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1676:1687  uint amount */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1738:1743  owner */\n      and\n      swap1\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1690:1711  address(this).balance */\n      dup4\n      swap1\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1676:1687  uint amount */\n      dup4\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1738:1767  owner.call{value: amount}(\"\") */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1676:1687  uint amount */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1738:1767  owner.call{value: amount}(\"\") */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1690:1711  address(this).balance */\n      dup6\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1738:1743  owner */\n      dup8\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1738:1767  owner.call{value: amount}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_20\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_19)\n    tag_20:\n      0x60\n      swap2\n      pop\n    tag_19:\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1722:1767  (bool sent, ) = owner.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1785:1789  sent */\n      dup1\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1777:1814  require(sent, \"Failed to send Ether\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":634:636   */\n      0x20\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1777:1814  require(sent, \"Failed to send Ether\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":616:637   */\n      mstore\n        /* \"#utility.yul\":673:675   */\n      0x14\n        /* \"#utility.yul\":653:671   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":646:676   */\n      mstore\n      shl(0x61, 0x2330b4b632b2103a379039b2b7321022ba3432b9)\n        /* \"#utility.yul\":692:710   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":685:735   */\n      mstore\n        /* \"#utility.yul\":752:770   */\n      0x64\n      add\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1777:1814  require(sent, \"Failed to send Ether\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1666:1821  {... */\n      pop\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1639:1821  function withdraw() public {... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122005e2ff532421df5da068e6718de59122a9760a91c2491f8a15c9e87d84bb904564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_89": {
									"entryPoint": null,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b505f80546001600160a01b0319163317905561015d8061002d5f395ff3fe608060405260043610610033575f3560e01c80633ccfd60b146100375780638da5cb5b1461004d578063ed88c68e1461004b575b5f80fd5b348015610042575f80fd5b5061004b610087565b005b348015610058575f80fd5b505f5461006b906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f80546040514792916001600160a01b03169083908381818185875af1925050503d805f81146100d2576040519150601f19603f3d011682016040523d82523d5f602084013e6100d7565b606091505b50509050806101235760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640160405180910390fd5b505056fea264697066735822122005e2ff532421df5da068e6718de59122a9760a91c2491f8a15c9e87d84bb904564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x15D DUP1 PUSH2 0x2D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x4B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x6B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD SELFBALANCE SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x123 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xE2 SELFDESTRUCT MSTORE8 0x24 0x21 0xDF TSTORE LOG0 PUSH9 0xE6718DE59122A9760A SWAP2 0xC2 BLOBHASH 0x1F DUP11 ISZERO 0xC9 0xE8 PUSH30 0x84BB904564736F6C63430008190033000000000000000000000000000000 ",
							"sourceMap": "1485:338:0:-:0;;;1539:49;;;;;;;;;-1:-1:-1;1563:5:0;:18;;-1:-1:-1;;;;;;1563:18:0;1571:10;1563:18;;;1485:338;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@donate_93": {
									"entryPoint": null,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_119": {
									"entryPoint": 135,
									"id": 119,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:778:1",
										"nodeType": "YulBlock",
										"src": "0:778:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:1",
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:1",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:1",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nativeSrc": "194:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:1",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nativeSrc": "190:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nativeSrc": "178:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:51:1",
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nativeSrc": "160:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nativeSrc": "413:14:1",
													"nodeType": "YulBlock",
													"src": "413:14:1",
													"statements": [
														{
															"nativeSrc": "415:10:1",
															"nodeType": "YulAssignment",
															"src": "415:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "422:3:1",
																"nodeType": "YulIdentifier",
																"src": "422:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "415:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "415:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "222:205:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "397:3:1",
														"nodeType": "YulTypedName",
														"src": "397:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "405:3:1",
														"nodeType": "YulTypedName",
														"src": "405:3:1",
														"type": ""
													}
												],
												"src": "222:205:1"
											},
											{
												"body": {
													"nativeSrc": "606:170:1",
													"nodeType": "YulBlock",
													"src": "606:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "623:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "623:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "634:2:1",
																		"nodeType": "YulLiteral",
																		"src": "634:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "616:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:6:1"
																},
																"nativeSrc": "616:21:1",
																"nodeType": "YulFunctionCall",
																"src": "616:21:1"
															},
															"nativeSrc": "616:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "616:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "657:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "657:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "668:2:1",
																				"nodeType": "YulLiteral",
																				"src": "668:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "653:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "653:3:1"
																		},
																		"nativeSrc": "653:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "653:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "673:2:1",
																		"nodeType": "YulLiteral",
																		"src": "673:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:1"
																},
																"nativeSrc": "646:30:1",
																"nodeType": "YulFunctionCall",
																"src": "646:30:1"
															},
															"nativeSrc": "646:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "646:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "696:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "696:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "707:2:1",
																				"nodeType": "YulLiteral",
																				"src": "707:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "692:3:1"
																		},
																		"nativeSrc": "692:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "692:18:1"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204574686572",
																		"kind": "string",
																		"nativeSrc": "712:22:1",
																		"nodeType": "YulLiteral",
																		"src": "712:22:1",
																		"type": "",
																		"value": "Failed to send Ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "685:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:6:1"
																},
																"nativeSrc": "685:50:1",
																"nodeType": "YulFunctionCall",
																"src": "685:50:1"
															},
															"nativeSrc": "685:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "685:50:1"
														},
														{
															"nativeSrc": "744:26:1",
															"nodeType": "YulAssignment",
															"src": "744:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "756:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "756:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:2:1",
																		"nodeType": "YulLiteral",
																		"src": "767:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "752:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "752:3:1"
																},
																"nativeSrc": "752:18:1",
																"nodeType": "YulFunctionCall",
																"src": "752:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "744:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "744:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "432:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "583:9:1",
														"nodeType": "YulTypedName",
														"src": "583:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "597:4:1",
														"nodeType": "YulTypedName",
														"src": "597:4:1",
														"type": ""
													}
												],
												"src": "432:344:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610033575f3560e01c80633ccfd60b146100375780638da5cb5b1461004d578063ed88c68e1461004b575b5f80fd5b348015610042575f80fd5b5061004b610087565b005b348015610058575f80fd5b505f5461006b906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f80546040514792916001600160a01b03169083908381818185875af1925050503d805f81146100d2576040519150601f19603f3d011682016040523d82523d5f602084013e6100d7565b606091505b50509050806101235760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640160405180910390fd5b505056fea264697066735822122005e2ff532421df5da068e6718de59122a9760a91c2491f8a15c9e87d84bb904564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x4B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x6B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD SELFBALANCE SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x123 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xE2 SELFDESTRUCT MSTORE8 0x24 0x21 0xDF TSTORE LOG0 PUSH9 0xE6718DE59122A9760A SWAP2 0xC2 BLOBHASH 0x1F DUP11 ISZERO 0xC9 0xE8 PUSH30 0x84BB904564736F6C63430008190033000000000000000000000000000000 ",
							"sourceMap": "1485:338:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1639:182;;;;;;;;;;;;;:::i;:::-;;1508:20;;;;;;;;;;-1:-1:-1;1508:20:0;;;;-1:-1:-1;;;;;1508:20:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;1508:20:0;;;;;;;1639:182;1676:11;1738:5;;:29;;1690:21;;1676:11;-1:-1:-1;;;;;1738:5:0;;1690:21;;1676:11;1738:29;1676:11;1738:29;1690:21;1738:5;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:45;;;1785:4;1777:37;;;;-1:-1:-1;;;1777:37:0;;634:2:1;1777:37:0;;;616:21:1;673:2;653:18;;;646:30;-1:-1:-1;;;692:18:1;;;685:50;752:18;;1777:37:0;;;;;;;;1666:155;;1639:182::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "69800",
								"executionCost": "24349",
								"totalCost": "94149"
							},
							"external": {
								"donate()": "117",
								"owner()": "2323",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1485,
									"end": 1823,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1539,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1563,
									"end": 1568,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1571,
									"end": 1581,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1823,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122005e2ff532421df5da068e6718de59122a9760a91c2491f8a15c9e87d84bb904564736f6c63430008190033",
									".code": [
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "ED88C68E"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1639,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1528,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1639,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 634,
											"end": 636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 616,
											"end": 637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 673,
											"end": 675,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 653,
											"end": 671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 646,
											"end": 676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2330B4B632B2103A379039B2B7321022BA3432B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 685,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 752,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate()": "ed88c68e",
							"owner()": "8da5cb5b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":\"Charity\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":{\"keccak256\":\"0x7a73ae600dde868cffabd7b920d28b85716cb7c068a8b17b0509b40301fa859e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8627c0b54834318b2d7aaa88604ef68bda07c34425f4a1e7af0244b4665b21b8\",\"dweb:/ipfs/QmYrQ7AnkcPhHNhuNALRn7WqsXwwauffHmiN2Ky34HENjG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 80,
								"contract": ".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol:Charity",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReceiveEther": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":57:673  contract ReceiveEther {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":57:673  contract ReceiveEther {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      stop\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":577:671  function getBalance() public view returns (uint) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":643:664  address(this).balance */\n      selfbalance\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":577:671  function getBalance() public view returns (uint) {... */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":577:671  function getBalance() public view returns (uint) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa2646970667358221220e1fe98fbd987b82d53903aa33be1712675c59b03420ab3ea33b7e52d0da0632964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50607880601a5f395ff3fe608060405260043610601c575f3560e01c806312065fe014602457005b36602257005b005b348015602e575f80fd5b504760405190815260200160405180910390f3fea2646970667358221220e1fe98fbd987b82d53903aa33be1712675c59b03420ab3ea33b7e52d0da0632964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x78 DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x24 JUMPI STOP JUMPDEST CALLDATASIZE PUSH1 0x22 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x2E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 INVALID SWAP9 0xFB 0xD9 DUP8 0xB8 0x2D MSTORE8 SWAP1 GASPRICE LOG3 EXTCODESIZE 0xE1 PUSH18 0x2675C59B03420AB3EA33B7E52D0DA0632964 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "57:616:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:193:1",
										"nodeType": "YulBlock",
										"src": "0:193:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:1",
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:25:1",
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nativeSrc": "160:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601c575f3560e01c806312065fe014602457005b36602257005b005b348015602e575f80fd5b504760405190815260200160405180910390f3fea2646970667358221220e1fe98fbd987b82d53903aa33be1712675c59b03420ab3ea33b7e52d0da0632964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x24 JUMPI STOP JUMPDEST CALLDATASIZE PUSH1 0x22 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x2E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 INVALID SWAP9 0xFB 0xD9 DUP8 0xB8 0x2D MSTORE8 SWAP1 GASPRICE LOG3 EXTCODESIZE 0xE1 PUSH18 0x2675C59B03420AB3EA33B7E52D0DA0632964 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "57:616:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;577:94;;;;;;;;;;-1:-1:-1;643:21:0;577:94;;160:25:1;;;148:2;133:18;577:94:0;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "24000",
								"executionCost": "73",
								"totalCost": "24073"
							},
							"external": {
								"": "72",
								"getBalance()": "147"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 673,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 673,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 673,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1fe98fbd987b82d53903aa33be1712675c59b03420ab3ea33b7e52d0da0632964736f6c63430008190033",
									".code": [
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 673,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 577,
											"end": 671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 577,
											"end": 671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 577,
											"end": 671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 643,
											"end": 664,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 577,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 671,
											"name": "RETURN",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":\"ReceiveEther\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":{\"keccak256\":\"0x7a73ae600dde868cffabd7b920d28b85716cb7c068a8b17b0509b40301fa859e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8627c0b54834318b2d7aaa88604ef68bda07c34425f4a1e7af0244b4665b21b8\",\"dweb:/ipfs/QmYrQ7AnkcPhHNhuNALRn7WqsXwwauffHmiN2Ky34HENjG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SendEther": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "sendViaCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "sendViaSend",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "sendViaTransfer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":675:1483  contract SendEther {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":675:1483  contract SendEther {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x636e082b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x74be4806\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x830c29ae\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":700:870  function sendViaTransfer(address payable _to) public payable {... */\n    tag_2:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":876:1162  function sendViaSend(address payable _to) public payable {... */\n    tag_3:\n      tag_5\n      tag_10\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_10:\n      tag_11\n      jump\t// in\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1168:1481  function sendViaCall(address payable _to) public payable {... */\n    tag_4:\n      tag_5\n      tag_13\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":700:870  function sendViaTransfer(address payable _to) public payable {... */\n    tag_8:\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":840:863  _to.transfer(msg.value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":840:852  _to.transfer */\n      dup3\n      and\n      swap1\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":853:862  msg.value */\n      callvalue\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":840:863  _to.transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":853:862  msg.value */\n      dup6\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":840:852  _to.transfer */\n      dup9\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":840:863  _to.transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":700:870  function sendViaTransfer(address payable _to) public payable {... */\n      pop\n      jump\t// out\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":876:1162  function sendViaSend(address payable _to) public payable {... */\n    tag_11:\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1089:1108  _to.send(msg.value) */\n      mload(0x40)\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1077:1086  bool sent */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1089:1097  _to.send */\n      dup4\n      and\n      swap1\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1098:1107  msg.value */\n      callvalue\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1089:1108  _to.send(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1077:1086  bool sent */\n      dup5\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1089:1108  _to.send(msg.value) */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1077:1086  bool sent */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1089:1108  _to.send(msg.value) */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1098:1107  msg.value */\n      dup6\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1089:1097  _to.send */\n      dup9\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1089:1108  _to.send(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1077:1108  bool sent = _to.send(msg.value) */\n      swap1\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1126:1130  sent */\n      dup1\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1118:1155  require(sent, \"Failed to send Ether\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":515:517   */\n      0x20\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1118:1155  require(sent, \"Failed to send Ether\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":497:518   */\n      mstore\n        /* \"#utility.yul\":554:556   */\n      0x14\n        /* \"#utility.yul\":534:552   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":527:557   */\n      mstore\n      shl(0x61, 0x2330b4b632b2103a379039b2b7321022ba3432b9)\n        /* \"#utility.yul\":573:591   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":566:616   */\n      mstore\n        /* \"#utility.yul\":633:651   */\n      0x64\n      add\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1118:1155  require(sent, \"Failed to send Ether\") */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1168:1481  function sendViaCall(address payable _to) public payable {... */\n    tag_14:\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1365:1374  bool sent */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1376:1393  bytes memory data */\n      dup1\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1397:1400  _to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1397:1405  _to.call */\n      and\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1413:1422  msg.value */\n      callvalue\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1397:1427  _to.call{value: msg.value}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_28\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_27)\n    tag_28:\n      0x60\n      swap2\n      pop\n    tag_27:\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1364:1427  (bool sent, bytes memory data) = _to.call{value: msg.value}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1445:1449  sent */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1437:1474  require(sent, \"Failed to send Ether\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":515:517   */\n      0x20\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1437:1474  require(sent, \"Failed to send Ether\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":497:518   */\n      mstore\n        /* \"#utility.yul\":554:556   */\n      0x14\n        /* \"#utility.yul\":534:552   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":527:557   */\n      mstore\n      shl(0x61, 0x2330b4b632b2103a379039b2b7321022ba3432b9)\n        /* \"#utility.yul\":573:591   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":566:616   */\n      mstore\n        /* \"#utility.yul\":633:651   */\n      0x64\n      add\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1437:1474  require(sent, \"Failed to send Ether\") */\n      tag_21\n        /* \"#utility.yul\":313:657   */\n      jump\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1437:1474  require(sent, \"Failed to send Ether\") */\n    tag_29:\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1225:1481  {... */\n      pop\n      pop\n        /* \".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":1168:1481  function sendViaCall(address payable _to) public payable {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:308   */\n    tag_7:\n        /* \"#utility.yul\":81:87   */\n      0x00\n        /* \"#utility.yul\":134:136   */\n      0x20\n        /* \"#utility.yul\":122:131   */\n      dup3\n        /* \"#utility.yul\":113:120   */\n      dup5\n        /* \"#utility.yul\":109:132   */\n      sub\n        /* \"#utility.yul\":105:137   */\n      slt\n        /* \"#utility.yul\":102:154   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":150:151   */\n      0x00\n        /* \"#utility.yul\":147:148   */\n      dup1\n        /* \"#utility.yul\":140:152   */\n      revert\n        /* \"#utility.yul\":102:154   */\n    tag_33:\n        /* \"#utility.yul\":176:199   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":228:259   */\n      dup2\n      and\n        /* \"#utility.yul\":218:260   */\n      dup2\n      eq\n        /* \"#utility.yul\":208:278   */\n      tag_34\n      jumpi\n        /* \"#utility.yul\":274:275   */\n      0x00\n        /* \"#utility.yul\":271:272   */\n      dup1\n        /* \"#utility.yul\":264:276   */\n      revert\n        /* \"#utility.yul\":208:278   */\n    tag_34:\n        /* \"#utility.yul\":297:302   */\n      swap4\n        /* \"#utility.yul\":14:308   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220056e34670d7e307bcb00f270ac839c2dd65af9986e80e19517260fd4a452286364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102188061001c5f395ff3fe608060405260043610610033575f3560e01c8063636e082b1461003757806374be48061461004c578063830c29ae1461005f575b5f80fd5b61004a6100453660046101b5565b610072565b005b61004a61005a3660046101b5565b6100a8565b61004a61006d3660046101b5565b610118565b6040516001600160a01b038216903480156108fc02915f818181858888f193505050501580156100a4573d5f803e3d5ffd5b5050565b6040515f906001600160a01b038316903480156108fc029184818181858888f193505050509050806100a45760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064015b60405180910390fd5b5f80826001600160a01b0316346040515f6040518083038185875af1925050503d805f8114610162576040519150601f19603f3d011682016040523d82523d5f602084013e610167565b606091505b5091509150816101b05760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161010f565b505050565b5f602082840312156101c5575f80fd5b81356001600160a01b03811681146101db575f80fd5b939250505056fea2646970667358221220056e34670d7e307bcb00f270ac839c2dd65af9986e80e19517260fd4a452286364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x636E082B EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x74BE4806 EQ PUSH2 0x4C JUMPI DUP1 PUSH4 0x830C29AE EQ PUSH2 0x5F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH2 0x45 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x5A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0xA8 JUMP JUMPDEST PUSH2 0x4A PUSH2 0x6D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0xA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x162 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x167 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH15 0x34670D7E307BCB00F270AC839C2DD6 GAS 0xF9 SWAP9 PUSH15 0x80E19517260FD4A452286364736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "675:808:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@sendViaCall_77": {
									"entryPoint": 280,
									"id": 77,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sendViaSend_54": {
									"entryPoint": 168,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sendViaTransfer_35": {
									"entryPoint": 114,
									"id": 35,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:869:1",
										"nodeType": "YulBlock",
										"src": "0:869:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "92:216:1",
													"nodeType": "YulBlock",
													"src": "92:216:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "138:16:1",
																"nodeType": "YulBlock",
																"src": "138:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "147:1:1",
																					"nodeType": "YulLiteral",
																					"src": "147:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "140:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "140:6:1"
																			},
																			"nativeSrc": "140:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "140:12:1"
																		},
																		"nativeSrc": "140:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "140:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "113:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "122:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "109:3:1"
																		},
																		"nativeSrc": "109:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "109:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "105:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "105:3:1"
																},
																"nativeSrc": "105:32:1",
																"nodeType": "YulFunctionCall",
																"src": "105:32:1"
															},
															"nativeSrc": "102:52:1",
															"nodeType": "YulIf",
															"src": "102:52:1"
														},
														{
															"nativeSrc": "163:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "163:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "189:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "189:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "176:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "176:12:1"
																},
																"nativeSrc": "176:23:1",
																"nodeType": "YulFunctionCall",
																"src": "176:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "167:5:1",
																	"nodeType": "YulTypedName",
																	"src": "167:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "262:16:1",
																"nodeType": "YulBlock",
																"src": "262:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:1",
																					"nodeType": "YulLiteral",
																					"src": "274:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "264:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:1"
																			},
																			"nativeSrc": "264:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "264:12:1"
																		},
																		"nativeSrc": "264:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "264:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "221:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "221:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "232:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "232:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "247:3:1",
																										"nodeType": "YulLiteral",
																										"src": "247:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "252:1:1",
																										"nodeType": "YulLiteral",
																										"src": "252:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "243:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "243:3:1"
																								},
																								"nativeSrc": "243:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "243:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "256:1:1",
																								"nodeType": "YulLiteral",
																								"src": "256:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "239:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "239:3:1"
																						},
																						"nativeSrc": "239:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "239:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "228:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "228:3:1"
																				},
																				"nativeSrc": "228:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "228:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "218:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:2:1"
																		},
																		"nativeSrc": "218:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:50:1",
																"nodeType": "YulFunctionCall",
																"src": "211:50:1"
															},
															"nativeSrc": "208:70:1",
															"nodeType": "YulIf",
															"src": "208:70:1"
														},
														{
															"nativeSrc": "287:15:1",
															"nodeType": "YulAssignment",
															"src": "287:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "297:5:1",
																"nodeType": "YulIdentifier",
																"src": "297:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "287:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "287:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nativeSrc": "14:294:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "58:9:1",
														"nodeType": "YulTypedName",
														"src": "58:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "69:7:1",
														"nodeType": "YulTypedName",
														"src": "69:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "81:6:1",
														"nodeType": "YulTypedName",
														"src": "81:6:1",
														"type": ""
													}
												],
												"src": "14:294:1"
											},
											{
												"body": {
													"nativeSrc": "487:170:1",
													"nodeType": "YulBlock",
													"src": "487:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "504:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "504:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "515:2:1",
																		"nodeType": "YulLiteral",
																		"src": "515:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "497:6:1"
																},
																"nativeSrc": "497:21:1",
																"nodeType": "YulFunctionCall",
																"src": "497:21:1"
															},
															"nativeSrc": "497:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "497:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "538:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:1",
																				"nodeType": "YulLiteral",
																				"src": "549:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "534:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "534:3:1"
																		},
																		"nativeSrc": "534:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "534:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "554:2:1",
																		"nodeType": "YulLiteral",
																		"src": "554:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "527:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:1"
																},
																"nativeSrc": "527:30:1",
																"nodeType": "YulFunctionCall",
																"src": "527:30:1"
															},
															"nativeSrc": "527:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "527:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "577:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "577:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "588:2:1",
																				"nodeType": "YulLiteral",
																				"src": "588:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "573:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "573:3:1"
																		},
																		"nativeSrc": "573:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "573:18:1"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204574686572",
																		"kind": "string",
																		"nativeSrc": "593:22:1",
																		"nodeType": "YulLiteral",
																		"src": "593:22:1",
																		"type": "",
																		"value": "Failed to send Ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "566:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "566:6:1"
																},
																"nativeSrc": "566:50:1",
																"nodeType": "YulFunctionCall",
																"src": "566:50:1"
															},
															"nativeSrc": "566:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "566:50:1"
														},
														{
															"nativeSrc": "625:26:1",
															"nodeType": "YulAssignment",
															"src": "625:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "637:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "637:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "648:2:1",
																		"nodeType": "YulLiteral",
																		"src": "648:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "633:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "633:3:1"
																},
																"nativeSrc": "633:18:1",
																"nodeType": "YulFunctionCall",
																"src": "633:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "625:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "625:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "313:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:1",
														"nodeType": "YulTypedName",
														"src": "464:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "478:4:1",
														"nodeType": "YulTypedName",
														"src": "478:4:1",
														"type": ""
													}
												],
												"src": "313:344:1"
											},
											{
												"body": {
													"nativeSrc": "853:14:1",
													"nodeType": "YulBlock",
													"src": "853:14:1",
													"statements": [
														{
															"nativeSrc": "855:10:1",
															"nodeType": "YulAssignment",
															"src": "855:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "862:3:1",
																"nodeType": "YulIdentifier",
																"src": "862:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "855:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "662:205:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "837:3:1",
														"nodeType": "YulTypedName",
														"src": "837:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "845:3:1",
														"nodeType": "YulTypedName",
														"src": "845:3:1",
														"type": ""
													}
												],
												"src": "662:205:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610033575f3560e01c8063636e082b1461003757806374be48061461004c578063830c29ae1461005f575b5f80fd5b61004a6100453660046101b5565b610072565b005b61004a61005a3660046101b5565b6100a8565b61004a61006d3660046101b5565b610118565b6040516001600160a01b038216903480156108fc02915f818181858888f193505050501580156100a4573d5f803e3d5ffd5b5050565b6040515f906001600160a01b038316903480156108fc029184818181858888f193505050509050806100a45760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064015b60405180910390fd5b5f80826001600160a01b0316346040515f6040518083038185875af1925050503d805f8114610162576040519150601f19603f3d011682016040523d82523d5f602084013e610167565b606091505b5091509150816101b05760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161010f565b505050565b5f602082840312156101c5575f80fd5b81356001600160a01b03811681146101db575f80fd5b939250505056fea2646970667358221220056e34670d7e307bcb00f270ac839c2dd65af9986e80e19517260fd4a452286364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x636E082B EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x74BE4806 EQ PUSH2 0x4C JUMPI DUP1 PUSH4 0x830C29AE EQ PUSH2 0x5F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH2 0x45 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x5A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0xA8 JUMP JUMPDEST PUSH2 0x4A PUSH2 0x6D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0xA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x162 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x167 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH15 0x34670D7E307BCB00F270AC839C2DD6 GAS 0xF9 SWAP9 PUSH15 0x80E19517260FD4A452286364736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "675:808:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:170;;;;;;:::i;:::-;;:::i;:::-;;876:286;;;;;;:::i;:::-;;:::i;1168:313::-;;;;;;:::i;:::-;;:::i;700:170::-;840:23;;-1:-1:-1;;;;;840:12:0;;;853:9;840:23;;;;;;;;;853:9;840:12;:23;;;;;;;;;;;;;;;;;;;;;700:170;:::o;876:286::-;1089:19;;1077:9;;-1:-1:-1;;;;;1089:8:0;;;1098:9;1089:19;;;;;1077:9;1089:19;1077:9;1089:19;1098:9;1089:8;:19;;;;;;;1077:31;;1126:4;1118:37;;;;-1:-1:-1;;;1118:37:0;;515:2:1;1118:37:0;;;497:21:1;554:2;534:18;;;527:30;-1:-1:-1;;;573:18:1;;;566:50;633:18;;1118:37:0;;;;;;;;1168:313;1365:9;1376:17;1397:3;-1:-1:-1;;;;;1397:8:0;1413:9;1397:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:63;;;;1445:4;1437:37;;;;-1:-1:-1;;;1437:37:0;;515:2:1;1437:37:0;;;497:21:1;554:2;534:18;;;527:30;-1:-1:-1;;;573:18:1;;;566:50;633:18;;1437:37:0;313:344:1;1437:37:0;1225:256;;1168:313;:::o;14:294:1:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;176:23;;-1:-1:-1;;;;;228:31:1;;218:42;;208:70;;274:1;271;264:12;208:70;297:5;14:294;-1:-1:-1;;;14:294:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "107200",
								"executionCost": "151",
								"totalCost": "107351"
							},
							"external": {
								"sendViaCall(address)": "infinite",
								"sendViaSend(address)": "infinite",
								"sendViaTransfer(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 675,
									"end": 1483,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 1483,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220056e34670d7e307bcb00f270ac839c2dd65af9986e80e19517260fd4a452286364736f6c63430008190033",
									".code": [
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "636E082B"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "74BE4806"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "830C29AE"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 1483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 700,
											"end": 870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 700,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 700,
											"end": 870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 700,
											"end": 870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 700,
											"end": 870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 700,
											"end": 870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 700,
											"end": 870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 876,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 876,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1168,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1168,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 700,
											"end": 870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 840,
											"end": 852,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 840,
											"end": 852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 840,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 862,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 840,
											"end": 863,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 840,
											"end": 852,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 840,
											"end": 863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 840,
											"end": 863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 840,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 876,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1086,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 554,
											"end": 556,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 534,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 534,
											"end": 552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 534,
											"end": 552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 527,
											"end": 557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2330B4B632B2103A379039B2B7321022BA3432B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 573,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 573,
											"end": 591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 573,
											"end": 591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 566,
											"end": 616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 554,
											"end": 556,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 534,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 534,
											"end": 552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 534,
											"end": 552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 527,
											"end": 557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2330B4B632B2103A379039B2B7321022BA3432B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 573,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 573,
											"end": 591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 573,
											"end": 591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 566,
											"end": 616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 633,
											"end": 651,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 633,
											"end": 651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 313,
											"end": 657,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1437,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 308,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 81,
											"end": 87,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 122,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 120,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 109,
											"end": 132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 105,
											"end": 137,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 102,
											"end": 154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 102,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 150,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 140,
											"end": 152,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 102,
											"end": 154,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 199,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 228,
											"end": 259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 228,
											"end": 259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 218,
											"end": 260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 260,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 208,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 208,
											"end": 278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 264,
											"end": 276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 208,
											"end": 278,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 208,
											"end": 278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 302,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"sendViaCall(address)": "830c29ae",
							"sendViaSend(address)": "74be4806",
							"sendViaTransfer(address)": "636e082b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"sendViaCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"sendViaSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"sendViaTransfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":\"SendEther\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol\":{\"keccak256\":\"0x7a73ae600dde868cffabd7b920d28b85716cb7c068a8b17b0509b40301fa859e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8627c0b54834318b2d7aaa88604ef68bda07c34425f4a1e7af0244b4665b21b8\",\"dweb:/ipfs/QmYrQ7AnkcPhHNhuNALRn7WqsXwwauffHmiN2Ky34HENjG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> .learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol:48:21:\n   |\n48 |         (bool sent, bytes memory data) = _to.call{value: msg.value}(\"\");\n   |                     ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1393,
					"file": ".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol",
					"start": 1376
				},
				"type": "Warning"
			}
		],
		"sources": {
			".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol": {
				"ast": {
					"absolutePath": ".learneth/ethereum/remix-workshops/10.3 Transactions - Sending Ether/sendingEther_answer.sol",
					"exportedSymbols": {
						"Charity": [
							120
						],
						"ReceiveEther": [
							22
						],
						"SendEther": [
							78
						]
					},
					"id": 121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReceiveEther",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "ReceiveEther",
							"nameLocation": "66:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "471:2:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:0:0"
									},
									"scope": 22,
									"src": "444:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 8,
										"nodeType": "Block",
										"src": "569:2:0",
										"statements": []
									},
									"id": 9,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:0:0"
									},
									"scope": 22,
									"src": "541:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "626:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 16,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "651:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ReceiveEther_$22",
																	"typeString": "contract ReceiveEther"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ReceiveEther_$22",
																	"typeString": "contract ReceiveEther"
																}
															],
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 14,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "643:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "643:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "657:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "643:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 13,
												"id": 19,
												"nodeType": "Return",
												"src": "636:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "586:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "620:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:6:0"
									},
									"scope": 22,
									"src": "577:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 121,
							"src": "57:616:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SendEther",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "SendEther",
							"nameLocation": "684:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "761:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 30,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "853:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "857:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "853:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 27,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "840:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "844:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "840:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "840:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "840:23:0"
											}
										]
									},
									"functionSelector": "636e082b",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendViaTransfer",
									"nameLocation": "709:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "741:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "725:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:21:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:0"
									},
									"scope": 78,
									"src": "700:170:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "933:229:0",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1082:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "1077:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 40,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 44,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1098:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1102:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1098:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 42,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1089:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1093:4:0",
														"memberName": "send",
														"nodeType": "MemberAccess",
														"src": "1089:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1077:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1126:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204574686572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1132:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															},
															"value": "Failed to send Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1118:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1118:37:0"
											}
										]
									},
									"functionSelector": "74be4806",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendViaSend",
									"nameLocation": "885:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "913:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "897:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:21:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "933:0:0"
									},
									"scope": 78,
									"src": "876:286:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1225:256:0",
										"statements": [
											{
												"assignments": [
													60,
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1370:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 76,
														"src": "1365:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1389:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 76,
														"src": "1376:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 61,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1376:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 70,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1424:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 63,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "1397:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1401:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1397:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 65,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1413:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1417:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1413:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1397:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1397:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1364:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 72,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1445:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204574686572",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1451:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															},
															"value": "Failed to send Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1437:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1437:37:0"
											}
										]
									},
									"functionSelector": "830c29ae",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendViaCall",
									"nameLocation": "1177:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1205:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1189:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1189:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:21:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:0:0"
									},
									"scope": 78,
									"src": "1168:313:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 121,
							"src": "675:808:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Charity",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 120,
							"linearizedBaseContracts": [
								120
							],
							"name": "Charity",
							"nameLocation": "1494:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 80,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1523:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "1508:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 79,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1508:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1553:35:0",
										"statements": [
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 83,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 84,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1571:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1575:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1571:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1563:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1563:18:0"
											}
										]
									},
									"id": 89,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1550:2:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1553:0:0"
									},
									"scope": 120,
									"src": "1539:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1631:2:0",
										"statements": []
									},
									"functionSelector": "ed88c68e",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "1607:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:0:0"
									},
									"scope": 120,
									"src": "1598:35:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1666:155:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1676:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 96,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1676:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 103,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 100,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1698:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Charity_$120",
																	"typeString": "contract Charity"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Charity_$120",
																	"typeString": "contract Charity"
																}
															],
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 98,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1690:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1690:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1704:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1690:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:35:0"
											},
											{
												"assignments": [
													105,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 105,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1728:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1723:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 104,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1723:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 112,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1764:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 106,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1738:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1744:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1738:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 108,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "1756:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1738:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1738:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1722:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 114,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1785:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204574686572",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1791:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															},
															"value": "Failed to send Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1777:37:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1648:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:0:0"
									},
									"scope": 120,
									"src": "1639:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 121,
							"src": "1485:338:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1791:0"
				},
				"id": 0
			}
		}
	}
}