{
	"id": "331471e7775815cb79c77e3ffde56f69",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.3;\n\ncontract FunctionModifier {\n    // We will use these variables to demonstrate how to use\n    // modifiers.\n    address public owner;\n    uint public x = 10;\n    bool public locked;\n\n    constructor() {\n        // Set the transaction sender as the owner of the contract.\n        owner = msg.sender;\n    }\n\n    // Modifier to check that the caller is the owner of\n    // the contract.\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not owner\");\n        // Underscore is a special character only used inside\n        // a function modifier and it tells Solidity to\n        // execute the rest of the code.\n        _;\n    }\n\n    // Modifiers can take inputs. This modifier checks that the\n    // address passed in is not the zero address.\n    modifier validAddress(address _addr) {\n        require(_addr != address(0), \"Not valid address\");\n        _;\n    }\n\n    function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {\n        owner = _newOwner;\n    }\n\n    // Modifiers can be called before and / or after a function.\n    // This modifier prevents a function from being called while\n    // it is still executing.\n    modifier noReentrancy() {\n        require(!locked, \"No reentrancy\");\n\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    function decrement(uint i) public noReentrancy {\n        x -= i;\n\n        if (i > 1) {\n            decrement(i - 1);\n        }\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol": {
				"FunctionModifier": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "decrement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "locked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":57:1487  contract FunctionModifier {... */\n  mstore(0x40, 0x80)\n    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":210:212  10 */\n  0x0a\n    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":194:212  uint public x = 10 */\n  0x01\n  sstore\n    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":243:360  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":335:340  owner */\n  0x00\n    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":335:353  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":343:353  msg.sender */\n  caller\n    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":335:353  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":57:1487  contract FunctionModifier {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":57:1487  contract FunctionModifier {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c55699c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3a9ebefd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa6f9dae1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xcf309012\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":194:212  uint public x = 10 */\n    tag_3:\n      tag_8\n      sload(0x01)\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":194:212  uint public x = 10 */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1353:1485  function decrement(uint i) public noReentrancy {... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":168:188  address public owner */\n    tag_5:\n      sload(0x00)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":545:577   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":527:578   */\n      dup2\n      mstore\n        /* \"#utility.yul\":515:517   */\n      0x20\n        /* \"#utility.yul\":500:518   */\n      add\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":168:188  address public owner */\n      tag_10\n        /* \"#utility.yul\":381:584   */\n      jump\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":933:1048  function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {... */\n    tag_6:\n      tag_12\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":218:236  bool public locked */\n    tag_7:\n      sload(0x02)\n      tag_24\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1045:1059   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1038:1060   */\n      iszero\n        /* \"#utility.yul\":1020:1061   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1008:1010   */\n      0x20\n        /* \"#utility.yul\":993:1011   */\n      add\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":218:236  bool public locked */\n      tag_10\n        /* \"#utility.yul\":880:1067   */\n      jump\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1353:1485  function decrement(uint i) public noReentrancy {... */\n    tag_15:\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1257:1263  locked */\n      and(0xff, sload(0x02))\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1256:1263  !locked */\n      iszero\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1248:1281  require(!locked, \"No reentrancy\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1274:1276   */\n      0x20\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1248:1281  require(!locked, \"No reentrancy\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1256:1277   */\n      mstore\n        /* \"#utility.yul\":1313:1315   */\n      0x0d\n        /* \"#utility.yul\":1293:1311   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1286:1316   */\n      mstore\n      shl(0x98, 0x4e6f207265656e7472616e6379)\n        /* \"#utility.yul\":1332:1350   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1325:1368   */\n      mstore\n        /* \"#utility.yul\":1385:1403   */\n      0x64\n      add\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1248:1281  require(!locked, \"No reentrancy\") */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1292:1298  locked */\n      0x02\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1292:1305  locked = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1301:1305  true */\n      0x01\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1292:1305  locked = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1410:1416  x -= i */\n      dup1\n      sload\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1415:1416  i */\n      dup3\n      swap2\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1301:1305  true */\n      swap1\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1292:1298  locked */\n      0x00\n      swap1\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1410:1416  x -= i */\n      tag_33\n      swap1\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1415:1416  i */\n      dup5\n      swap1\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1410:1416  x -= i */\n      tag_34\n      jump\t// in\n    tag_33:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1435:1436  1 */\n      0x01\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1431:1436  i > 1 */\n      dup2\n      gt\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1427:1479  if (i > 1) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1452:1468  decrement(i - 1) */\n      tag_36\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1462:1467  i - 1 */\n      tag_13\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1466:1467  1 */\n      0x01\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1462:1463  i */\n      dup4\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1462:1467  i - 1 */\n      tag_34\n      jump\t// in\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1452:1468  decrement(i - 1) */\n    tag_36:\n      pop\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1326:1332  locked */\n      0x02\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1326:1340  locked = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1353:1485  function decrement(uint i) public noReentrancy {... */\n      jump\t// out\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":933:1048  function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {... */\n    tag_23:\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":497:502  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":483:493  msg.sender */\n      caller\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":483:502  msg.sender == owner */\n      eq\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":475:516  require(msg.sender == owner, \"Not owner\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1846:1848   */\n      0x20\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":475:516  require(msg.sender == owner, \"Not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1828:1849   */\n      mstore\n        /* \"#utility.yul\":1885:1886   */\n      0x09\n        /* \"#utility.yul\":1865:1883   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1858:1887   */\n      mstore\n      shl(0xb9, 0x2737ba1037bbb732b9)\n        /* \"#utility.yul\":1903:1921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1896:1935   */\n      mstore\n        /* \"#utility.yul\":1952:1970   */\n      0x64\n      add\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":475:516  require(msg.sender == owner, \"Not owner\") */\n      tag_30\n        /* \"#utility.yul\":1644:1976   */\n      jump\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":475:516  require(msg.sender == owner, \"Not owner\") */\n    tag_39:\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1003:1012  _newOwner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":868:887  _addr != address(0) */\n      dup2\n      and\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":860:909  require(_addr != address(0), \"Not valid address\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2183:2185   */\n      0x20\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":860:909  require(_addr != address(0), \"Not valid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2165:2186   */\n      mstore\n        /* \"#utility.yul\":2222:2224   */\n      0x11\n        /* \"#utility.yul\":2202:2220   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2195:2225   */\n      mstore\n      shl(0x78, 0x4e6f742076616c69642061646472657373)\n        /* \"#utility.yul\":2241:2259   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2234:2281   */\n      mstore\n        /* \"#utility.yul\":2298:2316   */\n      0x64\n      add\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":860:909  require(_addr != address(0), \"Not valid address\") */\n      tag_30\n        /* \"#utility.yul\":1981:2322   */\n      jump\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":860:909  require(_addr != address(0), \"Not valid address\") */\n    tag_43:\n      pop\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1024:1029  owner */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":1024:1041  owner = _newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":933:1048  function changeOwner(address _newOwner) public onlyOwner validAddress(_newOwner) {... */\n      jump\t// out\n        /* \"#utility.yul\":196:376   */\n    tag_14:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_50:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:875   */\n    tag_22:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":701:703   */\n      0x20\n        /* \"#utility.yul\":689:698   */\n      dup3\n        /* \"#utility.yul\":680:687   */\n      dup5\n        /* \"#utility.yul\":676:699   */\n      sub\n        /* \"#utility.yul\":672:704   */\n      slt\n        /* \"#utility.yul\":669:721   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":717:718   */\n      0x00\n        /* \"#utility.yul\":714:715   */\n      dup1\n        /* \"#utility.yul\":707:719   */\n      revert\n        /* \"#utility.yul\":669:721   */\n    tag_53:\n        /* \"#utility.yul\":743:766   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":795:826   */\n      dup2\n      and\n        /* \"#utility.yul\":785:827   */\n      dup2\n      eq\n        /* \"#utility.yul\":775:845   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":841:842   */\n      0x00\n        /* \"#utility.yul\":838:839   */\n      dup1\n        /* \"#utility.yul\":831:843   */\n      revert\n        /* \"#utility.yul\":775:845   */\n    tag_54:\n        /* \"#utility.yul\":864:869   */\n      swap4\n        /* \"#utility.yul\":589:875   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1414:1639   */\n    tag_34:\n        /* \"#utility.yul\":1481:1490   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1502:1513   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1499:1633   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1555:1565   */\n      0x4e487b71\n        /* \"#utility.yul\":1550:1553   */\n      0xe0\n        /* \"#utility.yul\":1546:1566   */\n      shl\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1536:1567   */\n      mstore\n        /* \"#utility.yul\":1590:1594   */\n      0x11\n        /* \"#utility.yul\":1587:1588   */\n      0x04\n        /* \"#utility.yul\":1580:1595   */\n      mstore\n        /* \"#utility.yul\":1618:1622   */\n      0x24\n        /* \"#utility.yul\":1615:1616   */\n      0x00\n        /* \"#utility.yul\":1608:1623   */\n      revert\n        /* \"#utility.yul\":1499:1633   */\n    tag_58:\n        /* \"#utility.yul\":1414:1639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c40a03ef1633cad2a871ddf4fc8afc5803697d0a7b2d579f973ae25a9730f8a964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600a600155348015610014575f80fd5b505f80546001600160a01b031916331790556102c8806100335f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80630c55699c146100595780633a9ebefd146100755780638da5cb5b1461008a578063a6f9dae1146100b4578063cf309012146100c7575b5f80fd5b61006260015481565b6040519081526020015b60405180910390f35b610088610083366004610229565b6100e4565b005b5f5461009c906001600160a01b031681565b6040516001600160a01b03909116815260200161006c565b6100886100c2366004610240565b610177565b6002546100d49060ff1681565b604051901515815260200161006c565b60025460ff161561012c5760405162461bcd60e51b815260206004820152600d60248201526c4e6f207265656e7472616e637960981b60448201526064015b60405180910390fd5b6002805460ff1916600190811790915580548291905f9061014e90849061026d565b9091555050600181111561016a5761016a61008360018361026d565b506002805460ff19169055565b5f546001600160a01b031633146101bc5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610123565b806001600160a01b0381166102075760405162461bcd60e51b81526020600482015260116024820152704e6f742076616c6964206164647265737360781b6044820152606401610123565b505f80546001600160a01b0319166001600160a01b0392909216919091179055565b5f60208284031215610239575f80fd5b5035919050565b5f60208284031215610250575f80fd5b81356001600160a01b0381168114610266575f80fd5b9392505050565b8181038181111561028c57634e487b7160e01b5f52601160045260245ffd5b9291505056fea2646970667358221220c40a03ef1633cad2a871ddf4fc8afc5803697d0a7b2d579f973ae25a9730f8a964736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2C8 DUP1 PUSH2 0x33 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x3A9EBEFD EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xCF309012 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x229 JUMP JUMPDEST PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C JUMP JUMPDEST PUSH2 0x88 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x240 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F207265656E7472616E6379 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH0 SWAP1 PUSH2 0x14E SWAP1 DUP5 SWAP1 PUSH2 0x26D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16A JUMPI PUSH2 0x16A PUSH2 0x83 PUSH1 0x1 DUP4 PUSH2 0x26D JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F742076616C69642061646472657373 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x123 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x28C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 EXP SUB 0xEF AND CALLER 0xCA 0xD2 0xA8 PUSH18 0xDDF4FC8AFC5803697D0A7B2D579F973AE25A SWAP8 ADDRESS 0xF8 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57:1430:0:-:0;;;210:2;194:18;;243:117;;;;;;;;;-1:-1:-1;335:5:0;:18;;-1:-1:-1;;;;;;335:18:0;343:10;335:18;;;57:1430;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@changeOwner_60": {
									"entryPoint": 375,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decrement_101": {
									"entryPoint": 228,
									"id": 101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@locked_8": {
									"entryPoint": null,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@x_6": {
									"entryPoint": null,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36eebddbf802e1cdcddad2b477585a755cd53423db8d0d8f4151b4fa07952290__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d17f111d8107180607ed86ffb77564df19875349979563d887311241874db137__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2324:1",
										"nodeType": "YulBlock",
										"src": "0:2324:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:1",
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:25:1",
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nativeSrc": "160:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "266:110:1",
													"nodeType": "YulBlock",
													"src": "266:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:1",
																"nodeType": "YulBlock",
																"src": "312:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:1",
																					"nodeType": "YulLiteral",
																					"src": "321:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:1",
																					"nodeType": "YulLiteral",
																					"src": "324:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:1"
																			},
																			"nativeSrc": "314:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:1"
																		},
																		"nativeSrc": "314:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:1"
																		},
																		"nativeSrc": "283:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "308:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:1"
																},
																"nativeSrc": "279:32:1",
																"nodeType": "YulFunctionCall",
																"src": "279:32:1"
															},
															"nativeSrc": "276:52:1",
															"nodeType": "YulIf",
															"src": "276:52:1"
														},
														{
															"nativeSrc": "337:33:1",
															"nodeType": "YulAssignment",
															"src": "337:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "347:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:1"
																},
																"nativeSrc": "347:23:1",
																"nodeType": "YulFunctionCall",
																"src": "347:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "337:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:1",
														"nodeType": "YulTypedName",
														"src": "232:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:1",
														"nodeType": "YulTypedName",
														"src": "243:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:1",
														"nodeType": "YulTypedName",
														"src": "255:6:1",
														"type": ""
													}
												],
												"src": "196:180:1"
											},
											{
												"body": {
													"nativeSrc": "482:102:1",
													"nodeType": "YulBlock",
													"src": "482:102:1",
													"statements": [
														{
															"nativeSrc": "492:26:1",
															"nodeType": "YulAssignment",
															"src": "492:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "504:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "504:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "515:2:1",
																		"nodeType": "YulLiteral",
																		"src": "515:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:18:1",
																"nodeType": "YulFunctionCall",
																"src": "500:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "492:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "492:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "534:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "534:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "549:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "565:3:1",
																								"nodeType": "YulLiteral",
																								"src": "565:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "570:1:1",
																								"nodeType": "YulLiteral",
																								"src": "570:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "561:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "561:3:1"
																						},
																						"nativeSrc": "561:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "561:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "574:1:1",
																						"nodeType": "YulLiteral",
																						"src": "574:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "557:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "557:3:1"
																				},
																				"nativeSrc": "557:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "557:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "545:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:1"
																		},
																		"nativeSrc": "545:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "545:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "527:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:1"
																},
																"nativeSrc": "527:51:1",
																"nodeType": "YulFunctionCall",
																"src": "527:51:1"
															},
															"nativeSrc": "527:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "527:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "381:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "451:9:1",
														"nodeType": "YulTypedName",
														"src": "451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "462:6:1",
														"nodeType": "YulTypedName",
														"src": "462:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "473:4:1",
														"nodeType": "YulTypedName",
														"src": "473:4:1",
														"type": ""
													}
												],
												"src": "381:203:1"
											},
											{
												"body": {
													"nativeSrc": "659:216:1",
													"nodeType": "YulBlock",
													"src": "659:216:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "705:16:1",
																"nodeType": "YulBlock",
																"src": "705:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "714:1:1",
																					"nodeType": "YulLiteral",
																					"src": "714:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "717:1:1",
																					"nodeType": "YulLiteral",
																					"src": "717:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "707:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nativeSrc": "707:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "707:12:1"
																		},
																		"nativeSrc": "707:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "707:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "680:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "680:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "689:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "689:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "676:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:1"
																		},
																		"nativeSrc": "676:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "676:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "701:2:1",
																		"nodeType": "YulLiteral",
																		"src": "701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "672:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "672:3:1"
																},
																"nativeSrc": "672:32:1",
																"nodeType": "YulFunctionCall",
																"src": "672:32:1"
															},
															"nativeSrc": "669:52:1",
															"nodeType": "YulIf",
															"src": "669:52:1"
														},
														{
															"nativeSrc": "730:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "730:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "756:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "756:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "743:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "743:12:1"
																},
																"nativeSrc": "743:23:1",
																"nodeType": "YulFunctionCall",
																"src": "743:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "734:5:1",
																	"nodeType": "YulTypedName",
																	"src": "734:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "829:16:1",
																"nodeType": "YulBlock",
																"src": "829:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "838:1:1",
																					"nodeType": "YulLiteral",
																					"src": "838:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "841:1:1",
																					"nodeType": "YulLiteral",
																					"src": "841:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "831:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "831:6:1"
																			},
																			"nativeSrc": "831:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "831:12:1"
																		},
																		"nativeSrc": "831:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "831:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "788:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "788:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "799:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "799:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "814:3:1",
																										"nodeType": "YulLiteral",
																										"src": "814:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "819:1:1",
																										"nodeType": "YulLiteral",
																										"src": "819:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "810:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "810:3:1"
																								},
																								"nativeSrc": "810:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "810:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "823:1:1",
																								"nodeType": "YulLiteral",
																								"src": "823:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "806:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "806:3:1"
																						},
																						"nativeSrc": "806:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "806:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "795:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:1"
																				},
																				"nativeSrc": "795:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "795:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "785:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "785:2:1"
																		},
																		"nativeSrc": "785:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "785:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "778:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:6:1"
																},
																"nativeSrc": "778:50:1",
																"nodeType": "YulFunctionCall",
																"src": "778:50:1"
															},
															"nativeSrc": "775:70:1",
															"nodeType": "YulIf",
															"src": "775:70:1"
														},
														{
															"nativeSrc": "854:15:1",
															"nodeType": "YulAssignment",
															"src": "854:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "864:5:1",
																"nodeType": "YulIdentifier",
																"src": "864:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "854:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "854:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "589:286:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "625:9:1",
														"nodeType": "YulTypedName",
														"src": "625:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "636:7:1",
														"nodeType": "YulTypedName",
														"src": "636:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "648:6:1",
														"nodeType": "YulTypedName",
														"src": "648:6:1",
														"type": ""
													}
												],
												"src": "589:286:1"
											},
											{
												"body": {
													"nativeSrc": "975:92:1",
													"nodeType": "YulBlock",
													"src": "975:92:1",
													"statements": [
														{
															"nativeSrc": "985:26:1",
															"nodeType": "YulAssignment",
															"src": "985:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "997:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "997:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1008:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1008:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "993:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "993:3:1"
																},
																"nativeSrc": "993:18:1",
																"nodeType": "YulFunctionCall",
																"src": "993:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "985:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "985:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1027:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1027:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1052:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1052:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1045:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1045:6:1"
																				},
																				"nativeSrc": "1045:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1045:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1038:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1038:6:1"
																		},
																		"nativeSrc": "1038:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1038:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1020:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:1"
																},
																"nativeSrc": "1020:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1020:41:1"
															},
															"nativeSrc": "1020:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1020:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "880:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "944:9:1",
														"nodeType": "YulTypedName",
														"src": "944:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "955:6:1",
														"nodeType": "YulTypedName",
														"src": "955:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "966:4:1",
														"nodeType": "YulTypedName",
														"src": "966:4:1",
														"type": ""
													}
												],
												"src": "880:187:1"
											},
											{
												"body": {
													"nativeSrc": "1246:163:1",
													"nodeType": "YulBlock",
													"src": "1246:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1263:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1274:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1274:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:21:1"
															},
															"nativeSrc": "1256:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1297:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1297:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1308:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1308:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1293:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:1"
																		},
																		"nativeSrc": "1293:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1293:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1313:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:1"
																},
																"nativeSrc": "1286:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1286:30:1"
															},
															"nativeSrc": "1286:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1286:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1336:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1347:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1332:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:1"
																		},
																		"nativeSrc": "1332:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:1"
																	},
																	{
																		"hexValue": "4e6f207265656e7472616e6379",
																		"kind": "string",
																		"nativeSrc": "1352:15:1",
																		"nodeType": "YulLiteral",
																		"src": "1352:15:1",
																		"type": "",
																		"value": "No reentrancy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1325:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:1"
																},
																"nativeSrc": "1325:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1325:43:1"
															},
															"nativeSrc": "1325:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "1325:43:1"
														},
														{
															"nativeSrc": "1377:26:1",
															"nodeType": "YulAssignment",
															"src": "1377:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1389:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1389:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1400:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1400:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1385:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1385:3:1"
																},
																"nativeSrc": "1385:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1385:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1377:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1377:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36eebddbf802e1cdcddad2b477585a755cd53423db8d0d8f4151b4fa07952290__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1072:337:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1223:9:1",
														"nodeType": "YulTypedName",
														"src": "1223:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1237:4:1",
														"nodeType": "YulTypedName",
														"src": "1237:4:1",
														"type": ""
													}
												],
												"src": "1072:337:1"
											},
											{
												"body": {
													"nativeSrc": "1463:176:1",
													"nodeType": "YulBlock",
													"src": "1463:176:1",
													"statements": [
														{
															"nativeSrc": "1473:17:1",
															"nodeType": "YulAssignment",
															"src": "1473:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1485:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1485:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1488:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1488:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:1"
																},
																"nativeSrc": "1481:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1481:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1473:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1522:111:1",
																"nodeType": "YulBlock",
																"src": "1522:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1543:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1543:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1550:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1550:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1555:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1555:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1546:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1546:3:1"
																					},
																					"nativeSrc": "1546:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1546:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1536:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1536:6:1"
																			},
																			"nativeSrc": "1536:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1536:31:1"
																		},
																		"nativeSrc": "1536:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1536:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1587:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1590:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1590:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1580:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1580:6:1"
																			},
																			"nativeSrc": "1580:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1580:15:1"
																		},
																		"nativeSrc": "1580:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1580:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1615:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1615:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1618:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1618:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1608:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:1"
																			},
																			"nativeSrc": "1608:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1608:15:1"
																		},
																		"nativeSrc": "1608:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1608:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1505:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1505:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1511:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1511:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1502:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1502:2:1"
																},
																"nativeSrc": "1502:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1502:11:1"
															},
															"nativeSrc": "1499:134:1",
															"nodeType": "YulIf",
															"src": "1499:134:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1414:225:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1445:1:1",
														"nodeType": "YulTypedName",
														"src": "1445:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1448:1:1",
														"nodeType": "YulTypedName",
														"src": "1448:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1454:4:1",
														"nodeType": "YulTypedName",
														"src": "1454:4:1",
														"type": ""
													}
												],
												"src": "1414:225:1"
											},
											{
												"body": {
													"nativeSrc": "1818:158:1",
													"nodeType": "YulBlock",
													"src": "1818:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1835:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1835:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1846:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1846:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1828:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:1"
																},
																"nativeSrc": "1828:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1828:21:1"
															},
															"nativeSrc": "1828:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1828:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1869:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1880:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1880:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1865:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:1"
																		},
																		"nativeSrc": "1865:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1865:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1885:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1885:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1858:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:1"
																},
																"nativeSrc": "1858:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1858:29:1"
															},
															"nativeSrc": "1858:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "1858:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1907:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1907:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1918:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1918:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1903:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1903:3:1"
																		},
																		"nativeSrc": "1903:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1903:18:1"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1923:11:1",
																		"nodeType": "YulLiteral",
																		"src": "1923:11:1",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1896:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:1"
																},
																"nativeSrc": "1896:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1896:39:1"
															},
															"nativeSrc": "1896:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "1896:39:1"
														},
														{
															"nativeSrc": "1944:26:1",
															"nodeType": "YulAssignment",
															"src": "1944:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1956:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1956:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1967:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1967:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1952:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:1"
																},
																"nativeSrc": "1952:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1952:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1944:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1944:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1644:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:1",
														"nodeType": "YulTypedName",
														"src": "1795:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1809:4:1",
														"nodeType": "YulTypedName",
														"src": "1809:4:1",
														"type": ""
													}
												],
												"src": "1644:332:1"
											},
											{
												"body": {
													"nativeSrc": "2155:167:1",
													"nodeType": "YulBlock",
													"src": "2155:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2172:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2172:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2183:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2183:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:1"
																},
																"nativeSrc": "2165:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2165:21:1"
															},
															"nativeSrc": "2165:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2165:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2206:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2206:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2217:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2217:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2202:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2202:3:1"
																		},
																		"nativeSrc": "2202:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2202:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2222:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2222:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2195:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:1"
																},
																"nativeSrc": "2195:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2195:30:1"
															},
															"nativeSrc": "2195:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "2195:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2245:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2245:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2256:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2256:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2241:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:1"
																		},
																		"nativeSrc": "2241:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2241:18:1"
																	},
																	{
																		"hexValue": "4e6f742076616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "2261:19:1",
																		"nodeType": "YulLiteral",
																		"src": "2261:19:1",
																		"type": "",
																		"value": "Not valid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2234:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:1"
																},
																"nativeSrc": "2234:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2234:47:1"
															},
															"nativeSrc": "2234:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2234:47:1"
														},
														{
															"nativeSrc": "2290:26:1",
															"nodeType": "YulAssignment",
															"src": "2290:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2302:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2302:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2313:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2313:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2298:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:1"
																},
																"nativeSrc": "2298:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2298:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2290:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2290:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d17f111d8107180607ed86ffb77564df19875349979563d887311241874db137__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1981:341:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2132:9:1",
														"nodeType": "YulTypedName",
														"src": "2132:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2146:4:1",
														"nodeType": "YulTypedName",
														"src": "2146:4:1",
														"type": ""
													}
												],
												"src": "1981:341:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_36eebddbf802e1cdcddad2b477585a755cd53423db8d0d8f4151b4fa07952290__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"No reentrancy\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d17f111d8107180607ed86ffb77564df19875349979563d887311241874db137__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Not valid address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80630c55699c146100595780633a9ebefd146100755780638da5cb5b1461008a578063a6f9dae1146100b4578063cf309012146100c7575b5f80fd5b61006260015481565b6040519081526020015b60405180910390f35b610088610083366004610229565b6100e4565b005b5f5461009c906001600160a01b031681565b6040516001600160a01b03909116815260200161006c565b6100886100c2366004610240565b610177565b6002546100d49060ff1681565b604051901515815260200161006c565b60025460ff161561012c5760405162461bcd60e51b815260206004820152600d60248201526c4e6f207265656e7472616e637960981b60448201526064015b60405180910390fd5b6002805460ff1916600190811790915580548291905f9061014e90849061026d565b9091555050600181111561016a5761016a61008360018361026d565b506002805460ff19169055565b5f546001600160a01b031633146101bc5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610123565b806001600160a01b0381166102075760405162461bcd60e51b81526020600482015260116024820152704e6f742076616c6964206164647265737360781b6044820152606401610123565b505f80546001600160a01b0319166001600160a01b0392909216919091179055565b5f60208284031215610239575f80fd5b5035919050565b5f60208284031215610250575f80fd5b81356001600160a01b0381168114610266575f80fd5b9392505050565b8181038181111561028c57634e487b7160e01b5f52601160045260245ffd5b9291505056fea2646970667358221220c40a03ef1633cad2a871ddf4fc8afc5803697d0a7b2d579f973ae25a9730f8a964736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x3A9EBEFD EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xCF309012 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x229 JUMP JUMPDEST PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C JUMP JUMPDEST PUSH2 0x88 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x240 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F207265656E7472616E6379 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH0 SWAP1 PUSH2 0x14E SWAP1 DUP5 SWAP1 PUSH2 0x26D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16A JUMPI PUSH2 0x16A PUSH2 0x83 PUSH1 0x1 DUP4 PUSH2 0x26D JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F742076616C69642061646472657373 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x123 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x28C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 EXP SUB 0xEF AND CALLER 0xCA 0xD2 0xA8 PUSH18 0xDDF4FC8AFC5803697D0A7B2D579F973AE25A SWAP8 ADDRESS 0xF8 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57:1430:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:18;;;;;;;;;160:25:1;;;148:2;133:18;194::0;;;;;;;;1353:132;;;;;;:::i;:::-;;:::i;:::-;;168:20;;;;;-1:-1:-1;;;;;168:20:0;;;;;;-1:-1:-1;;;;;545:32:1;;;527:51;;515:2;500:18;168:20:0;381:203:1;933:115:0;;;;;;:::i;:::-;;:::i;218:18::-;;;;;;;;;;;;1045:14:1;;1038:22;1020:41;;1008:2;993:18;218::0;880:187:1;1353:132:0;1257:6;;;;1256:7;1248:33;;;;-1:-1:-1;;;1248:33:0;;1274:2:1;1248:33:0;;;1256:21:1;1313:2;1293:18;;;1286:30;-1:-1:-1;;;1332:18:1;;;1325:43;1385:18;;1248:33:0;;;;;;;;;1292:6;:13;;-1:-1:-1;;1292:13:0;1301:4;1292:13;;;;;;1410:6;;1415:1;;1301:4;1292:6;;1410::::1;::::0;1415:1;;1410:6:::1;:::i;:::-;::::0;;;-1:-1:-1;;1435:1:0::1;1431:5:::0;::::1;1427:52;;;1452:16;1462:5;1466:1;1462::::0;:5:::1;:::i;1452:16::-;-1:-1:-1::0;1326:6:0;:14;;-1:-1:-1;;1326:14:0;;;1353:132::o;933:115::-;497:5;;-1:-1:-1;;;;;497:5:0;483:10;:19;475:41;;;;-1:-1:-1;;;475:41:0;;1846:2:1;475:41:0;;;1828:21:1;1885:1;1865:18;;;1858:29;-1:-1:-1;;;1903:18:1;;;1896:39;1952:18;;475:41:0;1644:332:1;475:41:0;1003:9;-1:-1:-1;;;;;868:19:0;::::1;860:49;;;::::0;-1:-1:-1;;;860:49:0;;2183:2:1;860:49:0::1;::::0;::::1;2165:21:1::0;2222:2;2202:18;;;2195:30;-1:-1:-1;;;2241:18:1;;;2234:47;2298:18;;860:49:0::1;1981:341:1::0;860:49:0::1;-1:-1:-1::0;1024:5:0::2;:17:::0;;-1:-1:-1;;;;;;1024:17:0::2;-1:-1:-1::0;;;;;1024:17:0;;;::::2;::::0;;;::::2;::::0;;933:115::o;196:180:1:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:1;;196:180;-1:-1:-1;196:180:1:o;589:286::-;648:6;701:2;689:9;680:7;676:23;672:32;669:52;;;717:1;714;707:12;669:52;743:23;;-1:-1:-1;;;;;795:31:1;;785:42;;775:70;;841:1;838;831:12;775:70;864:5;589:286;-1:-1:-1;;;589:286:1:o;1414:225::-;1481:9;;;1502:11;;;1499:134;;;1555:10;1550:3;1546:20;1543:1;1536:31;1590:4;1587:1;1580:15;1618:4;1615:1;1608:15;1499:134;1414:225;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "142400",
								"executionCost": "46528",
								"totalCost": "188928"
							},
							"external": {
								"changeOwner(address)": "26756",
								"decrement(uint256)": "infinite",
								"locked()": "2375",
								"owner()": "2357",
								"x()": "2261"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1487,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 210,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 194,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 212,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 243,
									"end": 360,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 243,
									"end": 360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 243,
									"end": 360,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 243,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 360,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 243,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 243,
									"end": 360,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 243,
									"end": 360,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 360,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 335,
									"end": 340,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 335,
									"end": 353,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 335,
									"end": 353,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 343,
									"end": 353,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 335,
									"end": 353,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 335,
									"end": 353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 335,
									"end": 353,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1487,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c40a03ef1633cad2a871ddf4fc8afc5803697d0a7b2d579f973ae25a9730f8a964736f6c63430008180033",
									".code": [
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "C55699C"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "3A9EBEFD"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "A6F9DAE1"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "CF309012"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 212,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 194,
											"end": 212,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 212,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1353,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1353,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 188,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 168,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 168,
											"end": 188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 168,
											"end": 188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 168,
											"end": 188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 188,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 545,
											"end": 577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 545,
											"end": 577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 527,
											"end": 578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 527,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 168,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 584,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 933,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 933,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 218,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 218,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 218,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 218,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 218,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 218,
											"end": 236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 218,
											"end": 236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 218,
											"end": 236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 218,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 218,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 218,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 880,
											"end": 1067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1353,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207265656E7472616E6379"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1248,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1410,
											"end": 1416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1410,
											"end": 1416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1431,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1436,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1427,
											"end": 1479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1462,
											"end": 1467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1466,
											"end": 1467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1462,
											"end": 1467,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1452,
											"end": 1468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1326,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1326,
											"end": 1340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1340,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 933,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 497,
											"end": 502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 483,
											"end": 493,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 483,
											"end": 502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 475,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 475,
											"end": 516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 475,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 475,
											"end": 516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 475,
											"end": 516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 475,
											"end": 516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1886,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1903,
											"end": 1921,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1903,
											"end": 1921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 475,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1644,
											"end": 1976,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 516,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 475,
											"end": 516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 868,
											"end": 887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 860,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 860,
											"end": 909,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 860,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 860,
											"end": 909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 860,
											"end": 909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 860,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 860,
											"end": 909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 860,
											"end": 909,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2224,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F742076616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2241,
											"end": 2259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 860,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1981,
											"end": 2322,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 860,
											"end": 909,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 860,
											"end": 909,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1024,
											"end": 1029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1024,
											"end": 1041,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"modifierDepth": 2,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1041,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 933,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 875,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 589,
											"end": 875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 689,
											"end": 698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 680,
											"end": 687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 676,
											"end": 699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 672,
											"end": 704,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 669,
											"end": 721,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 669,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 669,
											"end": 721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 717,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 707,
											"end": 719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 669,
											"end": 721,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 669,
											"end": 721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 743,
											"end": 766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 766,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 795,
											"end": 826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 795,
											"end": 826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 785,
											"end": 827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 775,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 775,
											"end": 845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 841,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 775,
											"end": 845,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 775,
											"end": 845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 864,
											"end": 869,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 589,
											"end": 875,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 589,
											"end": 875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1414,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1513,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1499,
											"end": 1633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1550,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1594,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1580,
											"end": 1595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1622,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1615,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1633,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1499,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1",
							"decrement(uint256)": "3a9ebefd",
							"locked()": "cf309012",
							"owner()": "8da5cb5b",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"decrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":\"FunctionModifier\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol\":{\"keccak256\":\"0x7939f32b86fbb587215512f0755e9c3df61d9b4e985a73b70bd26438f6f529ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aaadc6f07581bf8639db38fc71a04aa2f8f134a5602b771e5e4bf9ce98a679b\",\"dweb:/ipfs/Qmd8tLJNWypUia3EeeY8uiLr4zayMc1Shu1U2soHcxQ7Yu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": ".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol:FunctionModifier",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 6,
								"contract": ".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol:FunctionModifier",
								"label": "x",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": ".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol:FunctionModifier",
								"label": "locked",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol": {
				"ast": {
					"absolutePath": ".learneth/ethereum/remix-workshops/5.3 Functions - Modifiers and Constructors/modifiersAndConstructors.sol",
					"exportedSymbols": {
						"FunctionModifier": [
							102
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FunctionModifier",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "FunctionModifier",
							"nameLocation": "66:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "183:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "168:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0c55699c",
									"id": 6,
									"mutability": "mutable",
									"name": "x",
									"nameLocation": "206:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "194:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "194:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "210:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cf309012",
									"id": 8,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "230:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "218:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 7,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "218:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "257:103:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "335:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 12,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "343:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "347:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "343:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "335:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "335:18:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:0:0"
									},
									"scope": 102,
									"src": "243:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "465:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 20,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "483:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "487:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "483:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 22,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "497:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "483:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "504:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "475:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "475:41:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "685:1:0"
											}
										]
									},
									"id": 29,
									"name": "onlyOwner",
									"nameLocation": "453:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:0"
									},
									"src": "444:249:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "850:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 34,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "868:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "885:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "877:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 35,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "877:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "877:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "868:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742076616c69642061646472657373",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "889:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d17f111d8107180607ed86ffb77564df19875349979563d887311241874db137",
																"typeString": "literal_string \"Not valid address\""
															},
															"value": "Not valid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d17f111d8107180607ed86ffb77564df19875349979563d887311241874db137",
																"typeString": "literal_string \"Not valid address\""
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "860:49:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "919:1:0"
											}
										]
									},
									"id": 45,
									"name": "validAddress",
									"nameLocation": "822:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "843:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "835:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:15:0"
									},
									"src": "813:114:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1014:34:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1024:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 56,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1032:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1024:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1024:17:0"
											}
										]
									},
									"functionSelector": "a6f9dae1",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nameLocations": [
													"980:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "980:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "980:9:0"
										},
										{
											"arguments": [
												{
													"id": 52,
													"name": "_newOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "1003:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 53,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 51,
												"name": "validAddress",
												"nameLocations": [
													"990:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "990:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "990:23:0"
										}
									],
									"name": "changeOwner",
									"nameLocation": "942:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "962:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "954:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:19:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:0:0"
									},
									"scope": 102,
									"src": "933:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1238:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1256:7:0",
															"subExpression": {
																"id": 63,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1257:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265656e7472616e6379",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1265:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36eebddbf802e1cdcddad2b477585a755cd53423db8d0d8f4151b4fa07952290",
																"typeString": "literal_string \"No reentrancy\""
															},
															"value": "No reentrancy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36eebddbf802e1cdcddad2b477585a755cd53423db8d0d8f4151b4fa07952290",
																"typeString": "literal_string \"No reentrancy\""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1248:33:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1292:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1301:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1292:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1292:13:0"
											},
											{
												"id": 72,
												"nodeType": "PlaceholderStatement",
												"src": "1315:1:0"
											},
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1326:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1335:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1326:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1326:14:0"
											}
										]
									},
									"id": 78,
									"name": "noReentrancy",
									"nameLocation": "1223:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:2:0"
									},
									"src": "1214:133:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1400:85:0",
										"statements": [
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1410:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 86,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1415:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1410:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1410:6:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 89,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1435:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "IfStatement",
												"src": "1427:52:0",
												"trueBody": {
													"id": 98,
													"nodeType": "Block",
													"src": "1438:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 93,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "1462:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 94,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1466:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1462:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 92,
																	"name": "decrement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "1452:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1452:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 97,
															"nodeType": "ExpressionStatement",
															"src": "1452:16:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3a9ebefd",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 83,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 82,
												"name": "noReentrancy",
												"nameLocations": [
													"1387:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 78,
												"src": "1387:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1387:12:0"
										}
									],
									"name": "decrement",
									"nameLocation": "1362:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "1377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1372:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:8:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1400:0:0"
									},
									"scope": 102,
									"src": "1353:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 103,
							"src": "57:1430:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1455:0"
				},
				"id": 0
			}
		}
	}
}