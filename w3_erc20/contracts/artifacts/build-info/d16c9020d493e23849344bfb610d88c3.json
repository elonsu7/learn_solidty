{
	"id": "d16c9020d493e23849344bfb610d88c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity 0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\n\ncontract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    mapping(address => uint) private _nonces;\n\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\n            \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n        );\n\n    constructor(\n        string memory name,\n        string memory symbol\n    ) EIP712(name, \"1\") ERC20(name, symbol) {}\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"expired deadline\");\n\n        // 拼接Hash\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        // 从签名和消息计算 signer, 并验证签名\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        // 授权\n         _approve(owner, spender, value);\n    }\n\n    function nonces(\n        address owner\n    ) public view virtual override returns (uint256) {\n        return _nonces[owner];\n    }\n\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    function _useNonce(\n        address owner\n    ) internal virtual returns (uint256 current) {\n        current = _nonces[owner];\n        _nonces[owner] += 1;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122034939e91a425ce1800412d66e249d2b5b153eabfbeeb3b56393b440fef3c2c6064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122034939e91a425ce1800412d66e249d2b5b153eabfbeeb3b56393b440fef3c2c6064736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP4 SWAP15 SWAP2 LOG4 0x25 0xCE XOR STOP COINBASE 0x2D PUSH7 0xE249D2B5B153EA 0xBF 0xBE 0xEB EXTCODESIZE JUMP CODECOPY EXTCODESIZE PREVRANDAO 0xF 0xEF EXTCODECOPY 0x2C PUSH1 0x64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "1255:3053:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3053:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122034939e91a425ce1800412d66e249d2b5b153eabfbeeb3b56393b440fef3c2c6064736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP4 SWAP15 SWAP2 LOG4 0x25 0xCE XOR STOP COINBASE 0x2D PUSH7 0xE249D2B5B153EA 0xBF 0xBE 0xEB EXTCODESIZE JUMP CODECOPY EXTCODESIZE PREVRANDAO 0xF 0xEF EXTCODECOPY 0x2C PUSH1 0x64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "1255:3053:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034939e91a425ce1800412d66e249d2b5b153eabfbeeb3b56393b440fef3c2c6064736f6c63430008180033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122066086c7570929673b83c358d1c98bc6ef9ef28f132a2d90935fc5f46f3821a2164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122066086c7570929673b83c358d1c98bc6ef9ef28f132a2d90935fc5f46f3821a2164736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x86C7570929673 0xB8 EXTCODECOPY CALLDATALOAD DUP14 SHR SWAP9 0xBC PUSH15 0xF9EF28F132A2D90935FC5F46F3821A 0x21 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122066086c7570929673b83c358d1c98bc6ef9ef28f132a2d90935fc5f46f3821a2164736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x86C7570929673 0xB8 EXTCODECOPY CALLDATALOAD DUP14 SHR SWAP9 0xBC PUSH15 0xF9EF28F132A2D90935FC5F46F3821A 0x21 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066086c7570929673b83c358d1c98bc6ef9ef28f132a2d90935fc5f46f3821a2164736f6c63430008180033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220259d7e68bffbc4888354cff095e9700ca0e729a422f1e73d4bd1edda5be5eb4f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220259d7e68bffbc4888354cff095e9700ca0e729a422f1e73d4bd1edda5be5eb4f64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 SWAP14 PUSH31 0x68BFFBC4888354CFF095E9700CA0E729A422F1E73D4BD1EDDA5BE5EB4F6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220259d7e68bffbc4888354cff095e9700ca0e729a422f1e73d4bd1edda5be5eb4f64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 SWAP14 PUSH31 0x68BFFBC4888354CFF095E9700CA0E729A422F1E73D4BD1EDDA5BE5EB4F6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220259d7e68bffbc4888354cff095e9700ca0e729a422f1e73d4bd1edda5be5eb4f64736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f4ee0ad9bf976350b9e57846cdb7450afd685251ceceddea6f43aeb55ba299f464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f4ee0ad9bf976350b9e57846cdb7450afd685251ceceddea6f43aeb55ba299f464736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xEE EXP 0xD9 0xBF SWAP8 PUSH4 0x50B9E578 CHAINID 0xCD 0xB7 GASLIMIT EXP REVERT PUSH9 0x5251CECEDDEA6F43AE 0xB5 JUMPDEST LOG2 SWAP10 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "344:7386:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7386:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f4ee0ad9bf976350b9e57846cdb7450afd685251ceceddea6f43aeb55ba299f464736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xEE EXP 0xD9 0xBF SWAP8 PUSH4 0x50B9E578 CHAINID 0xCD 0xB7 GASLIMIT EXP REVERT PUSH9 0x5251CECEDDEA6F43AE 0xB5 JUMPDEST LOG2 SWAP10 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "344:7386:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4ee0ad9bf976350b9e57846cdb7450afd685251ceceddea6f43aeb55ba299f464736f6c63430008180033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1813,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1815,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e1d9266f8495dc67860a6580c3dd25f3e403c5e7fc4e569987ccdf2a638374364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1d9266f8495dc67860a6580c3dd25f3e403c5e7fc4e569987ccdf2a638374364736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SAR SWAP3 PUSH7 0xF8495DC67860A6 PC 0xC RETURNDATASIZE 0xD2 PUSH0 RETURNDATACOPY BLOCKHASH EXTCODECOPY MCOPY PUSH32 0xC4E569987CCDF2A638374364736F6C6343000818003300000000000000000000 ",
							"sourceMap": "521:3235:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1d9266f8495dc67860a6580c3dd25f3e403c5e7fc4e569987ccdf2a638374364736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SAR SWAP3 PUSH7 0xF8495DC67860A6 PC 0xC RETURNDATASIZE 0xD2 PUSH0 RETURNDATACOPY BLOCKHASH EXTCODECOPY MCOPY PUSH32 0xC4E569987CCDF2A638374364736F6C6343000818003300000000000000000000 ",
							"sourceMap": "521:3235:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e1d9266f8495dc67860a6580c3dd25f3e403c5e7fc4e569987ccdf2a638374364736f6c63430008180033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e5c5f8e782acf3a91d0c2e50dd08225fc7d98efe12ce9b6efc9da9c3b81380564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e5c5f8e782acf3a91d0c2e50dd08225fc7d98efe12ce9b6efc9da9c3b81380564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE TLOAD PUSH0 DUP15 PUSH25 0x2ACF3A91D0C2E50DD08225FC7D98EFE12CE9B6EFC9DA9C3B81 CODESIZE SDIV PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e5c5f8e782acf3a91d0c2e50dd08225fc7d98efe12ce9b6efc9da9c3b81380564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE TLOAD PUSH0 DUP15 PUSH25 0x2ACF3A91D0C2E50DD08225FC7D98EFE12CE9B6EFC9DA9C3B81 CODESIZE SDIV PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e5c5f8e782acf3a91d0c2e50dd08225fc7d98efe12ce9b6efc9da9c3b81380564736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061fb3ed9d696de4660ca5b1ed459bdcf198b51aa0555d84731e0d1d93c27455564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061fb3ed9d696de4660ca5b1ed459bdcf198b51aa0555d84731e0d1d93c27455564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFB3E 0xD9 0xD6 SWAP7 0xDE CHAINID PUSH1 0xCA JUMPDEST 0x1E 0xD4 MSIZE 0xBD 0xCF NOT DUP12 MLOAD 0xAA SDIV SSTORE 0xD8 SELFBALANCE BALANCE 0xE0 0xD1 0xD9 EXTCODECOPY 0x27 GASLIMIT SSTORE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061fb3ed9d696de4660ca5b1ed459bdcf198b51aa0555d84731e0d1d93c27455564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFB3E 0xD9 0xD6 SWAP7 0xDE CHAINID PUSH1 0xCA JUMPDEST 0x1E 0xD4 MSIZE 0xBD 0xCF NOT DUP12 MLOAD 0xAA SDIV SSTORE 0xD8 SELFBALANCE BALANCE 0xE0 0xD1 0xD9 EXTCODECOPY 0x27 GASLIMIT SSTORE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061fb3ed9d696de4660ca5b1ed459bdcf198b51aa0555d84731e0d1d93c27455564736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20Permit.sol\":334:1874  contract ERC20Permit is ERC20, IERC20Permit, EIP712 {... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/ERC20Permit.sol\":615:731  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"contracts/ERC20Permit.sol\":698:702  name */\n  dup3\n  swap1\n  dup2\n    /* \"contracts/ERC20Permit.sol\":721:727  symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_8\n    /* \"contracts/ERC20Permit.sol\":698:702  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_12\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x05\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  tag_13\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_14\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x06\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  tag_13\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup2\n  mload\n  swap1\n  dup3\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_15\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x40\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x20\n  dup3\n  add\n    /* \"#utility.yul\":4486:4511   */\n  mstore\n    /* \"#utility.yul\":4527:4545   */\n  swap1\n  dup2\n  add\n    /* \"#utility.yul\":4520:4554   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":4570:4588   */\n  0x60\n  dup3\n  add\n    /* \"#utility.yul\":4563:4597   */\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"#utility.yul\":4613:4631   */\n  0x80\n  dup3\n  add\n    /* \"#utility.yul\":4606:4640   */\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"#utility.yul\":4656:4675   */\n  0xa0\n  dup3\n  add\n    /* \"#utility.yul\":4649:4710   */\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n  swap1\n    /* \"#utility.yul\":4458:4477   */\n  0xc0\n  add\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xc0\n  mstore\n  pop\n    /* \"contracts/ERC20Permit.sol\":334:1874  contract ERC20Permit is ERC20, IERC20Permit, EIP712 {... */\n  tag_44\n  swap1\n  pop\n  jump\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_21\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  tag_22\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  tag_26\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup5\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  tag_9\n  jump\t// in\ntag_26:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  shl(0xe0, 0x305a27a9)\n  dup2\n  mstore\n  0x04\n  add\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_34\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n  swap4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_37:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:396   */\ntag_38:\n    /* \"#utility.yul\":231:232   */\n  0x00\n    /* \"#utility.yul\":241:354   */\ntag_47:\n    /* \"#utility.yul\":255:261   */\n  dup4\n    /* \"#utility.yul\":252:253   */\n  dup2\n    /* \"#utility.yul\":249:262   */\n  lt\n    /* \"#utility.yul\":241:354   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":331:342   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":325:343   */\n  mload\n    /* \"#utility.yul\":312:323   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":305:344   */\n  mstore\n    /* \"#utility.yul\":277:279   */\n  0x20\n    /* \"#utility.yul\":270:280   */\n  add\n    /* \"#utility.yul\":241:354   */\n  jump(tag_47)\ntag_49:\n  pop\n  pop\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":370:386   */\n  swap2\n  add\n    /* \"#utility.yul\":363:390   */\n  mstore\n    /* \"#utility.yul\":146:396   */\n  jump\t// out\n    /* \"#utility.yul\":401:1100   */\ntag_39:\n    /* \"#utility.yul\":455:460   */\n  0x00\n    /* \"#utility.yul\":508:511   */\n  dup3\n    /* \"#utility.yul\":501:505   */\n  0x1f\n    /* \"#utility.yul\":493:499   */\n  dup4\n    /* \"#utility.yul\":489:506   */\n  add\n    /* \"#utility.yul\":485:512   */\n  slt\n    /* \"#utility.yul\":475:530   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":523:524   */\n  dup1\n    /* \"#utility.yul\":516:528   */\n  revert\n    /* \"#utility.yul\":475:530   */\ntag_51:\n    /* \"#utility.yul\":549:562   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":611:621   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":608:644   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":624:642   */\n  tag_53\n  tag_37\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":699:701   */\n  0x40\n    /* \"#utility.yul\":693:702   */\n  mload\n    /* \"#utility.yul\":667:669   */\n  0x1f\n    /* \"#utility.yul\":753:766   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":749:771   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":773:775   */\n  0x3f\n    /* \"#utility.yul\":745:776   */\n  add\n    /* \"#utility.yul\":741:781   */\n  and\n    /* \"#utility.yul\":729:782   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":797:815   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":817:839   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":794:840   */\n  or\n    /* \"#utility.yul\":791:863   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":843:861   */\n  tag_55\n  tag_37\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":883:893   */\n  dup2\n    /* \"#utility.yul\":879:881   */\n  0x40\n    /* \"#utility.yul\":872:894   */\n  mstore\n    /* \"#utility.yul\":918:920   */\n  dup4\n    /* \"#utility.yul\":910:916   */\n  dup2\n    /* \"#utility.yul\":903:921   */\n  mstore\n    /* \"#utility.yul\":964:967   */\n  dup7\n    /* \"#utility.yul\":957:961   */\n  0x20\n    /* \"#utility.yul\":952:954   */\n  dup6\n    /* \"#utility.yul\":944:950   */\n  dup9\n    /* \"#utility.yul\":940:955   */\n  add\n    /* \"#utility.yul\":936:962   */\n  add\n    /* \"#utility.yul\":933:968   */\n  gt\n    /* \"#utility.yul\":930:985   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":981:982   */\n  0x00\n    /* \"#utility.yul\":978:979   */\n  dup1\n    /* \"#utility.yul\":971:983   */\n  revert\n    /* \"#utility.yul\":930:985   */\ntag_56:\n    /* \"#utility.yul\":994:1070   */\n  tag_57\n    /* \"#utility.yul\":1067:1069   */\n  dup5\n    /* \"#utility.yul\":1060:1064   */\n  0x20\n    /* \"#utility.yul\":1052:1058   */\n  dup4\n    /* \"#utility.yul\":1048:1065   */\n  add\n    /* \"#utility.yul\":1041:1045   */\n  0x20\n    /* \"#utility.yul\":1033:1039   */\n  dup10\n    /* \"#utility.yul\":1029:1046   */\n  add\n    /* \"#utility.yul\":994:1070   */\n  tag_38\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1088:1094   */\n  swap7\n    /* \"#utility.yul\":401:1100   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1105:1667   */\ntag_3:\n    /* \"#utility.yul\":1204:1210   */\n  0x00\n    /* \"#utility.yul\":1212:1218   */\n  dup1\n    /* \"#utility.yul\":1265:1267   */\n  0x40\n    /* \"#utility.yul\":1253:1262   */\n  dup4\n    /* \"#utility.yul\":1244:1251   */\n  dup6\n    /* \"#utility.yul\":1240:1263   */\n  sub\n    /* \"#utility.yul\":1236:1268   */\n  slt\n    /* \"#utility.yul\":1233:1285   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1281:1282   */\n  0x00\n    /* \"#utility.yul\":1278:1279   */\n  dup1\n    /* \"#utility.yul\":1271:1283   */\n  revert\n    /* \"#utility.yul\":1233:1285   */\ntag_59:\n    /* \"#utility.yul\":1308:1324   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1373:1387   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1370:1404   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1400:1401   */\n  0x00\n    /* \"#utility.yul\":1397:1398   */\n  dup1\n    /* \"#utility.yul\":1390:1402   */\n  revert\n    /* \"#utility.yul\":1370:1404   */\ntag_60:\n    /* \"#utility.yul\":1423:1484   */\n  tag_61\n    /* \"#utility.yul\":1476:1483   */\n  dup7\n    /* \"#utility.yul\":1467:1473   */\n  dup4\n    /* \"#utility.yul\":1456:1465   */\n  dup8\n    /* \"#utility.yul\":1452:1474   */\n  add\n    /* \"#utility.yul\":1423:1484   */\n  tag_39\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1413:1484   */\n  swap4\n  pop\n    /* \"#utility.yul\":1530:1532   */\n  0x20\n    /* \"#utility.yul\":1519:1528   */\n  dup6\n    /* \"#utility.yul\":1515:1533   */\n  add\n    /* \"#utility.yul\":1509:1534   */\n  mload\n    /* \"#utility.yul\":1493:1534   */\n  swap2\n  pop\n    /* \"#utility.yul\":1559:1561   */\n  dup1\n    /* \"#utility.yul\":1549:1557   */\n  dup3\n    /* \"#utility.yul\":1546:1562   */\n  gt\n    /* \"#utility.yul\":1543:1579   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1575:1576   */\n  0x00\n    /* \"#utility.yul\":1572:1573   */\n  dup1\n    /* \"#utility.yul\":1565:1577   */\n  revert\n    /* \"#utility.yul\":1543:1579   */\ntag_62:\n  pop\n    /* \"#utility.yul\":1598:1661   */\n  tag_63\n    /* \"#utility.yul\":1653:1660   */\n  dup6\n    /* \"#utility.yul\":1642:1650   */\n  dup3\n    /* \"#utility.yul\":1631:1640   */\n  dup7\n    /* \"#utility.yul\":1627:1651   */\n  add\n    /* \"#utility.yul\":1598:1661   */\n  tag_39\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1588:1661   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1105:1667   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:2052   */\ntag_40:\n    /* \"#utility.yul\":1751:1752   */\n  0x01\n    /* \"#utility.yul\":1747:1759   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1794:1806   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1815:1876   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1869:1873   */\n  0x7f\n    /* \"#utility.yul\":1861:1867   */\n  dup3\n    /* \"#utility.yul\":1857:1874   */\n  and\n    /* \"#utility.yul\":1847:1874   */\n  swap2\n  pop\n    /* \"#utility.yul\":1815:1876   */\ntag_65:\n    /* \"#utility.yul\":1922:1924   */\n  0x20\n    /* \"#utility.yul\":1914:1920   */\n  dup3\n    /* \"#utility.yul\":1911:1925   */\n  lt\n    /* \"#utility.yul\":1891:1909   */\n  dup2\n    /* \"#utility.yul\":1888:1926   */\n  sub\n    /* \"#utility.yul\":1885:2046   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1968:1978   */\n  0x4e487b71\n    /* \"#utility.yul\":1963:1966   */\n  0xe0\n    /* \"#utility.yul\":1959:1979   */\n  shl\n    /* \"#utility.yul\":1956:1957   */\n  0x00\n    /* \"#utility.yul\":1949:1980   */\n  mstore\n    /* \"#utility.yul\":2003:2007   */\n  0x22\n    /* \"#utility.yul\":2000:2001   */\n  0x04\n    /* \"#utility.yul\":1993:2008   */\n  mstore\n    /* \"#utility.yul\":2031:2035   */\n  0x24\n    /* \"#utility.yul\":2028:2029   */\n  0x00\n    /* \"#utility.yul\":2021:2036   */\n  revert\n    /* \"#utility.yul\":1885:2046   */\ntag_66:\n  pop\n    /* \"#utility.yul\":1672:2052   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2183:2701   */\ntag_42:\n    /* \"#utility.yul\":2285:2287   */\n  0x1f\n    /* \"#utility.yul\":2280:2283   */\n  dup3\n    /* \"#utility.yul\":2277:2288   */\n  gt\n    /* \"#utility.yul\":2274:2695   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2321:2326   */\n  dup1\n    /* \"#utility.yul\":2318:2319   */\n  0x00\n    /* \"#utility.yul\":2311:2327   */\n  mstore\n    /* \"#utility.yul\":2365:2369   */\n  0x20\n    /* \"#utility.yul\":2362:2363   */\n  0x00\n    /* \"#utility.yul\":2352:2370   */\n  keccak256\n    /* \"#utility.yul\":2435:2437   */\n  0x1f\n    /* \"#utility.yul\":2423:2433   */\n  dup5\n    /* \"#utility.yul\":2419:2438   */\n  add\n    /* \"#utility.yul\":2416:2417   */\n  0x05\n    /* \"#utility.yul\":2412:2439   */\n  shr\n    /* \"#utility.yul\":2406:2410   */\n  dup2\n    /* \"#utility.yul\":2402:2440   */\n  add\n    /* \"#utility.yul\":2471:2475   */\n  0x20\n    /* \"#utility.yul\":2459:2469   */\n  dup6\n    /* \"#utility.yul\":2456:2476   */\n  lt\n    /* \"#utility.yul\":2453:2500   */\n  iszero\n  tag_70\n  jumpi\n  pop\n    /* \"#utility.yul\":2494:2498   */\n  dup1\n    /* \"#utility.yul\":2453:2500   */\ntag_70:\n    /* \"#utility.yul\":2549:2551   */\n  0x1f\n    /* \"#utility.yul\":2544:2547   */\n  dup5\n    /* \"#utility.yul\":2540:2552   */\n  add\n    /* \"#utility.yul\":2537:2538   */\n  0x05\n    /* \"#utility.yul\":2533:2553   */\n  shr\n    /* \"#utility.yul\":2527:2531   */\n  dup3\n    /* \"#utility.yul\":2523:2554   */\n  add\n    /* \"#utility.yul\":2513:2554   */\n  swap2\n  pop\n    /* \"#utility.yul\":2604:2685   */\ntag_71:\n    /* \"#utility.yul\":2622:2624   */\n  dup2\n    /* \"#utility.yul\":2615:2620   */\n  dup2\n    /* \"#utility.yul\":2612:2625   */\n  lt\n    /* \"#utility.yul\":2604:2685   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2681:2682   */\n  0x00\n    /* \"#utility.yul\":2667:2683   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2648:2649   */\n  0x01\n    /* \"#utility.yul\":2637:2650   */\n  add\n    /* \"#utility.yul\":2604:2685   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2608:2611   */\n  pop\n  pop\n    /* \"#utility.yul\":2274:2695   */\ntag_69:\n    /* \"#utility.yul\":2183:2701   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2877:4222   */\ntag_9:\n    /* \"#utility.yul\":2997:3007   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3019:3049   */\n  dup2\n  gt\n    /* \"#utility.yul\":3016:3072   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3052:3070   */\n  tag_77\n  tag_37\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3081:3178   */\n  tag_78\n    /* \"#utility.yul\":3171:3177   */\n  dup2\n    /* \"#utility.yul\":3131:3169   */\n  tag_79\n    /* \"#utility.yul\":3163:3167   */\n  dup5\n    /* \"#utility.yul\":3157:3168   */\n  sload\n    /* \"#utility.yul\":3131:3169   */\n  tag_40\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3125:3129   */\n  dup5\n    /* \"#utility.yul\":3081:3178   */\n  tag_42\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3233:3237   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3290:3292   */\n  0x1f\n    /* \"#utility.yul\":3279:3293   */\n  dup4\n  gt\n    /* \"#utility.yul\":3307:3308   */\n  0x01\n    /* \"#utility.yul\":3302:3965   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4009:4010   */\n  0x00\n    /* \"#utility.yul\":4026:4032   */\n  dup5\n    /* \"#utility.yul\":4023:4112   */\n  iszero\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":4078:4097   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4072:4098   */\n  mload\n    /* \"#utility.yul\":4023:4112   */\ntag_82:\n  not(0x00)\n    /* \"#utility.yul\":2834:2835   */\n  0x03\n    /* \"#utility.yul\":2830:2841   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2826:2850   */\n  shr\n    /* \"#utility.yul\":2822:2851   */\n  not\n    /* \"#utility.yul\":2812:2852   */\n  and\n    /* \"#utility.yul\":2858:2859   */\n  0x01\n    /* \"#utility.yul\":2854:2865   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2809:2866   */\n  or\n    /* \"#utility.yul\":4125:4206   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3272:4216   */\n  jump(tag_80)\n    /* \"#utility.yul\":3302:3965   */\ntag_81:\n    /* \"#utility.yul\":2130:2131   */\n  0x00\n    /* \"#utility.yul\":2123:2137   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2167:2171   */\n  0x20\n    /* \"#utility.yul\":2154:2172   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3338:3358   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3456:3692   */\ntag_85:\n    /* \"#utility.yul\":3470:3477   */\n  dup3\n    /* \"#utility.yul\":3467:3468   */\n  dup2\n    /* \"#utility.yul\":3464:3478   */\n  lt\n    /* \"#utility.yul\":3456:3692   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3559:3578   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3553:3579   */\n  mload\n    /* \"#utility.yul\":3538:3580   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3651:3678   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3619:3620   */\n  0x01\n    /* \"#utility.yul\":3607:3621   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3486:3505   */\n  dup5\n  add\n    /* \"#utility.yul\":3456:3692   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":3460:3463   */\n  pop\n    /* \"#utility.yul\":3720:3726   */\n  dup6\n    /* \"#utility.yul\":3711:3718   */\n  dup3\n    /* \"#utility.yul\":3708:3727   */\n  lt\n    /* \"#utility.yul\":3705:3906   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3781:3800   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3775:3801   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3864:3865   */\n  0x03\n    /* \"#utility.yul\":3860:3874   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3876:3879   */\n  0xf8\n    /* \"#utility.yul\":3856:3880   */\n  and\n    /* \"#utility.yul\":3852:3889   */\n  shr\n    /* \"#utility.yul\":3848:3890   */\n  not\n    /* \"#utility.yul\":3833:3891   */\n  and\n    /* \"#utility.yul\":3818:3892   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3705:3906   */\ntag_88:\n  pop\n  pop\n    /* \"#utility.yul\":3952:3953   */\n  0x01\n    /* \"#utility.yul\":3943:3949   */\n  dup5\n    /* \"#utility.yul\":3940:3941   */\n  0x01\n    /* \"#utility.yul\":3936:3950   */\n  shl\n    /* \"#utility.yul\":3932:3954   */\n  add\n    /* \"#utility.yul\":3926:3930   */\n  dup6\n    /* \"#utility.yul\":3919:3955   */\n  sstore\n    /* \"#utility.yul\":3272:4216   */\ntag_80:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2877:4222   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4721:5117   */\ntag_33:\n    /* \"#utility.yul\":4870:4872   */\n  0x20\n    /* \"#utility.yul\":4859:4868   */\n  dup2\n    /* \"#utility.yul\":4852:4873   */\n  mstore\n    /* \"#utility.yul\":4833:4837   */\n  0x00\n    /* \"#utility.yul\":4902:4908   */\n  dup3\n    /* \"#utility.yul\":4896:4909   */\n  mload\n    /* \"#utility.yul\":4945:4951   */\n  dup1\n    /* \"#utility.yul\":4940:4942   */\n  0x20\n    /* \"#utility.yul\":4929:4938   */\n  dup5\n    /* \"#utility.yul\":4925:4943   */\n  add\n    /* \"#utility.yul\":4918:4952   */\n  mstore\n    /* \"#utility.yul\":4961:5040   */\n  tag_91\n    /* \"#utility.yul\":5033:5039   */\n  dup2\n    /* \"#utility.yul\":5028:5030   */\n  0x40\n    /* \"#utility.yul\":5017:5026   */\n  dup6\n    /* \"#utility.yul\":5013:5031   */\n  add\n    /* \"#utility.yul\":5008:5010   */\n  0x20\n    /* \"#utility.yul\":5000:5006   */\n  dup8\n    /* \"#utility.yul\":4996:5011   */\n  add\n    /* \"#utility.yul\":4961:5040   */\n  tag_38\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":5101:5103   */\n  0x1f\n    /* \"#utility.yul\":5080:5095   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":5076:5105   */\n  and\n    /* \"#utility.yul\":5061:5106   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":5108:5110   */\n  0x40\n    /* \"#utility.yul\":5057:5111   */\n  add\n  swap3\n    /* \"#utility.yul\":4721:5117   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5122:5419   */\ntag_35:\n    /* \"#utility.yul\":5240:5252   */\n  dup1\n  mload\n    /* \"#utility.yul\":5287:5291   */\n  0x20\n    /* \"#utility.yul\":5276:5292   */\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":5270:5293   */\n  mload\n  swap2\n    /* \"#utility.yul\":5240:5252   */\n  swap1\n    /* \"#utility.yul\":5305:5321   */\n  dup2\n  lt\n    /* \"#utility.yul\":5302:5413   */\n  iszero\n  tag_66\n  jumpi\n  not(0x00)\n    /* \"#utility.yul\":5379:5383   */\n  0x20\n    /* \"#utility.yul\":5375:5392   */\n  swap2\n  swap1\n  swap2\n  sub\n    /* \"#utility.yul\":5372:5373   */\n  0x03\n    /* \"#utility.yul\":5368:5393   */\n  shl\n    /* \"#utility.yul\":5364:5402   */\n  shl\n    /* \"#utility.yul\":5353:5403   */\n  and\n  swap2\n    /* \"#utility.yul\":5122:5419   */\n  swap1\n  pop\n  jump\t// out\ntag_44:\n    /* \"contracts/ERC20Permit.sol\":334:1874  contract ERC20Permit is ERC20, IERC20Permit, EIP712 {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xdd9d7302fc139f46b342d6a00d16640ad26e0bc63d18d904b0fd0879bd543656\")\n  0x00\n  assignImmutable(\"0x2d0b1bd72558a0b7426dbec12a9bdb1c2f8dc28ce8557a1e33206d9fa39043aa\")\n  0x00\n  assignImmutable(\"0xdeec7e2da59528c0740738c085b6302cca6e7c1c98de86f66c7abe55c648d8ee\")\n  0x00\n  assignImmutable(\"0xcd7029307d145e8114624cff759bc31df61936b65c1298e5a86d0f7d98ff9721\")\n  0x00\n  assignImmutable(\"0x59f40d5fdf1977cb80169560e7963351b8a751d0f730a704cbdf6c389513ebdb\")\n  0x00\n  assignImmutable(\"0x83f667baf055ec6ba0b029f987ea14029ddf8dec8c2a8d69b6e7f15dba2de6f5\")\n  0x00\n  assignImmutable(\"0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20Permit.sol\":334:1874  contract ERC20Permit is ERC20, IERC20Permit, EIP712 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1269:1283   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1262:1284   */\n      iszero\n        /* \"#utility.yul\":1244:1285   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1217:1235   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":1104:1291   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1442:1467   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1953:1989   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1811:1995   */\n      jump\n        /* \"contracts/ERC20Permit.sol\":1592:1705  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_8:\n      tag_28\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20Permit.sol\":1456:1586  function nonces(... */\n    tag_10:\n      tag_28\n      tag_51\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20Permit.sol\":1565:1579  _nonces[owner] */\n      and\n        /* \"contracts/ERC20Permit.sol\":1539:1546  uint256 */\n      0x00\n        /* \"contracts/ERC20Permit.sol\":1565:1579  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20Permit.sol\":1565:1572  _nonces */\n      0x07\n        /* \"contracts/ERC20Permit.sol\":1565:1579  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20Permit.sol\":1456:1586  function nonces(... */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_11:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_20\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_18\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_62\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"contracts/ERC20Permit.sol\":737:1450  function permit(... */\n    tag_14:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_28\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_76\n      jump\t// in\n    tag_77:\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_79\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_78)\n    tag_79:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_80:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_80\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_81:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_91:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Permit.sol\":1592:1705  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_42:\n        /* \"contracts/ERC20Permit.sol\":1652:1659  bytes32 */\n      0x00\n        /* \"contracts/ERC20Permit.sol\":1678:1698  _domainSeparatorV4() */\n      tag_95\n        /* \"contracts/ERC20Permit.sol\":1678:1696  _domainSeparatorV4 */\n      tag_96\n        /* \"contracts/ERC20Permit.sol\":1678:1698  _domainSeparatorV4() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/ERC20Permit.sol\":1671:1698  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"contracts/ERC20Permit.sol\":1592:1705  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_100\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_101\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      shl(0xf8, 0x0f)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      swap12\n      swap4\n      swap11\n      pop\n      swap2\n      swap9\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n      swap8\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/ERC20Permit.sol\":737:1450  function permit(... */\n    tag_68:\n        /* \"contracts/ERC20Permit.sol\":972:980  deadline */\n      dup4\n        /* \"contracts/ERC20Permit.sol\":953:968  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20Permit.sol\":953:980  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/ERC20Permit.sol\":945:1001  require(block.timestamp <= deadline, \"expired deadline\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5319:5321   */\n      0x20\n        /* \"contracts/ERC20Permit.sol\":945:1001  require(block.timestamp <= deadline, \"expired deadline\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5301:5322   */\n      mstore\n        /* \"#utility.yul\":5358:5360   */\n      0x10\n        /* \"#utility.yul\":5338:5356   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5331:5361   */\n      mstore\n      shl(0x80, 0x6578706972656420646561646c696e65)\n        /* \"#utility.yul\":5377:5395   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5370:5416   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x64\n      add\n        /* \"contracts/ERC20Permit.sol\":945:1001  require(block.timestamp <= deadline, \"expired deadline\") */\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/ERC20Permit.sol\":1034:1052  bytes32 structHash */\n      0x00\n        /* \"contracts/ERC20Permit.sol\":491:608  keccak256(... */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/ERC20Permit.sol\":1094:1099  owner */\n      dup9\n        /* \"contracts/ERC20Permit.sol\":1101:1108  spender */\n      dup9\n        /* \"contracts/ERC20Permit.sol\":1110:1115  value */\n      dup9\n        /* \"contracts/ERC20Permit.sol\":1117:1133  _useNonce(owner) */\n      tag_121\n        /* \"contracts/ERC20Permit.sol\":1127:1132  owner */\n      dup13\n        /* \"contracts/ERC20Permit.sol\":1117:1126  _useNonce */\n      tag_122\n        /* \"contracts/ERC20Permit.sol\":1117:1133  _useNonce(owner) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/ERC20Permit.sol\":1065:1144  abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":5749:5774   */\n      swap7\n      swap1\n      swap7\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5848:5863   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":5828:5846   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":5821:5864   */\n      mstore\n        /* \"#utility.yul\":5900:5915   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5880:5898   */\n      0x60\n      dup5\n      add\n        /* \"#utility.yul\":5873:5916   */\n      mstore\n        /* \"#utility.yul\":5932:5950   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":5925:5959   */\n      mstore\n        /* \"#utility.yul\":5975:5994   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":5968:6003   */\n      mstore\n        /* \"#utility.yul\":6019:6038   */\n      0xc0\n      dup2\n      add\n        /* \"#utility.yul\":6012:6047   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":5721:5740   */\n      0xe0\n      add\n        /* \"contracts/ERC20Permit.sol\":1065:1144  abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC20Permit.sol\":1055:1145  keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ERC20Permit.sol\":1034:1145  bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"contracts/ERC20Permit.sol\":1155:1167  bytes32 hash */\n      0x00\n        /* \"contracts/ERC20Permit.sol\":1170:1198  _hashTypedDataV4(structHash) */\n      tag_125\n        /* \"contracts/ERC20Permit.sol\":1187:1197  structHash */\n      dup3\n        /* \"contracts/ERC20Permit.sol\":1170:1186  _hashTypedDataV4 */\n      tag_126\n        /* \"contracts/ERC20Permit.sol\":1170:1198  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/ERC20Permit.sol\":1155:1198  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"contracts/ERC20Permit.sol\":1269:1283  address signer */\n      0x00\n        /* \"contracts/ERC20Permit.sol\":1286:1314  ECDSA.recover(hash, v, r, s) */\n      tag_127\n        /* \"contracts/ERC20Permit.sol\":1300:1304  hash */\n      dup3\n        /* \"contracts/ERC20Permit.sol\":1306:1307  v */\n      dup8\n        /* \"contracts/ERC20Permit.sol\":1309:1310  r */\n      dup8\n        /* \"contracts/ERC20Permit.sol\":1312:1313  s */\n      dup8\n        /* \"contracts/ERC20Permit.sol\":1286:1299  ECDSA.recover */\n      tag_128\n        /* \"contracts/ERC20Permit.sol\":1286:1314  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/ERC20Permit.sol\":1269:1314  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/ERC20Permit.sol\":1342:1347  owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20Permit.sol\":1332:1347  signer == owner */\n      and\n        /* \"contracts/ERC20Permit.sol\":1332:1338  signer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20Permit.sol\":1332:1347  signer == owner */\n      and\n      eq\n        /* \"contracts/ERC20Permit.sol\":1324:1382  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6260:6262   */\n      0x20\n        /* \"contracts/ERC20Permit.sol\":1324:1382  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6242:6263   */\n      mstore\n        /* \"#utility.yul\":6299:6301   */\n      0x1e\n        /* \"#utility.yul\":6279:6297   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6272:6302   */\n      mstore\n        /* \"#utility.yul\":6338:6370   */\n      0x45524332305065726d69743a20696e76616c6964207369676e61747572650000\n        /* \"#utility.yul\":6318:6336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6311:6371   */\n      mstore\n        /* \"#utility.yul\":6388:6406   */\n      0x64\n      add\n        /* \"contracts/ERC20Permit.sol\":1324:1382  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      tag_119\n        /* \"#utility.yul\":6058:6412   */\n      jump\n        /* \"contracts/ERC20Permit.sol\":1324:1382  require(signer == owner, \"ERC20Permit: invalid signature\") */\n    tag_129:\n        /* \"contracts/ERC20Permit.sol\":1412:1443  _approve(owner, spender, value) */\n      tag_132\n        /* \"contracts/ERC20Permit.sol\":1421:1426  owner */\n      dup11\n        /* \"contracts/ERC20Permit.sol\":1428:1435  spender */\n      dup11\n        /* \"contracts/ERC20Permit.sol\":1437:1442  value */\n      dup11\n        /* \"contracts/ERC20Permit.sol\":1412:1420  _approve */\n      tag_85\n        /* \"contracts/ERC20Permit.sol\":1412:1443  _approve(owner, spender, value) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC20Permit.sol\":935:1450  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20Permit.sol\":737:1450  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6637:6669   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6619:6670   */\n      mstore\n        /* \"#utility.yul\":6686:6704   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6679:6713   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6729:6747   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6722:6756   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6592:6610   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_119\n        /* \"#utility.yul\":6417:6762   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6913:6964   */\n      mstore\n        /* \"#utility.yul\":6886:6904   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_119\n        /* \"#utility.yul\":6767:6970   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6913:6964   */\n      mstore\n        /* \"#utility.yul\":6886:6904   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_119\n        /* \"#utility.yul\":6767:6970   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0x59f40d5fdf1977cb80169560e7963351b8a751d0f730a704cbdf6c389513ebdb\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_154\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0x83f667baf055ec6ba0b029f987ea14029ddf8dec8c2a8d69b6e7f15dba2de6f5\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480\")\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":7461:7486   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0xcd7029307d145e8114624cff759bc31df61936b65c1298e5a86d0f7d98ff9721\")\n        /* \"#utility.yul\":7502:7520   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":7495:7529   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0xdeec7e2da59528c0740738c085b6302cca6e7c1c98de86f66c7abe55c648d8ee\")\n        /* \"#utility.yul\":7545:7563   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":7538:7572   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"#utility.yul\":7588:7606   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":7581:7615   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"#utility.yul\":7631:7650   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":7624:7685   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":7433:7452   */\n      0xc0\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0x2d0b1bd72558a0b7426dbec12a9bdb1c2f8dc28ce8557a1e33206d9fa39043aa\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x05\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0xdd9d7302fc139f46b342d6a00d16640ad26e0bc63d18d904b0fd0879bd543656\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x06\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      jump\t// in\n        /* \"contracts/ERC20Permit.sol\":1711:1872  function _useNonce(... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20Permit.sol\":1822:1836  _nonces[owner] */\n      dup2\n      and\n        /* \"contracts/ERC20Permit.sol\":1785:1800  uint256 current */\n      0x00\n        /* \"contracts/ERC20Permit.sol\":1822:1836  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20Permit.sol\":1822:1829  _nonces */\n      0x07\n        /* \"contracts/ERC20Permit.sol\":1822:1836  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n      swap2\n        /* \"contracts/ERC20Permit.sol\":1864:1865  1 */\n      0x01\n      swap2\n        /* \"contracts/ERC20Permit.sol\":1822:1836  _nonces[owner] */\n      swap1\n        /* \"contracts/ERC20Permit.sol\":1846:1865  _nonces[owner] += 1 */\n      tag_165\n        /* \"contracts/ERC20Permit.sol\":1864:1865  1 */\n      dup4\n        /* \"contracts/ERC20Permit.sol\":1822:1836  _nonces[owner] */\n      dup6\n        /* \"contracts/ERC20Permit.sol\":1846:1865  _nonces[owner] += 1 */\n      tag_166\n      jump\t// in\n    tag_165:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ERC20Permit.sol\":1711:1872  function _useNonce(... */\n      swap1\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_81\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3555:3559  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3549:3560  mload(0x40) */\n      mload\n      shl(0xf0, 0x1901)\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3573:3596  mstore(ptr, hex\"19_01\") */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3625:3629  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3616:3630  add(ptr, 0x02) */\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3609:3648  mstore(add(ptr, 0x02), domainSeparator) */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3677:3681  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3668:3682  add(ptr, 0x22) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3661:3695  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3733:3737  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3718:3738  keccak256(ptr, 0x42) */\n      swap1\n      keccak256\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6888:6895  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6908:6925  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6927:6945  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6947:6963  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      tag_172\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6978:6982  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6984:6985  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6987:6988  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6990:6991  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6977  tryRecover */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6907:6992  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7014:7019  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7021:7029  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7013  _throwError */\n      tag_175\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7047:7056  recovered */\n      swap1\n      swap7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6913:6964   */\n      mstore\n        /* \"#utility.yul\":6886:6904   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_119\n        /* \"#utility.yul\":6767:6970   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6913:6964   */\n      mstore\n        /* \"#utility.yul\":6886:6904   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_119\n        /* \"#utility.yul\":6767:6970   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_182\n      swap2\n        /* \"#utility.yul\":1442:1467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n      swap1\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_185:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_186\n      swap1\n      pop\n      jump\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6637:6669   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6619:6670   */\n      mstore\n        /* \"#utility.yul\":6686:6704   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6679:6713   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6729:6747   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6722:6756   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6592:6610   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_119\n        /* \"#utility.yul\":6417:6762   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_190)\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_191\n      swap2\n        /* \"#utility.yul\":1442:1467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n      swap1\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      dup4\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_81)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_76\n      jump\t// in\n    tag_200:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_76\n      jump\t// in\n    tag_201:\n      dup1\n      iszero\n      tag_202\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_203\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_202)\n    tag_203:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_204:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_204\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      jump(tag_81)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n      dup1\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      jump(tag_206)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":7923:7948   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":7996:8000   */\n      0xff\n        /* \"#utility.yul\":7984:8001   */\n      dup10\n      and\n        /* \"#utility.yul\":7964:7982   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":7957:8002   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8018:8036   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":8011:8045   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":8061:8079   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":8054:8088   */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":7895:7914   */\n      0xa0\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_212\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      dup3\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      jump(tag_206)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_206:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_218\n      jumpi\n      tag_218\n      tag_216\n      jump\t// in\n    tag_218:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_224\n      jumpi\n      tag_224\n      tag_216\n      jump\t// in\n    tag_224:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_230\n      jumpi\n      tag_230\n      tag_216\n      jump\t// in\n    tag_230:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1442:1467   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1415:1433   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      tag_119\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_237\n      jumpi\n      tag_237\n      tag_216\n      jump\t// in\n    tag_237:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1442:1467   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1415:1433   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      tag_119\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_241\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_242\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap2\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      swap1\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      swap1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      dup2\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      shl(0xe2, 0x2cd44ac3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:437   */\n    tag_248:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":146:147   */\n      0x00\n        /* \"#utility.yul\":156:318   */\n    tag_252:\n        /* \"#utility.yul\":170:176   */\n      dup2\n        /* \"#utility.yul\":167:168   */\n      dup2\n        /* \"#utility.yul\":164:177   */\n      lt\n        /* \"#utility.yul\":156:318   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":232:236   */\n      0x20\n        /* \"#utility.yul\":288:301   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":284:306   */\n      dup2\n      add\n        /* \"#utility.yul\":278:307   */\n      mload\n        /* \"#utility.yul\":260:271   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":256:276   */\n      dup3\n      add\n        /* \"#utility.yul\":249:308   */\n      mstore\n        /* \"#utility.yul\":185:197   */\n      add\n        /* \"#utility.yul\":156:318   */\n      jump(tag_252)\n    tag_254:\n        /* \"#utility.yul\":160:163   */\n      pop\n        /* \"#utility.yul\":363:364   */\n      0x00\n        /* \"#utility.yul\":356:360   */\n      0x20\n        /* \"#utility.yul\":347:353   */\n      dup3\n        /* \"#utility.yul\":342:345   */\n      dup7\n        /* \"#utility.yul\":338:354   */\n      add\n        /* \"#utility.yul\":334:361   */\n      add\n        /* \"#utility.yul\":327:365   */\n      mstore\n        /* \"#utility.yul\":426:430   */\n      0x20\n        /* \"#utility.yul\":419:421   */\n      0x1f\n        /* \"#utility.yul\":415:422   */\n      not\n        /* \"#utility.yul\":410:412   */\n      0x1f\n        /* \"#utility.yul\":402:408   */\n      dup4\n        /* \"#utility.yul\":398:413   */\n      add\n        /* \"#utility.yul\":394:423   */\n      and\n        /* \"#utility.yul\":389:392   */\n      dup6\n        /* \"#utility.yul\":385:424   */\n      add\n        /* \"#utility.yul\":381:431   */\n      add\n        /* \"#utility.yul\":374:431   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:662   */\n    tag_21:\n        /* \"#utility.yul\":591:593   */\n      0x20\n        /* \"#utility.yul\":580:589   */\n      dup2\n        /* \"#utility.yul\":573:594   */\n      mstore\n        /* \"#utility.yul\":554:558   */\n      0x00\n        /* \"#utility.yul\":611:656   */\n      tag_256\n        /* \"#utility.yul\":652:654   */\n      0x20\n        /* \"#utility.yul\":641:650   */\n      dup4\n        /* \"#utility.yul\":637:655   */\n      add\n        /* \"#utility.yul\":629:635   */\n      dup5\n        /* \"#utility.yul\":611:656   */\n      tag_248\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":603:656   */\n      swap4\n        /* \"#utility.yul\":442:662   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":667:840   */\n    tag_249:\n        /* \"#utility.yul\":735:755   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":784:815   */\n      dup2\n      and\n        /* \"#utility.yul\":774:816   */\n      dup2\n      eq\n        /* \"#utility.yul\":764:834   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":764:834   */\n    tag_258:\n        /* \"#utility.yul\":667:840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":845:1099   */\n    tag_24:\n        /* \"#utility.yul\":913:919   */\n      0x00\n        /* \"#utility.yul\":921:927   */\n      dup1\n        /* \"#utility.yul\":974:976   */\n      0x40\n        /* \"#utility.yul\":962:971   */\n      dup4\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":949:972   */\n      sub\n        /* \"#utility.yul\":945:977   */\n      slt\n        /* \"#utility.yul\":942:994   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":987:988   */\n      dup1\n        /* \"#utility.yul\":980:992   */\n      revert\n        /* \"#utility.yul\":942:994   */\n    tag_260:\n        /* \"#utility.yul\":1013:1042   */\n      tag_261\n        /* \"#utility.yul\":1032:1041   */\n      dup4\n        /* \"#utility.yul\":1013:1042   */\n      tag_249\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1003:1042   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":845:1099   */\n      jump\t// out\n        /* \"#utility.yul\":1478:1806   */\n    tag_34:\n        /* \"#utility.yul\":1555:1561   */\n      0x00\n        /* \"#utility.yul\":1563:1569   */\n      dup1\n        /* \"#utility.yul\":1571:1577   */\n      0x00\n        /* \"#utility.yul\":1624:1626   */\n      0x60\n        /* \"#utility.yul\":1612:1621   */\n      dup5\n        /* \"#utility.yul\":1603:1610   */\n      dup7\n        /* \"#utility.yul\":1599:1622   */\n      sub\n        /* \"#utility.yul\":1595:1627   */\n      slt\n        /* \"#utility.yul\":1592:1644   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1640:1641   */\n      0x00\n        /* \"#utility.yul\":1637:1638   */\n      dup1\n        /* \"#utility.yul\":1630:1642   */\n      revert\n        /* \"#utility.yul\":1592:1644   */\n    tag_265:\n        /* \"#utility.yul\":1663:1692   */\n      tag_266\n        /* \"#utility.yul\":1682:1691   */\n      dup5\n        /* \"#utility.yul\":1663:1692   */\n      tag_249\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1653:1692   */\n      swap3\n      pop\n        /* \"#utility.yul\":1711:1749   */\n      tag_267\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1734:1743   */\n      dup6\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1711:1749   */\n      tag_249\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1701:1749   */\n      swap2\n      pop\n        /* \"#utility.yul\":1796:1798   */\n      0x40\n        /* \"#utility.yul\":1785:1794   */\n      dup5\n        /* \"#utility.yul\":1781:1799   */\n      add\n        /* \"#utility.yul\":1768:1800   */\n      calldataload\n        /* \"#utility.yul\":1758:1800   */\n      swap1\n      pop\n        /* \"#utility.yul\":1478:1806   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2182:2368   */\n    tag_47:\n        /* \"#utility.yul\":2241:2247   */\n      0x00\n        /* \"#utility.yul\":2294:2296   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2273:2280   */\n      dup5\n        /* \"#utility.yul\":2269:2292   */\n      sub\n        /* \"#utility.yul\":2265:2297   */\n      slt\n        /* \"#utility.yul\":2262:2314   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":2310:2311   */\n      0x00\n        /* \"#utility.yul\":2307:2308   */\n      dup1\n        /* \"#utility.yul\":2300:2312   */\n      revert\n        /* \"#utility.yul\":2262:2314   */\n    tag_271:\n        /* \"#utility.yul\":2333:2362   */\n      tag_256\n        /* \"#utility.yul\":2352:2361   */\n      dup3\n        /* \"#utility.yul\":2333:2362   */\n      tag_249\n      jump\t// in\n        /* \"#utility.yul\":2373:3632   */\n    tag_57:\n        /* \"#utility.yul\":2779:2782   */\n      0xff\n        /* \"#utility.yul\":2774:2777   */\n      0xf8\n        /* \"#utility.yul\":2770:2783   */\n      shl\n        /* \"#utility.yul\":2762:2768   */\n      dup9\n        /* \"#utility.yul\":2758:2784   */\n      and\n        /* \"#utility.yul\":2747:2756   */\n      dup2\n        /* \"#utility.yul\":2740:2785   */\n      mstore\n        /* \"#utility.yul\":2721:2725   */\n      0x00\n        /* \"#utility.yul\":2804:2806   */\n      0x20\n        /* \"#utility.yul\":2842:2845   */\n      0xe0\n        /* \"#utility.yul\":2837:2839   */\n      0x20\n        /* \"#utility.yul\":2826:2835   */\n      dup5\n        /* \"#utility.yul\":2822:2840   */\n      add\n        /* \"#utility.yul\":2815:2846   */\n      mstore\n        /* \"#utility.yul\":2869:2915   */\n      tag_274\n        /* \"#utility.yul\":2910:2913   */\n      0xe0\n        /* \"#utility.yul\":2899:2908   */\n      dup5\n        /* \"#utility.yul\":2895:2914   */\n      add\n        /* \"#utility.yul\":2887:2893   */\n      dup11\n        /* \"#utility.yul\":2869:2915   */\n      tag_248\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2963:2972   */\n      dup4\n        /* \"#utility.yul\":2955:2961   */\n      dup2\n        /* \"#utility.yul\":2951:2973   */\n      sub\n        /* \"#utility.yul\":2946:2948   */\n      0x40\n        /* \"#utility.yul\":2935:2944   */\n      dup6\n        /* \"#utility.yul\":2931:2949   */\n      add\n        /* \"#utility.yul\":2924:2974   */\n      mstore\n        /* \"#utility.yul\":2997:3030   */\n      tag_275\n        /* \"#utility.yul\":3023:3029   */\n      dup2\n        /* \"#utility.yul\":3015:3021   */\n      dup11\n        /* \"#utility.yul\":2997:3030   */\n      tag_248\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3061:3063   */\n      0x60\n        /* \"#utility.yul\":3046:3064   */\n      dup6\n      add\n        /* \"#utility.yul\":3039:3073   */\n      dup10\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3110:3142   */\n      dup9\n      and\n        /* \"#utility.yul\":3104:3107   */\n      0x80\n        /* \"#utility.yul\":3089:3108   */\n      dup7\n      add\n        /* \"#utility.yul\":3082:3143   */\n      mstore\n        /* \"#utility.yul\":3130:3133   */\n      0xa0\n        /* \"#utility.yul\":3159:3178   */\n      dup6\n      add\n        /* \"#utility.yul\":3152:3187   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":3224:3246   */\n      dup5\n      dup2\n      sub\n        /* \"#utility.yul\":3218:3221   */\n      0xc0\n        /* \"#utility.yul\":3203:3222   */\n      dup7\n      add\n        /* \"#utility.yul\":3196:3247   */\n      mstore\n        /* \"#utility.yul\":3296:3309   */\n      dup6\n      mload\n        /* \"#utility.yul\":3318:3340   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3368:3370   */\n      0x20\n        /* \"#utility.yul\":3394:3409   */\n      dup1\n      dup9\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":3356:3371   */\n      swap1\n      swap2\n      add\n      swap1\n      0x00\n        /* \"#utility.yul\":3437:3606   */\n    tag_276:\n        /* \"#utility.yul\":3451:3457   */\n      dup2\n        /* \"#utility.yul\":3448:3449   */\n      dup2\n        /* \"#utility.yul\":3445:3458   */\n      lt\n        /* \"#utility.yul\":3437:3606   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3512:3525   */\n      dup4\n      mload\n        /* \"#utility.yul\":3500:3526   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3581:3596   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3546:3558   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3473:3474   */\n      0x01\n        /* \"#utility.yul\":3466:3475   */\n      add\n        /* \"#utility.yul\":3437:3606   */\n      jump(tag_276)\n    tag_278:\n      pop\n        /* \"#utility.yul\":3623:3626   */\n      swap1\n      swap13\n        /* \"#utility.yul\":2373:3632   */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:4330   */\n    tag_67:\n        /* \"#utility.yul\":3748:3754   */\n      0x00\n        /* \"#utility.yul\":3756:3762   */\n      dup1\n        /* \"#utility.yul\":3764:3770   */\n      0x00\n        /* \"#utility.yul\":3772:3778   */\n      dup1\n        /* \"#utility.yul\":3780:3786   */\n      0x00\n        /* \"#utility.yul\":3788:3794   */\n      dup1\n        /* \"#utility.yul\":3796:3802   */\n      0x00\n        /* \"#utility.yul\":3849:3852   */\n      0xe0\n        /* \"#utility.yul\":3837:3846   */\n      dup9\n        /* \"#utility.yul\":3828:3835   */\n      dup11\n        /* \"#utility.yul\":3824:3847   */\n      sub\n        /* \"#utility.yul\":3820:3853   */\n      slt\n        /* \"#utility.yul\":3817:3870   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":3866:3867   */\n      0x00\n        /* \"#utility.yul\":3863:3864   */\n      dup1\n        /* \"#utility.yul\":3856:3868   */\n      revert\n        /* \"#utility.yul\":3817:3870   */\n    tag_280:\n        /* \"#utility.yul\":3889:3918   */\n      tag_281\n        /* \"#utility.yul\":3908:3917   */\n      dup9\n        /* \"#utility.yul\":3889:3918   */\n      tag_249\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3879:3918   */\n      swap7\n      pop\n        /* \"#utility.yul\":3937:3975   */\n      tag_282\n        /* \"#utility.yul\":3971:3973   */\n      0x20\n        /* \"#utility.yul\":3960:3969   */\n      dup10\n        /* \"#utility.yul\":3956:3974   */\n      add\n        /* \"#utility.yul\":3937:3975   */\n      tag_249\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3927:3975   */\n      swap6\n      pop\n        /* \"#utility.yul\":4022:4024   */\n      0x40\n        /* \"#utility.yul\":4011:4020   */\n      dup9\n        /* \"#utility.yul\":4007:4025   */\n      add\n        /* \"#utility.yul\":3994:4026   */\n      calldataload\n        /* \"#utility.yul\":3984:4026   */\n      swap5\n      pop\n        /* \"#utility.yul\":4073:4075   */\n      0x60\n        /* \"#utility.yul\":4062:4071   */\n      dup9\n        /* \"#utility.yul\":4058:4076   */\n      add\n        /* \"#utility.yul\":4045:4077   */\n      calldataload\n        /* \"#utility.yul\":4035:4077   */\n      swap4\n      pop\n        /* \"#utility.yul\":4127:4130   */\n      0x80\n        /* \"#utility.yul\":4116:4125   */\n      dup9\n        /* \"#utility.yul\":4112:4131   */\n      add\n        /* \"#utility.yul\":4099:4132   */\n      calldataload\n        /* \"#utility.yul\":4172:4176   */\n      0xff\n        /* \"#utility.yul\":4165:4170   */\n      dup2\n        /* \"#utility.yul\":4161:4177   */\n      and\n        /* \"#utility.yul\":4154:4159   */\n      dup2\n        /* \"#utility.yul\":4151:4178   */\n      eq\n        /* \"#utility.yul\":4141:4196   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4189:4190   */\n      dup1\n        /* \"#utility.yul\":4182:4194   */\n      revert\n        /* \"#utility.yul\":4141:4196   */\n    tag_283:\n        /* \"#utility.yul\":3637:4330   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":4215:4220   */\n      swap5\n        /* \"#utility.yul\":4267:4270   */\n      0xa0\n        /* \"#utility.yul\":4252:4271   */\n      dup5\n      add\n        /* \"#utility.yul\":4239:4272   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4319:4322   */\n      0xc0\n        /* \"#utility.yul\":4304:4323   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4291:4324   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":3637:4330   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:4595   */\n    tag_71:\n        /* \"#utility.yul\":4403:4409   */\n      0x00\n        /* \"#utility.yul\":4411:4417   */\n      dup1\n        /* \"#utility.yul\":4464:4466   */\n      0x40\n        /* \"#utility.yul\":4452:4461   */\n      dup4\n        /* \"#utility.yul\":4443:4450   */\n      dup6\n        /* \"#utility.yul\":4439:4462   */\n      sub\n        /* \"#utility.yul\":4435:4467   */\n      slt\n        /* \"#utility.yul\":4432:4484   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4480:4481   */\n      0x00\n        /* \"#utility.yul\":4477:4478   */\n      dup1\n        /* \"#utility.yul\":4470:4482   */\n      revert\n        /* \"#utility.yul\":4432:4484   */\n    tag_285:\n        /* \"#utility.yul\":4503:4532   */\n      tag_286\n        /* \"#utility.yul\":4522:4531   */\n      dup4\n        /* \"#utility.yul\":4503:4532   */\n      tag_249\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4493:4532   */\n      swap2\n      pop\n        /* \"#utility.yul\":4551:4589   */\n      tag_287\n        /* \"#utility.yul\":4585:4587   */\n      0x20\n        /* \"#utility.yul\":4574:4583   */\n      dup5\n        /* \"#utility.yul\":4570:4588   */\n      add\n        /* \"#utility.yul\":4551:4589   */\n      tag_249\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4541:4589   */\n      swap1\n      pop\n        /* \"#utility.yul\":4335:4595   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4600:4980   */\n    tag_76:\n        /* \"#utility.yul\":4679:4680   */\n      0x01\n        /* \"#utility.yul\":4675:4687   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4722:4734   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4743:4804   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":4797:4801   */\n      0x7f\n        /* \"#utility.yul\":4789:4795   */\n      dup3\n        /* \"#utility.yul\":4785:4802   */\n      and\n        /* \"#utility.yul\":4775:4802   */\n      swap2\n      pop\n        /* \"#utility.yul\":4743:4804   */\n    tag_289:\n        /* \"#utility.yul\":4850:4852   */\n      0x20\n        /* \"#utility.yul\":4842:4848   */\n      dup3\n        /* \"#utility.yul\":4839:4853   */\n      lt\n        /* \"#utility.yul\":4819:4837   */\n      dup2\n        /* \"#utility.yul\":4816:4854   */\n      sub\n        /* \"#utility.yul\":4813:4974   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":4896:4906   */\n      0x4e487b71\n        /* \"#utility.yul\":4891:4894   */\n      0xe0\n        /* \"#utility.yul\":4887:4907   */\n      shl\n        /* \"#utility.yul\":4884:4885   */\n      0x00\n        /* \"#utility.yul\":4877:4908   */\n      mstore\n        /* \"#utility.yul\":4931:4935   */\n      0x22\n        /* \"#utility.yul\":4928:4929   */\n      0x04\n        /* \"#utility.yul\":4921:4936   */\n      mstore\n        /* \"#utility.yul\":4959:4963   */\n      0x24\n        /* \"#utility.yul\":4956:4957   */\n      0x00\n        /* \"#utility.yul\":4949:4964   */\n      revert\n        /* \"#utility.yul\":4813:4974   */\n    tag_290:\n      pop\n        /* \"#utility.yul\":4600:4980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6975:7197   */\n    tag_166:\n        /* \"#utility.yul\":7040:7049   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7061:7071   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7058:7191   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":7113:7123   */\n      0x4e487b71\n        /* \"#utility.yul\":7108:7111   */\n      0xe0\n        /* \"#utility.yul\":7104:7124   */\n      shl\n        /* \"#utility.yul\":7101:7102   */\n      0x00\n        /* \"#utility.yul\":7094:7125   */\n      mstore\n        /* \"#utility.yul\":7148:7152   */\n      0x11\n        /* \"#utility.yul\":7145:7146   */\n      0x04\n        /* \"#utility.yul\":7138:7153   */\n      mstore\n        /* \"#utility.yul\":7176:7180   */\n      0x24\n        /* \"#utility.yul\":7173:7174   */\n      0x00\n        /* \"#utility.yul\":7166:7181   */\n      revert\n        /* \"#utility.yul\":8099:8226   */\n    tag_216:\n        /* \"#utility.yul\":8160:8170   */\n      0x4e487b71\n        /* \"#utility.yul\":8155:8158   */\n      0xe0\n        /* \"#utility.yul\":8151:8171   */\n      shl\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8141:8172   */\n      mstore\n        /* \"#utility.yul\":8191:8195   */\n      0x21\n        /* \"#utility.yul\":8188:8189   */\n      0x04\n        /* \"#utility.yul\":8181:8196   */\n      mstore\n        /* \"#utility.yul\":8215:8219   */\n      0x24\n        /* \"#utility.yul\":8212:8213   */\n      0x00\n        /* \"#utility.yul\":8205:8220   */\n      revert\n\n    auxdata: 0xa2646970667358221220c23d902b89216ed0b3785b7e5d43c62b46ef03615902e89e39b93f12c72754b764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1873": {
									"entryPoint": null,
									"id": 1873,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3273": {
									"entryPoint": null,
									"id": 3273,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_1920": {
									"entryPoint": null,
									"id": 1920,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_1150": {
									"entryPoint": null,
									"id": 1150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1004": {
									"entryPoint": 303,
									"id": 1004,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_906": {
									"entryPoint": 359,
									"id": 906,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5421:16",
										"nodeType": "YulBlock",
										"src": "0:5421:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:16",
													"nodeType": "YulBlock",
													"src": "46:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:16",
																		"nodeType": "YulLiteral",
																		"src": "63:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:16",
																				"nodeType": "YulLiteral",
																				"src": "70:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:16",
																				"nodeType": "YulLiteral",
																				"src": "75:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:16"
																		},
																		"nativeSrc": "66:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:16"
																},
																"nativeSrc": "56:31:16",
																"nodeType": "YulFunctionCall",
																"src": "56:31:16"
															},
															"nativeSrc": "56:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:16",
																		"nodeType": "YulLiteral",
																		"src": "103:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:16",
																		"nodeType": "YulLiteral",
																		"src": "106:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:16"
																},
																"nativeSrc": "96:15:16",
																"nodeType": "YulFunctionCall",
																"src": "96:15:16"
															},
															"nativeSrc": "96:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:16",
																		"nodeType": "YulLiteral",
																		"src": "127:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:16",
																		"nodeType": "YulLiteral",
																		"src": "130:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:16"
																},
																"nativeSrc": "120:15:16",
																"nodeType": "YulFunctionCall",
																"src": "120:15:16"
															},
															"nativeSrc": "120:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:16"
											},
											{
												"body": {
													"nativeSrc": "212:184:16",
													"nodeType": "YulBlock",
													"src": "212:184:16",
													"statements": [
														{
															"nativeSrc": "222:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "222:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "231:1:16",
																"nodeType": "YulLiteral",
																"src": "231:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "226:1:16",
																	"nodeType": "YulTypedName",
																	"src": "226:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "291:63:16",
																"nodeType": "YulBlock",
																"src": "291:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "316:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "316:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "321:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "321:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "312:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "312:3:16"
																					},
																					"nativeSrc": "312:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "312:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "335:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "335:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "340:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "340:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "331:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "331:3:16"
																							},
																							"nativeSrc": "331:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "331:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "325:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "325:5:16"
																					},
																					"nativeSrc": "325:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "325:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "305:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:16"
																			},
																			"nativeSrc": "305:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "305:39:16"
																		},
																		"nativeSrc": "305:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "305:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "252:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "252:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "255:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "255:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "249:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "249:2:16"
																},
																"nativeSrc": "249:13:16",
																"nodeType": "YulFunctionCall",
																"src": "249:13:16"
															},
															"nativeSrc": "241:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "263:19:16",
																"nodeType": "YulBlock",
																"src": "263:19:16",
																"statements": [
																	{
																		"nativeSrc": "265:15:16",
																		"nodeType": "YulAssignment",
																		"src": "265:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "274:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "274:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:2:16",
																					"nodeType": "YulLiteral",
																					"src": "277:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "270:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:16"
																			},
																			"nativeSrc": "270:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "270:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "265:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "265:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "245:3:16",
																"nodeType": "YulBlock",
																"src": "245:3:16",
																"statements": []
															},
															"src": "241:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "374:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "374:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "379:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "370:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:16"
																		},
																		"nativeSrc": "370:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "370:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "388:1:16",
																		"nodeType": "YulLiteral",
																		"src": "388:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "363:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:16"
																},
																"nativeSrc": "363:27:16",
																"nodeType": "YulFunctionCall",
																"src": "363:27:16"
															},
															"nativeSrc": "363:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "363:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "146:250:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "190:3:16",
														"nodeType": "YulTypedName",
														"src": "190:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "195:3:16",
														"nodeType": "YulTypedName",
														"src": "195:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "200:6:16",
														"nodeType": "YulTypedName",
														"src": "200:6:16",
														"type": ""
													}
												],
												"src": "146:250:16"
											},
											{
												"body": {
													"nativeSrc": "465:635:16",
													"nodeType": "YulBlock",
													"src": "465:635:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "514:16:16",
																"nodeType": "YulBlock",
																"src": "514:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "523:1:16",
																					"nodeType": "YulLiteral",
																					"src": "523:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:16",
																					"nodeType": "YulLiteral",
																					"src": "526:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "516:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:16"
																			},
																			"nativeSrc": "516:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:16"
																		},
																		"nativeSrc": "516:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "493:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "493:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "501:4:16",
																						"nodeType": "YulLiteral",
																						"src": "501:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "489:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "489:3:16"
																				},
																				"nativeSrc": "489:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "489:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "508:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "508:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "485:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:16"
																		},
																		"nativeSrc": "485:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "485:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "478:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "478:6:16"
																},
																"nativeSrc": "478:35:16",
																"nodeType": "YulFunctionCall",
																"src": "478:35:16"
															},
															"nativeSrc": "475:55:16",
															"nodeType": "YulIf",
															"src": "475:55:16"
														},
														{
															"nativeSrc": "539:23:16",
															"nodeType": "YulVariableDeclaration",
															"src": "539:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "555:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "555:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "549:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "549:5:16"
																},
																"nativeSrc": "549:13:16",
																"nodeType": "YulFunctionCall",
																"src": "549:13:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "543:2:16",
																	"nodeType": "YulTypedName",
																	"src": "543:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "571:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "571:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "589:2:16",
																				"nodeType": "YulLiteral",
																				"src": "589:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "593:1:16",
																				"nodeType": "YulLiteral",
																				"src": "593:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "585:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "585:3:16"
																		},
																		"nativeSrc": "585:10:16",
																		"nodeType": "YulFunctionCall",
																		"src": "585:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "597:1:16",
																		"nodeType": "YulLiteral",
																		"src": "597:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "581:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "581:3:16"
																},
																"nativeSrc": "581:18:16",
																"nodeType": "YulFunctionCall",
																"src": "581:18:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "575:2:16",
																	"nodeType": "YulTypedName",
																	"src": "575:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "622:22:16",
																"nodeType": "YulBlock",
																"src": "622:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "624:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "624:16:16"
																			},
																			"nativeSrc": "624:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "624:18:16"
																		},
																		"nativeSrc": "624:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "624:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "614:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "614:2:16"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "618:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "618:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "611:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "611:2:16"
																},
																"nativeSrc": "611:10:16",
																"nodeType": "YulFunctionCall",
																"src": "611:10:16"
															},
															"nativeSrc": "608:36:16",
															"nodeType": "YulIf",
															"src": "608:36:16"
														},
														{
															"nativeSrc": "653:17:16",
															"nodeType": "YulVariableDeclaration",
															"src": "653:17:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "667:2:16",
																		"nodeType": "YulLiteral",
																		"src": "667:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "663:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "663:3:16"
																},
																"nativeSrc": "663:7:16",
																"nodeType": "YulFunctionCall",
																"src": "663:7:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "657:2:16",
																	"nodeType": "YulTypedName",
																	"src": "657:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "679:23:16",
															"nodeType": "YulVariableDeclaration",
															"src": "679:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "699:2:16",
																		"nodeType": "YulLiteral",
																		"src": "699:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "693:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "693:5:16"
																},
																"nativeSrc": "693:9:16",
																"nodeType": "YulFunctionCall",
																"src": "693:9:16"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "683:6:16",
																	"nodeType": "YulTypedName",
																	"src": "683:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "711:71:16",
															"nodeType": "YulVariableDeclaration",
															"src": "711:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "733:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "733:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "757:2:16",
																										"nodeType": "YulIdentifier",
																										"src": "757:2:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "761:4:16",
																										"nodeType": "YulLiteral",
																										"src": "761:4:16",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "753:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "753:3:16"
																								},
																								"nativeSrc": "753:13:16",
																								"nodeType": "YulFunctionCall",
																								"src": "753:13:16"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "768:2:16",
																								"nodeType": "YulIdentifier",
																								"src": "768:2:16"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "749:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:16"
																						},
																						"nativeSrc": "749:22:16",
																						"nodeType": "YulFunctionCall",
																						"src": "749:22:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "773:2:16",
																						"nodeType": "YulLiteral",
																						"src": "773:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "745:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:16"
																				},
																				"nativeSrc": "745:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "745:31:16"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "778:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "778:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "741:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "741:3:16"
																		},
																		"nativeSrc": "741:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "741:40:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "729:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "729:3:16"
																},
																"nativeSrc": "729:53:16",
																"nodeType": "YulFunctionCall",
																"src": "729:53:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "715:10:16",
																	"nodeType": "YulTypedName",
																	"src": "715:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "841:22:16",
																"nodeType": "YulBlock",
																"src": "841:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "843:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "843:16:16"
																			},
																			"nativeSrc": "843:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "843:18:16"
																		},
																		"nativeSrc": "843:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "843:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "800:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "800:10:16"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "812:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "812:2:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "797:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "797:2:16"
																		},
																		"nativeSrc": "797:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "797:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "820:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "820:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "832:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "817:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "817:2:16"
																		},
																		"nativeSrc": "817:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "817:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "794:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "794:2:16"
																},
																"nativeSrc": "794:46:16",
																"nodeType": "YulFunctionCall",
																"src": "794:46:16"
															},
															"nativeSrc": "791:72:16",
															"nodeType": "YulIf",
															"src": "791:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "879:2:16",
																		"nodeType": "YulLiteral",
																		"src": "879:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "883:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "883:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "872:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "872:6:16"
																},
																"nativeSrc": "872:22:16",
																"nodeType": "YulFunctionCall",
																"src": "872:22:16"
															},
															"nativeSrc": "872:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "872:22:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "910:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "910:6:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "918:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "918:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "903:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:16"
																},
																"nativeSrc": "903:18:16",
																"nodeType": "YulFunctionCall",
																"src": "903:18:16"
															},
															"nativeSrc": "903:18:16",
															"nodeType": "YulExpressionStatement",
															"src": "903:18:16"
														},
														{
															"body": {
																"nativeSrc": "969:16:16",
																"nodeType": "YulBlock",
																"src": "969:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "978:1:16",
																					"nodeType": "YulLiteral",
																					"src": "978:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "981:1:16",
																					"nodeType": "YulLiteral",
																					"src": "981:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "971:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "971:6:16"
																			},
																			"nativeSrc": "971:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "971:12:16"
																		},
																		"nativeSrc": "971:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "971:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "944:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:16"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "952:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "952:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "940:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "940:3:16"
																				},
																				"nativeSrc": "940:15:16",
																				"nodeType": "YulFunctionCall",
																				"src": "940:15:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "957:4:16",
																				"nodeType": "YulLiteral",
																				"src": "957:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "936:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "936:3:16"
																		},
																		"nativeSrc": "936:26:16",
																		"nodeType": "YulFunctionCall",
																		"src": "936:26:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "964:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "964:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "933:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "933:2:16"
																},
																"nativeSrc": "933:35:16",
																"nodeType": "YulFunctionCall",
																"src": "933:35:16"
															},
															"nativeSrc": "930:55:16",
															"nodeType": "YulIf",
															"src": "930:55:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1033:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1041:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1041:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1029:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1029:3:16"
																		},
																		"nativeSrc": "1029:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1029:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1052:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1052:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1060:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1060:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1048:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:16"
																		},
																		"nativeSrc": "1048:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1048:17:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1067:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1067:2:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "994:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "994:34:16"
																},
																"nativeSrc": "994:76:16",
																"nodeType": "YulFunctionCall",
																"src": "994:76:16"
															},
															"nativeSrc": "994:76:16",
															"nodeType": "YulExpressionStatement",
															"src": "994:76:16"
														},
														{
															"nativeSrc": "1079:15:16",
															"nodeType": "YulAssignment",
															"src": "1079:15:16",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1088:6:16",
																"nodeType": "YulIdentifier",
																"src": "1088:6:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1079:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1079:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "401:699:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "439:6:16",
														"nodeType": "YulTypedName",
														"src": "439:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "447:3:16",
														"nodeType": "YulTypedName",
														"src": "447:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "455:5:16",
														"nodeType": "YulTypedName",
														"src": "455:5:16",
														"type": ""
													}
												],
												"src": "401:699:16"
											},
											{
												"body": {
													"nativeSrc": "1223:444:16",
													"nodeType": "YulBlock",
													"src": "1223:444:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1269:16:16",
																"nodeType": "YulBlock",
																"src": "1269:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1278:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1278:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1281:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1281:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1271:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1271:6:16"
																			},
																			"nativeSrc": "1271:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1271:12:16"
																		},
																		"nativeSrc": "1271:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1271:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1244:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1253:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1240:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1240:3:16"
																		},
																		"nativeSrc": "1240:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1240:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1265:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1265:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1236:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1236:3:16"
																},
																"nativeSrc": "1236:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1236:32:16"
															},
															"nativeSrc": "1233:52:16",
															"nodeType": "YulIf",
															"src": "1233:52:16"
														},
														{
															"nativeSrc": "1294:30:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1294:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1314:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1314:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1308:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:16"
																},
																"nativeSrc": "1308:16:16",
																"nodeType": "YulFunctionCall",
																"src": "1308:16:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1298:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1298:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1333:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1333:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1351:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1351:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1355:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1355:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1347:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1347:3:16"
																		},
																		"nativeSrc": "1347:10:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1347:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1359:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1359:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1343:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:16"
																},
																"nativeSrc": "1343:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1343:18:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1337:2:16",
																	"nodeType": "YulTypedName",
																	"src": "1337:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1388:16:16",
																"nodeType": "YulBlock",
																"src": "1388:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1397:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1397:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1400:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1400:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1390:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1390:6:16"
																			},
																			"nativeSrc": "1390:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:12:16"
																		},
																		"nativeSrc": "1390:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1376:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1376:6:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1384:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1384:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1373:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1373:2:16"
																},
																"nativeSrc": "1373:14:16",
																"nodeType": "YulFunctionCall",
																"src": "1373:14:16"
															},
															"nativeSrc": "1370:34:16",
															"nodeType": "YulIf",
															"src": "1370:34:16"
														},
														{
															"nativeSrc": "1413:71:16",
															"nodeType": "YulAssignment",
															"src": "1413:71:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1456:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1456:9:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1467:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1467:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1452:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1452:3:16"
																		},
																		"nativeSrc": "1452:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:22:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1476:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "1476:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1423:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "1423:28:16"
																},
																"nativeSrc": "1423:61:16",
																"nodeType": "YulFunctionCall",
																"src": "1423:61:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1413:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1413:6:16"
																}
															]
														},
														{
															"nativeSrc": "1493:41:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1493:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1519:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1519:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1530:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1530:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1515:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:16"
																		},
																		"nativeSrc": "1515:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1515:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1509:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1509:5:16"
																},
																"nativeSrc": "1509:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1509:25:16"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1497:8:16",
																	"nodeType": "YulTypedName",
																	"src": "1497:8:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1563:16:16",
																"nodeType": "YulBlock",
																"src": "1563:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1572:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1572:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1575:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1575:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1565:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1565:6:16"
																			},
																			"nativeSrc": "1565:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1565:12:16"
																		},
																		"nativeSrc": "1565:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1565:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1549:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "1549:8:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1559:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1559:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1546:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:16"
																},
																"nativeSrc": "1546:16:16",
																"nodeType": "YulFunctionCall",
																"src": "1546:16:16"
															},
															"nativeSrc": "1543:36:16",
															"nodeType": "YulIf",
															"src": "1543:36:16"
														},
														{
															"nativeSrc": "1588:73:16",
															"nodeType": "YulAssignment",
															"src": "1588:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1631:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1631:9:16"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1642:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "1642:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1627:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1627:3:16"
																		},
																		"nativeSrc": "1627:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1627:24:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1653:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "1653:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1598:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "1598:28:16"
																},
																"nativeSrc": "1598:63:16",
																"nodeType": "YulFunctionCall",
																"src": "1598:63:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1588:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "1105:562:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1181:9:16",
														"nodeType": "YulTypedName",
														"src": "1181:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1192:7:16",
														"nodeType": "YulTypedName",
														"src": "1192:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1204:6:16",
														"nodeType": "YulTypedName",
														"src": "1204:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1212:6:16",
														"nodeType": "YulTypedName",
														"src": "1212:6:16",
														"type": ""
													}
												],
												"src": "1105:562:16"
											},
											{
												"body": {
													"nativeSrc": "1727:325:16",
													"nodeType": "YulBlock",
													"src": "1727:325:16",
													"statements": [
														{
															"nativeSrc": "1737:22:16",
															"nodeType": "YulAssignment",
															"src": "1737:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1751:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1751:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1747:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1747:3:16"
																},
																"nativeSrc": "1747:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1747:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1737:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1737:6:16"
																}
															]
														},
														{
															"nativeSrc": "1768:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1768:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1798:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1798:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1804:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1804:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1794:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1794:3:16"
																},
																"nativeSrc": "1794:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1794:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1772:18:16",
																	"nodeType": "YulTypedName",
																	"src": "1772:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1845:31:16",
																"nodeType": "YulBlock",
																"src": "1845:31:16",
																"statements": [
																	{
																		"nativeSrc": "1847:27:16",
																		"nodeType": "YulAssignment",
																		"src": "1847:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1861:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "1861:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1869:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1869:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1857:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1857:3:16"
																			},
																			"nativeSrc": "1857:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1857:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1847:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1847:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1825:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "1825:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1818:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:16"
																},
																"nativeSrc": "1818:26:16",
																"nodeType": "YulFunctionCall",
																"src": "1818:26:16"
															},
															"nativeSrc": "1815:61:16",
															"nodeType": "YulIf",
															"src": "1815:61:16"
														},
														{
															"body": {
																"nativeSrc": "1935:111:16",
																"nodeType": "YulBlock",
																"src": "1935:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1963:3:16",
																							"nodeType": "YulLiteral",
																							"src": "1963:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1968:10:16",
																							"nodeType": "YulLiteral",
																							"src": "1968:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1959:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1959:3:16"
																					},
																					"nativeSrc": "1959:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1959:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1949:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:16"
																			},
																			"nativeSrc": "1949:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:31:16"
																		},
																		"nativeSrc": "1949:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2000:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2000:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2003:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2003:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1993:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1993:6:16"
																			},
																			"nativeSrc": "1993:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1993:15:16"
																		},
																		"nativeSrc": "1993:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1993:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2031:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2031:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2021:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2021:6:16"
																			},
																			"nativeSrc": "2021:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2021:15:16"
																		},
																		"nativeSrc": "2021:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2021:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1891:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "1891:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1914:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1914:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1922:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1922:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1911:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1911:2:16"
																		},
																		"nativeSrc": "1911:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1911:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1888:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1888:2:16"
																},
																"nativeSrc": "1888:38:16",
																"nodeType": "YulFunctionCall",
																"src": "1888:38:16"
															},
															"nativeSrc": "1885:161:16",
															"nodeType": "YulIf",
															"src": "1885:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1672:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1707:4:16",
														"nodeType": "YulTypedName",
														"src": "1707:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1716:6:16",
														"nodeType": "YulTypedName",
														"src": "1716:6:16",
														"type": ""
													}
												],
												"src": "1672:380:16"
											},
											{
												"body": {
													"nativeSrc": "2113:65:16",
													"nodeType": "YulBlock",
													"src": "2113:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2130:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2130:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2133:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2133:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2123:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2123:6:16"
																},
																"nativeSrc": "2123:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2123:14:16"
															},
															"nativeSrc": "2123:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "2123:14:16"
														},
														{
															"nativeSrc": "2146:26:16",
															"nodeType": "YulAssignment",
															"src": "2146:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2164:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2164:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2167:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2167:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2154:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "2154:9:16"
																},
																"nativeSrc": "2154:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2154:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2146:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2146:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2057:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2096:3:16",
														"nodeType": "YulTypedName",
														"src": "2096:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2104:4:16",
														"nodeType": "YulTypedName",
														"src": "2104:4:16",
														"type": ""
													}
												],
												"src": "2057:121:16"
											},
											{
												"body": {
													"nativeSrc": "2264:437:16",
													"nodeType": "YulBlock",
													"src": "2264:437:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2297:398:16",
																"nodeType": "YulBlock",
																"src": "2297:398:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2318:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2318:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2321:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2321:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2311:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2311:6:16"
																			},
																			"nativeSrc": "2311:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2311:16:16"
																		},
																		"nativeSrc": "2311:16:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2311:16:16"
																	},
																	{
																		"nativeSrc": "2340:30:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2340:30:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2362:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2362:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2365:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2365:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2352:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2352:9:16"
																			},
																			"nativeSrc": "2352:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2352:18:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2344:4:16",
																				"nodeType": "YulTypedName",
																				"src": "2344:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2383:57:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2383:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2406:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "2406:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2416:1:16",
																							"nodeType": "YulLiteral",
																							"src": "2416:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2423:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "2423:10:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2435:2:16",
																									"nodeType": "YulLiteral",
																									"src": "2435:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2419:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2419:3:16"
																							},
																							"nativeSrc": "2419:19:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2419:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2412:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2412:3:16"
																					},
																					"nativeSrc": "2412:27:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2412:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2402:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2402:3:16"
																			},
																			"nativeSrc": "2402:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2402:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2387:11:16",
																				"nodeType": "YulTypedName",
																				"src": "2387:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2477:23:16",
																			"nodeType": "YulBlock",
																			"src": "2477:23:16",
																			"statements": [
																				{
																					"nativeSrc": "2479:19:16",
																					"nodeType": "YulAssignment",
																					"src": "2479:19:16",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2494:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "2494:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2479:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "2479:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2459:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "2459:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2471:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2471:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2456:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "2456:2:16"
																			},
																			"nativeSrc": "2456:20:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2456:20:16"
																		},
																		"nativeSrc": "2453:47:16",
																		"nodeType": "YulIf",
																		"src": "2453:47:16"
																	},
																	{
																		"nativeSrc": "2513:41:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2513:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2527:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "2527:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2537:1:16",
																							"nodeType": "YulLiteral",
																							"src": "2537:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2544:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2544:3:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2549:2:16",
																									"nodeType": "YulLiteral",
																									"src": "2549:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2540:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2540:3:16"
																							},
																							"nativeSrc": "2540:12:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2540:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2533:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2533:3:16"
																					},
																					"nativeSrc": "2533:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2533:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2523:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2523:3:16"
																			},
																			"nativeSrc": "2523:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2523:31:16"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2517:2:16",
																				"nodeType": "YulTypedName",
																				"src": "2517:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2567:24:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2567:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2580:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "2580:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2571:5:16",
																				"nodeType": "YulTypedName",
																				"src": "2571:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2665:20:16",
																			"nodeType": "YulBlock",
																			"src": "2665:20:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2674:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "2674:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2681:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2681:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2667:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "2667:6:16"
																						},
																						"nativeSrc": "2667:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2667:16:16"
																					},
																					"nativeSrc": "2667:16:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "2667:16:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2615:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2615:5:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2622:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "2622:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2612:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "2612:2:16"
																			},
																			"nativeSrc": "2612:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2612:13:16"
																		},
																		"nativeSrc": "2604:81:16",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2626:26:16",
																			"nodeType": "YulBlock",
																			"src": "2626:26:16",
																			"statements": [
																				{
																					"nativeSrc": "2628:22:16",
																					"nodeType": "YulAssignment",
																					"src": "2628:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2641:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "2641:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2648:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2648:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2637:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2637:3:16"
																						},
																						"nativeSrc": "2637:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2637:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2628:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "2628:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2608:3:16",
																			"nodeType": "YulBlock",
																			"src": "2608:3:16",
																			"statements": []
																		},
																		"src": "2604:81:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2280:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2280:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2285:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2285:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2277:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2277:2:16"
																},
																"nativeSrc": "2277:11:16",
																"nodeType": "YulFunctionCall",
																"src": "2277:11:16"
															},
															"nativeSrc": "2274:421:16",
															"nodeType": "YulIf",
															"src": "2274:421:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2183:518:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2236:5:16",
														"nodeType": "YulTypedName",
														"src": "2236:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2243:3:16",
														"nodeType": "YulTypedName",
														"src": "2243:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2248:10:16",
														"nodeType": "YulTypedName",
														"src": "2248:10:16",
														"type": ""
													}
												],
												"src": "2183:518:16"
											},
											{
												"body": {
													"nativeSrc": "2791:81:16",
													"nodeType": "YulBlock",
													"src": "2791:81:16",
													"statements": [
														{
															"nativeSrc": "2801:65:16",
															"nodeType": "YulAssignment",
															"src": "2801:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2816:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "2816:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2834:1:16",
																										"nodeType": "YulLiteral",
																										"src": "2834:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2837:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "2837:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2830:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2830:3:16"
																								},
																								"nativeSrc": "2830:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2830:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2847:1:16",
																										"nodeType": "YulLiteral",
																										"src": "2847:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2843:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2843:3:16"
																								},
																								"nativeSrc": "2843:6:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2843:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2826:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2826:3:16"
																						},
																						"nativeSrc": "2826:24:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2826:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2822:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2822:3:16"
																				},
																				"nativeSrc": "2822:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2822:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2812:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:16"
																		},
																		"nativeSrc": "2812:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2858:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2858:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2861:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2861:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2854:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2854:3:16"
																		},
																		"nativeSrc": "2854:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2854:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2809:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2809:2:16"
																},
																"nativeSrc": "2809:57:16",
																"nodeType": "YulFunctionCall",
																"src": "2809:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2801:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2801:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2706:166:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2768:4:16",
														"nodeType": "YulTypedName",
														"src": "2768:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2774:3:16",
														"nodeType": "YulTypedName",
														"src": "2774:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2782:4:16",
														"nodeType": "YulTypedName",
														"src": "2782:4:16",
														"type": ""
													}
												],
												"src": "2706:166:16"
											},
											{
												"body": {
													"nativeSrc": "2973:1249:16",
													"nodeType": "YulBlock",
													"src": "2973:1249:16",
													"statements": [
														{
															"nativeSrc": "2983:24:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2983:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3003:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3003:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2997:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2997:5:16"
																},
																"nativeSrc": "2997:10:16",
																"nodeType": "YulFunctionCall",
																"src": "2997:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2987:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2987:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3050:22:16",
																"nodeType": "YulBlock",
																"src": "3050:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3052:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "3052:16:16"
																			},
																			"nativeSrc": "3052:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3052:18:16"
																		},
																		"nativeSrc": "3052:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3052:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3022:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3022:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3038:2:16",
																						"nodeType": "YulLiteral",
																						"src": "3038:2:16",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3042:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3042:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3034:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3034:3:16"
																				},
																				"nativeSrc": "3034:10:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3034:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3046:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3046:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3030:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3030:3:16"
																		},
																		"nativeSrc": "3030:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:18:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3019:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3019:2:16"
																},
																"nativeSrc": "3019:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3019:30:16"
															},
															"nativeSrc": "3016:56:16",
															"nodeType": "YulIf",
															"src": "3016:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3125:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3125:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3163:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "3163:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3157:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "3157:5:16"
																				},
																				"nativeSrc": "3157:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3157:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3131:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "3131:25:16"
																		},
																		"nativeSrc": "3131:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:38:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3171:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3171:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3081:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3081:43:16"
																},
																"nativeSrc": "3081:97:16",
																"nodeType": "YulFunctionCall",
																"src": "3081:97:16"
															},
															"nativeSrc": "3081:97:16",
															"nodeType": "YulExpressionStatement",
															"src": "3081:97:16"
														},
														{
															"nativeSrc": "3187:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3187:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3204:1:16",
																"nodeType": "YulLiteral",
																"src": "3204:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3191:9:16",
																	"nodeType": "YulTypedName",
																	"src": "3191:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3214:23:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3214:23:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3233:4:16",
																"nodeType": "YulLiteral",
																"src": "3233:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3218:11:16",
																	"nodeType": "YulTypedName",
																	"src": "3218:11:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3246:17:16",
															"nodeType": "YulAssignment",
															"src": "3246:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3259:4:16",
																"nodeType": "YulLiteral",
																"src": "3259:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3246:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "3246:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3309:656:16",
																		"nodeType": "YulBlock",
																		"src": "3309:656:16",
																		"statements": [
																			{
																				"nativeSrc": "3323:35:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3323:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3342:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "3342:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3354:2:16",
																									"nodeType": "YulLiteral",
																									"src": "3354:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3350:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "3350:3:16"
																							},
																							"nativeSrc": "3350:7:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3350:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3338:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "3338:3:16"
																					},
																					"nativeSrc": "3338:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3338:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3327:7:16",
																						"nodeType": "YulTypedName",
																						"src": "3327:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3371:49:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3371:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3415:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "3415:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3385:29:16",
																						"nodeType": "YulIdentifier",
																						"src": "3385:29:16"
																					},
																					"nativeSrc": "3385:35:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3385:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3375:6:16",
																						"nodeType": "YulTypedName",
																						"src": "3375:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3433:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3433:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3442:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3442:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3437:1:16",
																						"nodeType": "YulTypedName",
																						"src": "3437:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3520:172:16",
																					"nodeType": "YulBlock",
																					"src": "3520:172:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3545:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "3545:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3563:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "3563:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3568:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "3568:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3559:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "3559:3:16"
																												},
																												"nativeSrc": "3559:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "3559:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3553:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "3553:5:16"
																										},
																										"nativeSrc": "3553:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "3553:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3538:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "3538:6:16"
																								},
																								"nativeSrc": "3538:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3538:42:16"
																							},
																							"nativeSrc": "3538:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "3538:42:16"
																						},
																						{
																							"nativeSrc": "3597:24:16",
																							"nodeType": "YulAssignment",
																							"src": "3597:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3611:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "3611:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3619:1:16",
																										"nodeType": "YulLiteral",
																										"src": "3619:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3607:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3607:3:16"
																								},
																								"nativeSrc": "3607:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3607:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3597:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "3597:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3638:40:16",
																							"nodeType": "YulAssignment",
																							"src": "3638:40:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3655:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "3655:9:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3666:11:16",
																										"nodeType": "YulIdentifier",
																										"src": "3666:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3651:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3651:3:16"
																								},
																								"nativeSrc": "3651:27:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3651:27:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3638:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "3638:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3467:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "3467:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3470:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "3470:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3464:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "3464:2:16"
																					},
																					"nativeSrc": "3464:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3464:14:16"
																				},
																				"nativeSrc": "3456:236:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3479:28:16",
																					"nodeType": "YulBlock",
																					"src": "3479:28:16",
																					"statements": [
																						{
																							"nativeSrc": "3481:24:16",
																							"nodeType": "YulAssignment",
																							"src": "3481:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3490:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "3490:1:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3493:11:16",
																										"nodeType": "YulIdentifier",
																										"src": "3493:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3486:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3486:3:16"
																								},
																								"nativeSrc": "3486:19:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3486:19:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3481:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "3481:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3460:3:16",
																					"nodeType": "YulBlock",
																					"src": "3460:3:16",
																					"statements": []
																				},
																				"src": "3456:236:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "3740:166:16",
																					"nodeType": "YulBlock",
																					"src": "3740:166:16",
																					"statements": [
																						{
																							"nativeSrc": "3758:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3758:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3785:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "3785:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3790:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "3790:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3781:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "3781:3:16"
																										},
																										"nativeSrc": "3781:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "3781:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3775:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "3775:5:16"
																								},
																								"nativeSrc": "3775:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3775:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3762:9:16",
																									"nodeType": "YulTypedName",
																									"src": "3762:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3825:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "3825:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3837:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "3837:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3864:1:16",
																																				"nodeType": "YulLiteral",
																																				"src": "3864:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3867:6:16",
																																				"nodeType": "YulIdentifier",
																																				"src": "3867:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3860:3:16",
																																			"nodeType": "YulIdentifier",
																																			"src": "3860:3:16"
																																		},
																																		"nativeSrc": "3860:14:16",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3860:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3876:3:16",
																																		"nodeType": "YulLiteral",
																																		"src": "3876:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3856:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "3856:3:16"
																																},
																																"nativeSrc": "3856:24:16",
																																"nodeType": "YulFunctionCall",
																																"src": "3856:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3886:1:16",
																																		"nodeType": "YulLiteral",
																																		"src": "3886:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3882:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "3882:3:16"
																																},
																																"nativeSrc": "3882:6:16",
																																"nodeType": "YulFunctionCall",
																																"src": "3882:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3852:3:16",
																															"nodeType": "YulIdentifier",
																															"src": "3852:3:16"
																														},
																														"nativeSrc": "3852:37:16",
																														"nodeType": "YulFunctionCall",
																														"src": "3852:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3848:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "3848:3:16"
																												},
																												"nativeSrc": "3848:42:16",
																												"nodeType": "YulFunctionCall",
																												"src": "3848:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3833:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "3833:3:16"
																										},
																										"nativeSrc": "3833:58:16",
																										"nodeType": "YulFunctionCall",
																										"src": "3833:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3818:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "3818:6:16"
																								},
																								"nativeSrc": "3818:74:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3818:74:16"
																							},
																							"nativeSrc": "3818:74:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "3818:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3711:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "3711:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3720:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "3720:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3708:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "3708:2:16"
																					},
																					"nativeSrc": "3708:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3708:19:16"
																				},
																				"nativeSrc": "3705:201:16",
																				"nodeType": "YulIf",
																				"src": "3705:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3926:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "3926:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3940:1:16",
																											"nodeType": "YulLiteral",
																											"src": "3940:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3943:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "3943:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3936:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "3936:3:16"
																									},
																									"nativeSrc": "3936:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "3936:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3952:1:16",
																									"nodeType": "YulLiteral",
																									"src": "3952:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3932:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "3932:3:16"
																							},
																							"nativeSrc": "3932:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3932:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3919:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3919:6:16"
																					},
																					"nativeSrc": "3919:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3919:36:16"
																				},
																				"nativeSrc": "3919:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "3919:36:16"
																			}
																		]
																	},
																	"nativeSrc": "3302:663:16",
																	"nodeType": "YulCase",
																	"src": "3302:663:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3307:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3307:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3982:234:16",
																		"nodeType": "YulBlock",
																		"src": "3982:234:16",
																		"statements": [
																			{
																				"nativeSrc": "3996:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3996:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4009:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4009:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4000:5:16",
																						"nodeType": "YulTypedName",
																						"src": "4000:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4045:67:16",
																					"nodeType": "YulBlock",
																					"src": "4045:67:16",
																					"statements": [
																						{
																							"nativeSrc": "4063:35:16",
																							"nodeType": "YulAssignment",
																							"src": "4063:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4082:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "4082:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4087:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4087:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4078:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4078:3:16"
																										},
																										"nativeSrc": "4078:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4078:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4072:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4072:5:16"
																								},
																								"nativeSrc": "4072:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4072:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4063:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4063:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4026:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4026:6:16"
																				},
																				"nativeSrc": "4023:89:16",
																				"nodeType": "YulIf",
																				"src": "4023:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4132:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4132:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4191:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4191:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4198:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4198:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4138:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "4138:52:16"
																							},
																							"nativeSrc": "4138:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4138:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4125:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4125:6:16"
																					},
																					"nativeSrc": "4125:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4125:81:16"
																				},
																				"nativeSrc": "4125:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "4125:81:16"
																			}
																		]
																	},
																	"nativeSrc": "3974:242:16",
																	"nodeType": "YulCase",
																	"src": "3974:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3282:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3282:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3290:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3290:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3279:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3279:2:16"
																},
																"nativeSrc": "3279:14:16",
																"nodeType": "YulFunctionCall",
																"src": "3279:14:16"
															},
															"nativeSrc": "3272:944:16",
															"nodeType": "YulSwitch",
															"src": "3272:944:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2877:1345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2958:4:16",
														"nodeType": "YulTypedName",
														"src": "2958:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2964:3:16",
														"nodeType": "YulTypedName",
														"src": "2964:3:16",
														"type": ""
													}
												],
												"src": "2877:1345:16"
											},
											{
												"body": {
													"nativeSrc": "4440:276:16",
													"nodeType": "YulBlock",
													"src": "4440:276:16",
													"statements": [
														{
															"nativeSrc": "4450:27:16",
															"nodeType": "YulAssignment",
															"src": "4450:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4462:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4462:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4473:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4473:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4458:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:16"
																},
																"nativeSrc": "4458:19:16",
																"nodeType": "YulFunctionCall",
																"src": "4458:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4450:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4450:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4493:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4493:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4504:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4504:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4486:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:16"
																},
																"nativeSrc": "4486:25:16",
																"nodeType": "YulFunctionCall",
																"src": "4486:25:16"
															},
															"nativeSrc": "4486:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "4486:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4531:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4531:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4542:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4542:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4527:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:16"
																		},
																		"nativeSrc": "4527:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4547:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4547:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4520:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:16"
																},
																"nativeSrc": "4520:34:16",
																"nodeType": "YulFunctionCall",
																"src": "4520:34:16"
															},
															"nativeSrc": "4520:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "4520:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4574:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4574:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4585:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4585:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4570:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4570:3:16"
																		},
																		"nativeSrc": "4570:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4570:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4590:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4590:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4563:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4563:6:16"
																},
																"nativeSrc": "4563:34:16",
																"nodeType": "YulFunctionCall",
																"src": "4563:34:16"
															},
															"nativeSrc": "4563:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "4563:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4617:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4617:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4628:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4628:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4613:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4613:3:16"
																		},
																		"nativeSrc": "4613:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4613:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "4633:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4633:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4606:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4606:6:16"
																},
																"nativeSrc": "4606:34:16",
																"nodeType": "YulFunctionCall",
																"src": "4606:34:16"
															},
															"nativeSrc": "4606:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "4606:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4660:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4660:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4671:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4671:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4656:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4656:3:16"
																		},
																		"nativeSrc": "4656:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4656:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "4681:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4681:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4697:3:16",
																								"nodeType": "YulLiteral",
																								"src": "4697:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4702:1:16",
																								"nodeType": "YulLiteral",
																								"src": "4702:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4693:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "4693:3:16"
																						},
																						"nativeSrc": "4693:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "4693:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4706:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4706:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4689:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4689:3:16"
																				},
																				"nativeSrc": "4689:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4689:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4677:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:16"
																		},
																		"nativeSrc": "4677:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4677:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4649:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4649:6:16"
																},
																"nativeSrc": "4649:61:16",
																"nodeType": "YulFunctionCall",
																"src": "4649:61:16"
															},
															"nativeSrc": "4649:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "4649:61:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "4227:489:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4377:9:16",
														"nodeType": "YulTypedName",
														"src": "4377:9:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4388:6:16",
														"nodeType": "YulTypedName",
														"src": "4388:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4396:6:16",
														"nodeType": "YulTypedName",
														"src": "4396:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4404:6:16",
														"nodeType": "YulTypedName",
														"src": "4404:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4412:6:16",
														"nodeType": "YulTypedName",
														"src": "4412:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4420:6:16",
														"nodeType": "YulTypedName",
														"src": "4420:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4431:4:16",
														"nodeType": "YulTypedName",
														"src": "4431:4:16",
														"type": ""
													}
												],
												"src": "4227:489:16"
											},
											{
												"body": {
													"nativeSrc": "4842:275:16",
													"nodeType": "YulBlock",
													"src": "4842:275:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4859:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4859:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4870:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4870:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4852:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4852:6:16"
																},
																"nativeSrc": "4852:21:16",
																"nodeType": "YulFunctionCall",
																"src": "4852:21:16"
															},
															"nativeSrc": "4852:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "4852:21:16"
														},
														{
															"nativeSrc": "4882:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4882:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4902:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4902:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4896:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4896:5:16"
																},
																"nativeSrc": "4896:13:16",
																"nodeType": "YulFunctionCall",
																"src": "4896:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4886:6:16",
																	"nodeType": "YulTypedName",
																	"src": "4886:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4929:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4929:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4940:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4940:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4925:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4925:3:16"
																		},
																		"nativeSrc": "4925:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4925:18:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4945:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4945:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4918:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:16"
																},
																"nativeSrc": "4918:34:16",
																"nodeType": "YulFunctionCall",
																"src": "4918:34:16"
															},
															"nativeSrc": "4918:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "4918:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5000:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5000:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5008:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5008:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4996:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4996:3:16"
																		},
																		"nativeSrc": "4996:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4996:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5017:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5017:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5028:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5028:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5013:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5013:3:16"
																		},
																		"nativeSrc": "5013:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5013:18:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5033:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5033:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4961:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "4961:34:16"
																},
																"nativeSrc": "4961:79:16",
																"nodeType": "YulFunctionCall",
																"src": "4961:79:16"
															},
															"nativeSrc": "4961:79:16",
															"nodeType": "YulExpressionStatement",
															"src": "4961:79:16"
														},
														{
															"nativeSrc": "5049:62:16",
															"nodeType": "YulAssignment",
															"src": "5049:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5065:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5065:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5084:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "5084:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5092:2:16",
																								"nodeType": "YulLiteral",
																								"src": "5092:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5080:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5080:3:16"
																						},
																						"nativeSrc": "5080:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5080:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5101:2:16",
																								"nodeType": "YulLiteral",
																								"src": "5101:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5097:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5097:3:16"
																						},
																						"nativeSrc": "5097:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5097:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5076:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5076:3:16"
																				},
																				"nativeSrc": "5076:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5076:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5061:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5061:3:16"
																		},
																		"nativeSrc": "5061:45:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5061:45:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5108:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5108:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5057:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5057:3:16"
																},
																"nativeSrc": "5057:54:16",
																"nodeType": "YulFunctionCall",
																"src": "5057:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5049:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5049:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4721:396:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4811:9:16",
														"nodeType": "YulTypedName",
														"src": "4811:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4822:6:16",
														"nodeType": "YulTypedName",
														"src": "4822:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4833:4:16",
														"nodeType": "YulTypedName",
														"src": "4833:4:16",
														"type": ""
													}
												],
												"src": "4721:396:16"
											},
											{
												"body": {
													"nativeSrc": "5216:203:16",
													"nodeType": "YulBlock",
													"src": "5216:203:16",
													"statements": [
														{
															"nativeSrc": "5226:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5226:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5246:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5246:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5240:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5240:5:16"
																},
																"nativeSrc": "5240:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5240:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5230:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5230:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5261:32:16",
															"nodeType": "YulAssignment",
															"src": "5261:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "5280:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5280:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5287:4:16",
																				"nodeType": "YulLiteral",
																				"src": "5287:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5276:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5276:3:16"
																		},
																		"nativeSrc": "5276:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5276:16:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5270:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5270:5:16"
																},
																"nativeSrc": "5270:23:16",
																"nodeType": "YulFunctionCall",
																"src": "5270:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5261:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5261:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5330:83:16",
																"nodeType": "YulBlock",
																"src": "5330:83:16",
																"statements": [
																	{
																		"nativeSrc": "5344:59:16",
																		"nodeType": "YulAssignment",
																		"src": "5344:59:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "5357:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "5357:5:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5372:1:16",
																									"nodeType": "YulLiteral",
																									"src": "5372:1:16",
																									"type": "",
																									"value": "3"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "5379:4:16",
																											"nodeType": "YulLiteral",
																											"src": "5379:4:16",
																											"type": "",
																											"value": "0x20"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "5385:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "5385:6:16"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "5375:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "5375:3:16"
																									},
																									"nativeSrc": "5375:17:16",
																									"nodeType": "YulFunctionCall",
																									"src": "5375:17:16"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nativeSrc": "5368:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "5368:3:16"
																							},
																							"nativeSrc": "5368:25:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5368:25:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5399:1:16",
																									"nodeType": "YulLiteral",
																									"src": "5399:1:16",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5395:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "5395:3:16"
																							},
																							"nativeSrc": "5395:6:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5395:6:16"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5364:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "5364:3:16"
																					},
																					"nativeSrc": "5364:38:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5364:38:16"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5353:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5353:3:16"
																			},
																			"nativeSrc": "5353:50:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5353:50:16"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "5344:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5344:5:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5308:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5308:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5316:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5316:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5305:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5305:2:16"
																},
																"nativeSrc": "5305:16:16",
																"nodeType": "YulFunctionCall",
																"src": "5305:16:16"
															},
															"nativeSrc": "5302:111:16",
															"nodeType": "YulIf",
															"src": "5302:111:16"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "5122:297:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5196:5:16",
														"nodeType": "YulTypedName",
														"src": "5196:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5206:5:16",
														"nodeType": "YulTypedName",
														"src": "5206:5:16",
														"type": ""
													}
												],
												"src": "5122:297:16"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13D6 CODESIZE SUB DUP1 PUSH3 0x13D6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x278 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP1 DUP2 DUP4 PUSH1 0x3 PUSH3 0x5E DUP4 DUP3 PUSH3 0x368 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x6D DUP3 DUP3 PUSH3 0x368 JUMP JUMPDEST POP PUSH3 0x7F SWAP2 POP DUP4 SWAP1 POP PUSH1 0x5 PUSH3 0x12F JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x90 DUP2 PUSH1 0x6 PUSH3 0x12F JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x11D PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x48C SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x14E JUMPI PUSH3 0x146 DUP4 PUSH3 0x167 JUMP JUMPDEST SWAP1 POP PUSH3 0x161 JUMP JUMPDEST DUP2 PUSH3 0x15B DUP5 DUP3 PUSH3 0x368 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x19D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x194 SWAP2 SWAP1 PUSH3 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x1AA DUP3 PUSH3 0x468 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1E2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1C8 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x217 JUMPI PUSH3 0x217 PUSH3 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x242 JUMPI PUSH3 0x242 PUSH3 0x1B2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x26E DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH3 0x1C6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x2AF DUP7 DUP4 DUP8 ADD PUSH3 0x1EA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x2D4 DUP6 DUP3 DUP7 ADD PUSH3 0x1EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x312 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x363 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x33F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x360 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x34B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x384 JUMPI PUSH3 0x384 PUSH3 0x1B2 JUMP JUMPDEST PUSH3 0x39C DUP2 PUSH3 0x395 DUP5 SLOAD PUSH3 0x2DE JUMP JUMPDEST DUP5 PUSH3 0x318 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3D2 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x3BA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x42C JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x402 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3E1 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x420 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x454 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x1C6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x312 JUMPI PUSH0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0xEF8 PUSH3 0x4DE PUSH0 CODECOPY PUSH0 PUSH2 0x6F7 ADD MSTORE PUSH0 PUSH2 0x6CA ADD MSTORE PUSH0 PUSH2 0x673 ADD MSTORE PUSH0 PUSH2 0x64B ADD MSTORE PUSH0 PUSH2 0x5A6 ADD MSTORE PUSH0 PUSH2 0x5D0 ADD MSTORE PUSH0 PUSH2 0x5FA ADD MSTORE PUSH2 0xEF8 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x19C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x2EB JUMP JUMPDEST PUSH2 0x114 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x33B JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x22E SWAP1 PUSH2 0xE57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0xE57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x27C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x288 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2BC DUP2 DUP6 DUP6 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2D5 DUP6 DUP3 DUP6 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x2E0 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4 PUSH2 0x59A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x30A PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x22E SWAP1 PUSH2 0xE57 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2BC DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x3CD DUP13 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x427 DUP3 PUSH2 0x750 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x436 DUP3 DUP8 DUP8 DUP8 PUSH2 0x77C JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x396 JUMP JUMPDEST PUSH2 0x4A4 DUP11 DUP11 DUP11 PUSH2 0x4B0 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4BD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x396 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x7A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH2 0x4BD DUP4 DUP4 DUP4 PUSH2 0x87A JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x5F2 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x61C JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2F4 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F4 PUSH32 0x0 PUSH1 0x5 PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F4 PUSH32 0x0 PUSH1 0x6 PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x745 DUP4 DUP6 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x75C PUSH2 0x59A JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x78C DUP9 DUP9 DUP9 DUP9 PUSH2 0xA49 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x79C DUP3 DUP3 PUSH2 0xB11 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x537 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x86C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8A4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x914 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x930 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x94E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x993 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x9BA JUMPI PUSH2 0x9B3 DUP4 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x9C6 SWAP1 PUSH2 0xE57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F2 SWAP1 PUSH2 0xE57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xA82 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAFE JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xB07 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB24 JUMPI PUSH2 0xB24 PUSH2 0xEAE JUMP JUMPDEST SUB PUSH2 0xB2D JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB41 PUSH2 0xEAE JUMP JUMPDEST SUB PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB73 JUMPI PUSH2 0xB73 PUSH2 0xEAE JUMP JUMPDEST SUB PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA8 PUSH2 0xEAE JUMP JUMPDEST SUB PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xBD9 DUP4 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC55 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC39 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC86 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCEB DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP3 POP PUSH2 0xCF9 PUSH1 0x20 DUP6 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC86 DUP3 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xD42 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xC31 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xD54 DUP2 DUP11 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDA7 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD8B JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xDCF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDD8 DUP9 PUSH2 0xC8D JUMP JUMPDEST SWAP7 POP PUSH2 0xDE6 PUSH1 0x20 DUP10 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE09 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE37 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE40 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP2 POP PUSH2 0xE4E PUSH1 0x20 DUP5 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE6B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 RETURNDATASIZE SWAP1 0x2B DUP10 0x21 PUSH15 0xD0B3785B7E5D43C62B46EF03615902 0xE8 SWAP15 CODECOPY 0xB9 EXTCODEHASH SLT 0xC7 0x27 SLOAD 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "334:1540:15:-:0;;;615:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:11;;;;;;;;;;;;-1:-1:-1;;;3328:431:11;;;;698:4:15;;;721:6;1962:5:2;:13;698:4:15;1962:5:2;:13;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;3401:45:11;;-1:-1:-1;3401:4:11;;-1:-1:-1;3432:13:11;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4486:25:16;4527:18;;;4520:34;;;;4570:18;;;4563:34;4255:13:11;4613:18:16;;;4606:34;4278:4:11;4656:19:16;;;4649:61;4168:7:11;;4458:19:16;;4204:80:11;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:11;3725:27;;-1:-1:-1;334:1540:15;;-1:-1:-1;334:1540:15;2914:340:7;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;:20::i;:::-;3077:27;;;;3033:215;3161:5;3135:46;3176:5;3161;3135:46;:::i;:::-;-1:-1:-1;1390:66:7;;-1:-1:-1;3033:215:7;2914:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:7;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:7:o;14:127:16:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:16;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:16;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:16;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:16:o;1105:562::-;1204:6;1212;1265:2;1253:9;1244:7;1240:23;1236:32;1233:52;;;1281:1;1278;1271:12;1233:52;1308:16;;-1:-1:-1;;;;;1373:14:16;;;1370:34;;;1400:1;1397;1390:12;1370:34;1423:61;1476:7;1467:6;1456:9;1452:22;1423:61;:::i;:::-;1413:71;;1530:2;1519:9;1515:18;1509:25;1493:41;;1559:2;1549:8;1546:16;1543:36;;;1575:1;1572;1565:12;1543:36;;1598:63;1653:7;1642:8;1631:9;1627:24;1598:63;:::i;:::-;1588:73;;;1105:562;;;;;:::o;1672:380::-;1751:1;1747:12;;;;1794;;;1815:61;;1869:4;1861:6;1857:17;1847:27;;1815:61;1922:2;1914:6;1911:14;1891:18;1888:38;1885:161;;1968:10;1963:3;1959:20;1956:1;1949:31;2003:4;2000:1;1993:15;2031:4;2028:1;2021:15;1885:161;;1672:380;;;:::o;2183:518::-;2285:2;2280:3;2277:11;2274:421;;;2321:5;2318:1;2311:16;2365:4;2362:1;2352:18;2435:2;2423:10;2419:19;2416:1;2412:27;2406:4;2402:38;2471:4;2459:10;2456:20;2453:47;;;-1:-1:-1;2494:4:16;2453:47;2549:2;2544:3;2540:12;2537:1;2533:20;2527:4;2523:31;2513:41;;2604:81;2622:2;2615:5;2612:13;2604:81;;;2681:1;2667:16;;2648:1;2637:13;2604:81;;;2608:3;;2274:421;2183:518;;;:::o;2877:1345::-;2997:10;;-1:-1:-1;;;;;3019:30:16;;3016:56;;;3052:18;;:::i;:::-;3081:97;3171:6;3131:38;3163:4;3157:11;3131:38;:::i;:::-;3125:4;3081:97;:::i;:::-;3233:4;;3290:2;3279:14;;3307:1;3302:663;;;;4009:1;4026:6;4023:89;;;-1:-1:-1;4078:19:16;;;4072:26;4023:89;-1:-1:-1;;2834:1:16;2830:11;;;2826:24;2822:29;2812:40;2858:1;2854:11;;;2809:57;4125:81;;3272:944;;3302:663;2130:1;2123:14;;;2167:4;2154:18;;-1:-1:-1;;3338:20:16;;;3456:236;3470:7;3467:1;3464:14;3456:236;;;3559:19;;;3553:26;3538:42;;3651:27;;;;3619:1;3607:14;;;;3486:19;;3456:236;;;3460:3;3720:6;3711:7;3708:19;3705:201;;;3781:19;;;3775:26;-1:-1:-1;;3864:1:16;3860:14;;;3876:3;3856:24;3852:37;3848:42;3833:58;3818:74;;3705:201;;;3952:1;3943:6;3940:1;3936:14;3932:22;3926:4;3919:36;3272:944;;;;;2877:1345;;:::o;4721:396::-;4870:2;4859:9;4852:21;4833:4;4902:6;4896:13;4945:6;4940:2;4929:9;4925:18;4918:34;4961:79;5033:6;5028:2;5017:9;5013:18;5008:2;5000:6;4996:15;4961:79;:::i;:::-;5101:2;5080:15;-1:-1:-1;;5076:29:16;5061:45;;;;5108:2;5057:54;;4721:396;-1:-1:-1;;4721:396:16:o;5122:297::-;5240:12;;5287:4;5276:16;;;5270:23;;5240:12;5305:16;;5302:111;;;-1:-1:-1;;5379:4:16;5375:17;;;;5372:1;5368:25;5364:38;5353:50;;5122:297;-1:-1:-1;5122:297:16:o;:::-;334:1540:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3368": {
									"entryPoint": 747,
									"id": 3368,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_1990": {
									"entryPoint": 1731,
									"id": 1990,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2002": {
									"entryPoint": 1776,
									"id": 2002,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_567": {
									"entryPoint": 1200,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 1960,
									"id": 627,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_1920": {
									"entryPoint": null,
									"id": 1920,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_domainSeparatorV4_1899": {
									"entryPoint": 1434,
									"id": 1899,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_1936": {
									"entryPoint": 1872,
									"id": 1936,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_828": {
									"entryPoint": null,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_675": {
									"entryPoint": 1218,
									"id": 675,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_1775": {
									"entryPoint": 2833,
									"id": 1775,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_406": {
									"entryPoint": 1341,
									"id": 406,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_483": {
									"entryPoint": 2170,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_3388": {
									"entryPoint": 1821,
									"id": 3388,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_327": {
									"entryPoint": 687,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_262": {
									"entryPoint": null,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_964": {
									"entryPoint": 3082,
									"id": 964,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_240": {
									"entryPoint": null,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_1978": {
									"entryPoint": 761,
									"id": 1978,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@name_222": {
									"entryPoint": 543,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_3358": {
									"entryPoint": null,
									"id": 3358,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_3345": {
									"entryPoint": 855,
									"id": 3345,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_1726": {
									"entryPoint": 1916,
									"id": 1726,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@symbol_231": {
									"entryPoint": 827,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_1031": {
									"entryPoint": 2464,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_932": {
									"entryPoint": 3021,
									"id": 932,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2076": {
									"entryPoint": null,
									"id": 2076,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_249": {
									"entryPoint": null,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_359": {
									"entryPoint": 712,
									"id": 359,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_286": {
									"entryPoint": 842,
									"id": 286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_1690": {
									"entryPoint": 2633,
									"id": 1690,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_address": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3362,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a9c01aa97ea1d1338d23615397cff7556f82c336595551da4b9fcd308b578174__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8228:16",
										"nodeType": "YulBlock",
										"src": "0:8228:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "64:373:16",
													"nodeType": "YulBlock",
													"src": "64:373:16",
													"statements": [
														{
															"nativeSrc": "74:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "94:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "88:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:16"
																},
																"nativeSrc": "88:12:16",
																"nodeType": "YulFunctionCall",
																"src": "88:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "78:6:16",
																	"nodeType": "YulTypedName",
																	"src": "78:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "116:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "121:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "109:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:16"
																},
																"nativeSrc": "109:19:16",
																"nodeType": "YulFunctionCall",
																"src": "109:19:16"
															},
															"nativeSrc": "109:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "109:19:16"
														},
														{
															"nativeSrc": "137:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "137:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "146:1:16",
																"nodeType": "YulLiteral",
																"src": "146:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "141:1:16",
																	"nodeType": "YulTypedName",
																	"src": "141:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "208:110:16",
																"nodeType": "YulBlock",
																"src": "208:110:16",
																"statements": [
																	{
																		"nativeSrc": "222:14:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "222:14:16",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "232:4:16",
																			"nodeType": "YulLiteral",
																			"src": "232:4:16",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "226:2:16",
																				"nodeType": "YulTypedName",
																				"src": "226:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nativeSrc": "264:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "264:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "269:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "269:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "260:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "260:3:16"
																							},
																							"nativeSrc": "260:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "260:11:16"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "273:2:16",
																							"nodeType": "YulIdentifier",
																							"src": "273:2:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "256:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "256:3:16"
																					},
																					"nativeSrc": "256:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "256:20:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "292:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "292:5:16"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "299:1:16",
																											"nodeType": "YulIdentifier",
																											"src": "299:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "288:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "288:3:16"
																									},
																									"nativeSrc": "288:13:16",
																									"nodeType": "YulFunctionCall",
																									"src": "288:13:16"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "303:2:16",
																									"nodeType": "YulIdentifier",
																									"src": "303:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "284:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "284:3:16"
																							},
																							"nativeSrc": "284:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "284:22:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "278:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "278:5:16"
																					},
																					"nativeSrc": "278:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "278:29:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "249:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "249:6:16"
																			},
																			"nativeSrc": "249:59:16",
																			"nodeType": "YulFunctionCall",
																			"src": "249:59:16"
																		},
																		"nativeSrc": "249:59:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "249:59:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "167:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "167:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "170:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "170:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "164:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "164:2:16"
																},
																"nativeSrc": "164:13:16",
																"nodeType": "YulFunctionCall",
																"src": "164:13:16"
															},
															"nativeSrc": "156:162:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "178:21:16",
																"nodeType": "YulBlock",
																"src": "178:21:16",
																"statements": [
																	{
																		"nativeSrc": "180:17:16",
																		"nodeType": "YulAssignment",
																		"src": "180:17:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "189:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "189:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "192:4:16",
																					"nodeType": "YulLiteral",
																					"src": "192:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "185:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "185:3:16"
																			},
																			"nativeSrc": "185:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "185:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "180:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "180:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "160:3:16",
																"nodeType": "YulBlock",
																"src": "160:3:16",
																"statements": []
															},
															"src": "156:162:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "342:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "342:3:16"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "347:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "347:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "338:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:16"
																				},
																				"nativeSrc": "338:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "338:16:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "356:4:16",
																				"nodeType": "YulLiteral",
																				"src": "356:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "334:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:16"
																		},
																		"nativeSrc": "334:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "334:27:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "363:1:16",
																		"nodeType": "YulLiteral",
																		"src": "363:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "327:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:16"
																},
																"nativeSrc": "327:38:16",
																"nodeType": "YulFunctionCall",
																"src": "327:38:16"
															},
															"nativeSrc": "327:38:16",
															"nodeType": "YulExpressionStatement",
															"src": "327:38:16"
														},
														{
															"nativeSrc": "374:57:16",
															"nodeType": "YulAssignment",
															"src": "374:57:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "389:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "389:3:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "402:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "402:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "410:2:16",
																								"nodeType": "YulLiteral",
																								"src": "410:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "398:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "398:3:16"
																						},
																						"nativeSrc": "398:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "398:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "419:2:16",
																								"nodeType": "YulLiteral",
																								"src": "419:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "415:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "415:3:16"
																						},
																						"nativeSrc": "415:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "415:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "394:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "394:3:16"
																				},
																				"nativeSrc": "394:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "394:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "385:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "385:3:16"
																		},
																		"nativeSrc": "385:39:16",
																		"nodeType": "YulFunctionCall",
																		"src": "385:39:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "426:4:16",
																		"nodeType": "YulLiteral",
																		"src": "426:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "381:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "381:3:16"
																},
																"nativeSrc": "381:50:16",
																"nodeType": "YulFunctionCall",
																"src": "381:50:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "374:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "14:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "41:5:16",
														"nodeType": "YulTypedName",
														"src": "41:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "48:3:16",
														"nodeType": "YulTypedName",
														"src": "48:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "56:3:16",
														"nodeType": "YulTypedName",
														"src": "56:3:16",
														"type": ""
													}
												],
												"src": "14:423:16"
											},
											{
												"body": {
													"nativeSrc": "563:99:16",
													"nodeType": "YulBlock",
													"src": "563:99:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "580:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "580:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "591:2:16",
																		"nodeType": "YulLiteral",
																		"src": "591:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "573:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:16"
																},
																"nativeSrc": "573:21:16",
																"nodeType": "YulFunctionCall",
																"src": "573:21:16"
															},
															"nativeSrc": "573:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "573:21:16"
														},
														{
															"nativeSrc": "603:53:16",
															"nodeType": "YulAssignment",
															"src": "603:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "629:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "641:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "641:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "652:2:16",
																				"nodeType": "YulLiteral",
																				"src": "652:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "637:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "637:3:16"
																		},
																		"nativeSrc": "637:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "637:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "611:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "611:17:16"
																},
																"nativeSrc": "611:45:16",
																"nodeType": "YulFunctionCall",
																"src": "611:45:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "603:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "603:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "442:220:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "532:9:16",
														"nodeType": "YulTypedName",
														"src": "532:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "543:6:16",
														"nodeType": "YulTypedName",
														"src": "543:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "554:4:16",
														"nodeType": "YulTypedName",
														"src": "554:4:16",
														"type": ""
													}
												],
												"src": "442:220:16"
											},
											{
												"body": {
													"nativeSrc": "716:124:16",
													"nodeType": "YulBlock",
													"src": "716:124:16",
													"statements": [
														{
															"nativeSrc": "726:29:16",
															"nodeType": "YulAssignment",
															"src": "726:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "748:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "748:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "735:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "735:12:16"
																},
																"nativeSrc": "735:20:16",
																"nodeType": "YulFunctionCall",
																"src": "735:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "726:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "818:16:16",
																"nodeType": "YulBlock",
																"src": "818:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "827:1:16",
																					"nodeType": "YulLiteral",
																					"src": "827:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "830:1:16",
																					"nodeType": "YulLiteral",
																					"src": "830:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "820:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:16"
																			},
																			"nativeSrc": "820:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:16"
																		},
																		"nativeSrc": "820:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "788:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "788:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "803:3:16",
																										"nodeType": "YulLiteral",
																										"src": "803:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "808:1:16",
																										"nodeType": "YulLiteral",
																										"src": "808:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "799:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "799:3:16"
																								},
																								"nativeSrc": "799:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "799:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "812:1:16",
																								"nodeType": "YulLiteral",
																								"src": "812:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "795:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "795:3:16"
																						},
																						"nativeSrc": "795:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "795:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "784:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:16"
																				},
																				"nativeSrc": "784:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "784:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "774:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "774:2:16"
																		},
																		"nativeSrc": "774:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "774:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "767:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:16"
																},
																"nativeSrc": "767:50:16",
																"nodeType": "YulFunctionCall",
																"src": "767:50:16"
															},
															"nativeSrc": "764:70:16",
															"nodeType": "YulIf",
															"src": "764:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "667:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "695:6:16",
														"nodeType": "YulTypedName",
														"src": "695:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "706:5:16",
														"nodeType": "YulTypedName",
														"src": "706:5:16",
														"type": ""
													}
												],
												"src": "667:173:16"
											},
											{
												"body": {
													"nativeSrc": "932:167:16",
													"nodeType": "YulBlock",
													"src": "932:167:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "978:16:16",
																"nodeType": "YulBlock",
																"src": "978:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "987:1:16",
																					"nodeType": "YulLiteral",
																					"src": "987:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "990:1:16",
																					"nodeType": "YulLiteral",
																					"src": "990:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "980:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "980:6:16"
																			},
																			"nativeSrc": "980:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "980:12:16"
																		},
																		"nativeSrc": "980:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "980:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "953:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "962:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "962:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "949:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:16"
																		},
																		"nativeSrc": "949:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "949:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "974:2:16",
																		"nodeType": "YulLiteral",
																		"src": "974:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "945:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:16"
																},
																"nativeSrc": "945:32:16",
																"nodeType": "YulFunctionCall",
																"src": "945:32:16"
															},
															"nativeSrc": "942:52:16",
															"nodeType": "YulIf",
															"src": "942:52:16"
														},
														{
															"nativeSrc": "1003:39:16",
															"nodeType": "YulAssignment",
															"src": "1003:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1032:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1013:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1013:18:16"
																},
																"nativeSrc": "1013:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1013:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1003:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:16"
																}
															]
														},
														{
															"nativeSrc": "1051:42:16",
															"nodeType": "YulAssignment",
															"src": "1051:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:16"
																		},
																		"nativeSrc": "1074:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:16"
																},
																"nativeSrc": "1061:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1051:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1051:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "845:254:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "890:9:16",
														"nodeType": "YulTypedName",
														"src": "890:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "901:7:16",
														"nodeType": "YulTypedName",
														"src": "901:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "913:6:16",
														"nodeType": "YulTypedName",
														"src": "913:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "921:6:16",
														"nodeType": "YulTypedName",
														"src": "921:6:16",
														"type": ""
													}
												],
												"src": "845:254:16"
											},
											{
												"body": {
													"nativeSrc": "1199:92:16",
													"nodeType": "YulBlock",
													"src": "1199:92:16",
													"statements": [
														{
															"nativeSrc": "1209:26:16",
															"nodeType": "YulAssignment",
															"src": "1209:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1221:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1221:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1232:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1217:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1217:3:16"
																},
																"nativeSrc": "1217:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1217:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1209:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1209:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1251:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1251:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1276:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1276:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1269:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "1269:6:16"
																				},
																				"nativeSrc": "1269:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1269:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1262:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1262:6:16"
																		},
																		"nativeSrc": "1262:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1262:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1244:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:16"
																},
																"nativeSrc": "1244:41:16",
																"nodeType": "YulFunctionCall",
																"src": "1244:41:16"
															},
															"nativeSrc": "1244:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "1244:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1104:187:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1168:9:16",
														"nodeType": "YulTypedName",
														"src": "1168:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1179:6:16",
														"nodeType": "YulTypedName",
														"src": "1179:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1190:4:16",
														"nodeType": "YulTypedName",
														"src": "1190:4:16",
														"type": ""
													}
												],
												"src": "1104:187:16"
											},
											{
												"body": {
													"nativeSrc": "1397:76:16",
													"nodeType": "YulBlock",
													"src": "1397:76:16",
													"statements": [
														{
															"nativeSrc": "1407:26:16",
															"nodeType": "YulAssignment",
															"src": "1407:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1419:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1419:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1430:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1430:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1415:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1415:3:16"
																},
																"nativeSrc": "1415:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1415:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1407:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1407:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1449:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1449:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1460:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:16"
																},
																"nativeSrc": "1442:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1442:25:16"
															},
															"nativeSrc": "1442:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "1442:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1296:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:16",
														"nodeType": "YulTypedName",
														"src": "1366:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1377:6:16",
														"nodeType": "YulTypedName",
														"src": "1377:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1388:4:16",
														"nodeType": "YulTypedName",
														"src": "1388:4:16",
														"type": ""
													}
												],
												"src": "1296:177:16"
											},
											{
												"body": {
													"nativeSrc": "1582:224:16",
													"nodeType": "YulBlock",
													"src": "1582:224:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1628:16:16",
																"nodeType": "YulBlock",
																"src": "1628:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1637:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1640:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1630:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1630:6:16"
																			},
																			"nativeSrc": "1630:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1630:12:16"
																		},
																		"nativeSrc": "1630:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1603:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1603:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1612:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1599:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1599:3:16"
																		},
																		"nativeSrc": "1599:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1599:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1624:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1624:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1595:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1595:3:16"
																},
																"nativeSrc": "1595:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1595:32:16"
															},
															"nativeSrc": "1592:52:16",
															"nodeType": "YulIf",
															"src": "1592:52:16"
														},
														{
															"nativeSrc": "1653:39:16",
															"nodeType": "YulAssignment",
															"src": "1653:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1682:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1682:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1663:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1663:18:16"
																},
																"nativeSrc": "1663:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1663:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1653:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:16"
																}
															]
														},
														{
															"nativeSrc": "1701:48:16",
															"nodeType": "YulAssignment",
															"src": "1701:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1734:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1745:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1730:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:16"
																		},
																		"nativeSrc": "1730:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1711:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1711:18:16"
																},
																"nativeSrc": "1711:38:16",
																"nodeType": "YulFunctionCall",
																"src": "1711:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1701:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1701:6:16"
																}
															]
														},
														{
															"nativeSrc": "1758:42:16",
															"nodeType": "YulAssignment",
															"src": "1758:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1785:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1785:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1796:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1796:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1781:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:16"
																		},
																		"nativeSrc": "1781:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1768:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1768:12:16"
																},
																"nativeSrc": "1768:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1768:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1758:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1478:328:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1532:9:16",
														"nodeType": "YulTypedName",
														"src": "1532:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1543:7:16",
														"nodeType": "YulTypedName",
														"src": "1543:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1555:6:16",
														"nodeType": "YulTypedName",
														"src": "1555:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1563:6:16",
														"nodeType": "YulTypedName",
														"src": "1563:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1571:6:16",
														"nodeType": "YulTypedName",
														"src": "1571:6:16",
														"type": ""
													}
												],
												"src": "1478:328:16"
											},
											{
												"body": {
													"nativeSrc": "1908:87:16",
													"nodeType": "YulBlock",
													"src": "1908:87:16",
													"statements": [
														{
															"nativeSrc": "1918:26:16",
															"nodeType": "YulAssignment",
															"src": "1918:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1930:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1941:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1926:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:16"
																},
																"nativeSrc": "1926:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1926:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1918:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1960:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1960:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1975:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1983:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1983:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1971:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:16"
																		},
																		"nativeSrc": "1971:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1971:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1953:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1953:6:16"
																},
																"nativeSrc": "1953:36:16",
																"nodeType": "YulFunctionCall",
																"src": "1953:36:16"
															},
															"nativeSrc": "1953:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "1953:36:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1811:184:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1877:9:16",
														"nodeType": "YulTypedName",
														"src": "1877:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1888:6:16",
														"nodeType": "YulTypedName",
														"src": "1888:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1899:4:16",
														"nodeType": "YulTypedName",
														"src": "1899:4:16",
														"type": ""
													}
												],
												"src": "1811:184:16"
											},
											{
												"body": {
													"nativeSrc": "2101:76:16",
													"nodeType": "YulBlock",
													"src": "2101:76:16",
													"statements": [
														{
															"nativeSrc": "2111:26:16",
															"nodeType": "YulAssignment",
															"src": "2111:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2123:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2123:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2134:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2119:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2119:3:16"
																},
																"nativeSrc": "2119:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2119:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2111:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2111:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2153:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2153:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2164:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2164:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2146:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:16"
																},
																"nativeSrc": "2146:25:16",
																"nodeType": "YulFunctionCall",
																"src": "2146:25:16"
															},
															"nativeSrc": "2146:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "2146:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2000:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2070:9:16",
														"nodeType": "YulTypedName",
														"src": "2070:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2081:6:16",
														"nodeType": "YulTypedName",
														"src": "2081:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2092:4:16",
														"nodeType": "YulTypedName",
														"src": "2092:4:16",
														"type": ""
													}
												],
												"src": "2000:177:16"
											},
											{
												"body": {
													"nativeSrc": "2252:116:16",
													"nodeType": "YulBlock",
													"src": "2252:116:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2298:16:16",
																"nodeType": "YulBlock",
																"src": "2298:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2307:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2307:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2310:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2310:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2300:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2300:6:16"
																			},
																			"nativeSrc": "2300:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2300:12:16"
																		},
																		"nativeSrc": "2300:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2300:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2273:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2273:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2282:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2282:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2269:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:16"
																		},
																		"nativeSrc": "2269:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2269:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2294:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2294:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2265:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2265:3:16"
																},
																"nativeSrc": "2265:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2265:32:16"
															},
															"nativeSrc": "2262:52:16",
															"nodeType": "YulIf",
															"src": "2262:52:16"
														},
														{
															"nativeSrc": "2323:39:16",
															"nodeType": "YulAssignment",
															"src": "2323:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2352:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2352:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2333:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2333:18:16"
																},
																"nativeSrc": "2333:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2333:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2323:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2182:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2218:9:16",
														"nodeType": "YulTypedName",
														"src": "2218:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2229:7:16",
														"nodeType": "YulTypedName",
														"src": "2229:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2241:6:16",
														"nodeType": "YulTypedName",
														"src": "2241:6:16",
														"type": ""
													}
												],
												"src": "2182:186:16"
											},
											{
												"body": {
													"nativeSrc": "2730:902:16",
													"nodeType": "YulBlock",
													"src": "2730:902:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2747:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2747:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2762:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2774:3:16",
																						"nodeType": "YulLiteral",
																						"src": "2774:3:16",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2779:3:16",
																						"nodeType": "YulLiteral",
																						"src": "2779:3:16",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2770:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2770:3:16"
																				},
																				"nativeSrc": "2770:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2770:13:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2758:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:16"
																		},
																		"nativeSrc": "2758:26:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2758:26:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2740:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2740:6:16"
																},
																"nativeSrc": "2740:45:16",
																"nodeType": "YulFunctionCall",
																"src": "2740:45:16"
															},
															"nativeSrc": "2740:45:16",
															"nodeType": "YulExpressionStatement",
															"src": "2740:45:16"
														},
														{
															"nativeSrc": "2794:12:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2794:12:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2804:2:16",
																"nodeType": "YulLiteral",
																"src": "2804:2:16",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2798:2:16",
																	"nodeType": "YulTypedName",
																	"src": "2798:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2826:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2826:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2837:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2837:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2822:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2822:3:16"
																		},
																		"nativeSrc": "2822:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2822:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2842:3:16",
																		"nodeType": "YulLiteral",
																		"src": "2842:3:16",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2815:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2815:6:16"
																},
																"nativeSrc": "2815:31:16",
																"nodeType": "YulFunctionCall",
																"src": "2815:31:16"
															},
															"nativeSrc": "2815:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "2815:31:16"
														},
														{
															"nativeSrc": "2855:60:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2855:60:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2887:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2887:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2899:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2899:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2910:3:16",
																				"nodeType": "YulLiteral",
																				"src": "2910:3:16",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2895:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2895:3:16"
																		},
																		"nativeSrc": "2895:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2869:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "2869:17:16"
																},
																"nativeSrc": "2869:46:16",
																"nodeType": "YulFunctionCall",
																"src": "2869:46:16"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2859:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2859:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2935:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2935:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2946:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2946:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2931:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2931:3:16"
																		},
																		"nativeSrc": "2931:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2931:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "2955:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2955:6:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2963:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2963:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2951:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2951:3:16"
																		},
																		"nativeSrc": "2951:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2951:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2924:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:16"
																},
																"nativeSrc": "2924:50:16",
																"nodeType": "YulFunctionCall",
																"src": "2924:50:16"
															},
															"nativeSrc": "2924:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "2924:50:16"
														},
														{
															"nativeSrc": "2983:47:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2983:47:16",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3015:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3015:6:16"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "3023:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2997:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "2997:17:16"
																},
																"nativeSrc": "2997:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2997:33:16"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "2987:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2987:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3050:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3050:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3061:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3061:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3046:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3046:3:16"
																		},
																		"nativeSrc": "3046:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3046:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3066:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3039:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:16"
																},
																"nativeSrc": "3039:34:16",
																"nodeType": "YulFunctionCall",
																"src": "3039:34:16"
															},
															"nativeSrc": "3039:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "3039:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3093:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3093:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3104:3:16",
																				"nodeType": "YulLiteral",
																				"src": "3104:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3089:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3089:3:16"
																		},
																		"nativeSrc": "3089:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "3114:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3114:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3130:3:16",
																								"nodeType": "YulLiteral",
																								"src": "3130:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3135:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3135:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3126:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3126:3:16"
																						},
																						"nativeSrc": "3126:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3126:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3139:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3139:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3122:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3122:3:16"
																				},
																				"nativeSrc": "3122:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3122:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3110:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3110:3:16"
																		},
																		"nativeSrc": "3110:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3110:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3082:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:16"
																},
																"nativeSrc": "3082:61:16",
																"nodeType": "YulFunctionCall",
																"src": "3082:61:16"
															},
															"nativeSrc": "3082:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "3082:61:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3163:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3174:3:16",
																				"nodeType": "YulLiteral",
																				"src": "3174:3:16",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3159:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:16"
																		},
																		"nativeSrc": "3159:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3159:19:16"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "3180:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3180:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3152:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:16"
																},
																"nativeSrc": "3152:35:16",
																"nodeType": "YulFunctionCall",
																"src": "3152:35:16"
															},
															"nativeSrc": "3152:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "3152:35:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3207:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3207:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3218:3:16",
																				"nodeType": "YulLiteral",
																				"src": "3218:3:16",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3203:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:16"
																		},
																		"nativeSrc": "3203:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3203:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "3228:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3228:6:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3236:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3236:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3224:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3224:3:16"
																		},
																		"nativeSrc": "3224:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3224:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3196:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3196:6:16"
																},
																"nativeSrc": "3196:51:16",
																"nodeType": "YulFunctionCall",
																"src": "3196:51:16"
															},
															"nativeSrc": "3196:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "3196:51:16"
														},
														{
															"nativeSrc": "3256:17:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3256:17:16",
															"value": {
																"name": "tail_2",
																"nativeSrc": "3267:6:16",
																"nodeType": "YulIdentifier",
																"src": "3267:6:16"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3260:3:16",
																	"nodeType": "YulTypedName",
																	"src": "3260:3:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3282:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3282:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3302:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3302:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3296:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3296:5:16"
																},
																"nativeSrc": "3296:13:16",
																"nodeType": "YulFunctionCall",
																"src": "3296:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3286:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3286:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3325:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3325:6:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3333:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3333:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3318:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:16"
																},
																"nativeSrc": "3318:22:16",
																"nodeType": "YulFunctionCall",
																"src": "3318:22:16"
															},
															"nativeSrc": "3318:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "3318:22:16"
														},
														{
															"nativeSrc": "3349:22:16",
															"nodeType": "YulAssignment",
															"src": "3349:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3360:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3360:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3368:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3356:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3356:3:16"
																},
																"nativeSrc": "3356:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3356:15:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3349:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:16"
																}
															]
														},
														{
															"nativeSrc": "3380:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3380:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3398:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3398:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3406:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3406:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3394:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:16"
																},
																"nativeSrc": "3394:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3394:15:16"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3384:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3384:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3418:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3418:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3427:1:16",
																"nodeType": "YulLiteral",
																"src": "3427:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3422:1:16",
																	"nodeType": "YulTypedName",
																	"src": "3422:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3486:120:16",
																"nodeType": "YulBlock",
																"src": "3486:120:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3507:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3507:3:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "3518:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "3518:6:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3512:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3512:5:16"
																					},
																					"nativeSrc": "3512:13:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3512:13:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3500:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3500:6:16"
																			},
																			"nativeSrc": "3500:26:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3500:26:16"
																		},
																		"nativeSrc": "3500:26:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3500:26:16"
																	},
																	{
																		"nativeSrc": "3539:19:16",
																		"nodeType": "YulAssignment",
																		"src": "3539:19:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3550:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3550:3:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3555:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "3555:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3546:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3546:3:16"
																			},
																			"nativeSrc": "3546:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3546:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3539:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3539:3:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3571:25:16",
																		"nodeType": "YulAssignment",
																		"src": "3571:25:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3585:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "3585:6:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3593:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "3593:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3581:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3581:3:16"
																			},
																			"nativeSrc": "3581:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3581:15:16"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3571:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3571:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3448:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3448:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3451:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3445:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3445:2:16"
																},
																"nativeSrc": "3445:13:16",
																"nodeType": "YulFunctionCall",
																"src": "3445:13:16"
															},
															"nativeSrc": "3437:169:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3459:18:16",
																"nodeType": "YulBlock",
																"src": "3459:18:16",
																"statements": [
																	{
																		"nativeSrc": "3461:14:16",
																		"nodeType": "YulAssignment",
																		"src": "3461:14:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3470:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "3470:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3473:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3473:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3466:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3466:3:16"
																			},
																			"nativeSrc": "3466:9:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3466:9:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3461:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "3461:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3441:3:16",
																"nodeType": "YulBlock",
																"src": "3441:3:16",
																"statements": []
															},
															"src": "3437:169:16"
														},
														{
															"nativeSrc": "3615:11:16",
															"nodeType": "YulAssignment",
															"src": "3615:11:16",
															"value": {
																"name": "pos",
																"nativeSrc": "3623:3:16",
																"nodeType": "YulIdentifier",
																"src": "3623:3:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3615:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3615:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2373:1259:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2651:9:16",
														"nodeType": "YulTypedName",
														"src": "2651:9:16",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2662:6:16",
														"nodeType": "YulTypedName",
														"src": "2662:6:16",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2670:6:16",
														"nodeType": "YulTypedName",
														"src": "2670:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2678:6:16",
														"nodeType": "YulTypedName",
														"src": "2678:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2686:6:16",
														"nodeType": "YulTypedName",
														"src": "2686:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2694:6:16",
														"nodeType": "YulTypedName",
														"src": "2694:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2702:6:16",
														"nodeType": "YulTypedName",
														"src": "2702:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2710:6:16",
														"nodeType": "YulTypedName",
														"src": "2710:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2721:4:16",
														"nodeType": "YulTypedName",
														"src": "2721:4:16",
														"type": ""
													}
												],
												"src": "2373:1259:16"
											},
											{
												"body": {
													"nativeSrc": "3807:523:16",
													"nodeType": "YulBlock",
													"src": "3807:523:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3854:16:16",
																"nodeType": "YulBlock",
																"src": "3854:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3863:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3863:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3866:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3866:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3856:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3856:6:16"
																			},
																			"nativeSrc": "3856:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3856:12:16"
																		},
																		"nativeSrc": "3856:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3856:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3828:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3828:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3837:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3824:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:16"
																		},
																		"nativeSrc": "3824:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3824:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3849:3:16",
																		"nodeType": "YulLiteral",
																		"src": "3849:3:16",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3820:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:16"
																},
																"nativeSrc": "3820:33:16",
																"nodeType": "YulFunctionCall",
																"src": "3820:33:16"
															},
															"nativeSrc": "3817:53:16",
															"nodeType": "YulIf",
															"src": "3817:53:16"
														},
														{
															"nativeSrc": "3879:39:16",
															"nodeType": "YulAssignment",
															"src": "3879:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3908:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3908:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3889:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3889:18:16"
																},
																"nativeSrc": "3889:29:16",
																"nodeType": "YulFunctionCall",
																"src": "3889:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3879:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3879:6:16"
																}
															]
														},
														{
															"nativeSrc": "3927:48:16",
															"nodeType": "YulAssignment",
															"src": "3927:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3960:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3960:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3971:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3971:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3956:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3956:3:16"
																		},
																		"nativeSrc": "3956:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3956:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3937:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3937:18:16"
																},
																"nativeSrc": "3937:38:16",
																"nodeType": "YulFunctionCall",
																"src": "3937:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3927:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:16"
																}
															]
														},
														{
															"nativeSrc": "3984:42:16",
															"nodeType": "YulAssignment",
															"src": "3984:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4011:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4011:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4022:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4022:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4007:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:16"
																		},
																		"nativeSrc": "4007:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4007:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3994:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3994:12:16"
																},
																"nativeSrc": "3994:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3994:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3984:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:16"
																}
															]
														},
														{
															"nativeSrc": "4035:42:16",
															"nodeType": "YulAssignment",
															"src": "4035:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4062:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4062:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4073:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4073:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4058:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4058:3:16"
																		},
																		"nativeSrc": "4058:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4058:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4045:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4045:12:16"
																},
																"nativeSrc": "4045:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4045:32:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4035:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4035:6:16"
																}
															]
														},
														{
															"nativeSrc": "4086:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4086:46:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4116:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4116:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4127:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4127:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4112:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4112:3:16"
																		},
																		"nativeSrc": "4112:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:19:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4099:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4099:12:16"
																},
																"nativeSrc": "4099:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4099:33:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4090:5:16",
																	"nodeType": "YulTypedName",
																	"src": "4090:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4180:16:16",
																"nodeType": "YulBlock",
																"src": "4180:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4189:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4189:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4192:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4192:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4182:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4182:6:16"
																			},
																			"nativeSrc": "4182:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4182:12:16"
																		},
																		"nativeSrc": "4182:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4182:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4154:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4154:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4165:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4165:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4172:4:16",
																						"nodeType": "YulLiteral",
																						"src": "4172:4:16",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4161:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4161:3:16"
																				},
																				"nativeSrc": "4161:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4161:16:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4151:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4151:2:16"
																		},
																		"nativeSrc": "4151:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4151:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4144:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4144:6:16"
																},
																"nativeSrc": "4144:35:16",
																"nodeType": "YulFunctionCall",
																"src": "4144:35:16"
															},
															"nativeSrc": "4141:55:16",
															"nodeType": "YulIf",
															"src": "4141:55:16"
														},
														{
															"nativeSrc": "4205:15:16",
															"nodeType": "YulAssignment",
															"src": "4205:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "4215:5:16",
																"nodeType": "YulIdentifier",
																"src": "4215:5:16"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4205:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4205:6:16"
																}
															]
														},
														{
															"nativeSrc": "4229:43:16",
															"nodeType": "YulAssignment",
															"src": "4229:43:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4256:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4256:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4267:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4267:3:16",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4252:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4252:3:16"
																		},
																		"nativeSrc": "4252:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4252:19:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4239:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4239:12:16"
																},
																"nativeSrc": "4239:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4239:33:16"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4229:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:16"
																}
															]
														},
														{
															"nativeSrc": "4281:43:16",
															"nodeType": "YulAssignment",
															"src": "4281:43:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4308:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4308:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4319:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4319:3:16",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4304:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4304:3:16"
																		},
																		"nativeSrc": "4304:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4304:19:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4291:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4291:12:16"
																},
																"nativeSrc": "4291:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4291:33:16"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4281:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4281:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "3637:693:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3725:9:16",
														"nodeType": "YulTypedName",
														"src": "3725:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3736:7:16",
														"nodeType": "YulTypedName",
														"src": "3736:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3748:6:16",
														"nodeType": "YulTypedName",
														"src": "3748:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3756:6:16",
														"nodeType": "YulTypedName",
														"src": "3756:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3764:6:16",
														"nodeType": "YulTypedName",
														"src": "3764:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3772:6:16",
														"nodeType": "YulTypedName",
														"src": "3772:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3780:6:16",
														"nodeType": "YulTypedName",
														"src": "3780:6:16",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3788:6:16",
														"nodeType": "YulTypedName",
														"src": "3788:6:16",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3796:6:16",
														"nodeType": "YulTypedName",
														"src": "3796:6:16",
														"type": ""
													}
												],
												"src": "3637:693:16"
											},
											{
												"body": {
													"nativeSrc": "4422:173:16",
													"nodeType": "YulBlock",
													"src": "4422:173:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4468:16:16",
																"nodeType": "YulBlock",
																"src": "4468:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4477:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4477:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4480:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4480:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4470:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4470:6:16"
																			},
																			"nativeSrc": "4470:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4470:12:16"
																		},
																		"nativeSrc": "4470:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4470:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4443:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4443:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4452:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4452:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4439:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4439:3:16"
																		},
																		"nativeSrc": "4439:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4439:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4464:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4464:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4435:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:16"
																},
																"nativeSrc": "4435:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4435:32:16"
															},
															"nativeSrc": "4432:52:16",
															"nodeType": "YulIf",
															"src": "4432:52:16"
														},
														{
															"nativeSrc": "4493:39:16",
															"nodeType": "YulAssignment",
															"src": "4493:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4522:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4522:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4503:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4503:18:16"
																},
																"nativeSrc": "4503:29:16",
																"nodeType": "YulFunctionCall",
																"src": "4503:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4493:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:16"
																}
															]
														},
														{
															"nativeSrc": "4541:48:16",
															"nodeType": "YulAssignment",
															"src": "4541:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4574:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4574:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4585:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4585:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4570:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4570:3:16"
																		},
																		"nativeSrc": "4570:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4570:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4551:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4551:18:16"
																},
																"nativeSrc": "4551:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4551:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4541:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4541:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4335:260:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4380:9:16",
														"nodeType": "YulTypedName",
														"src": "4380:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4391:7:16",
														"nodeType": "YulTypedName",
														"src": "4391:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4403:6:16",
														"nodeType": "YulTypedName",
														"src": "4403:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4411:6:16",
														"nodeType": "YulTypedName",
														"src": "4411:6:16",
														"type": ""
													}
												],
												"src": "4335:260:16"
											},
											{
												"body": {
													"nativeSrc": "4655:325:16",
													"nodeType": "YulBlock",
													"src": "4655:325:16",
													"statements": [
														{
															"nativeSrc": "4665:22:16",
															"nodeType": "YulAssignment",
															"src": "4665:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4679:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4679:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4682:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4682:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4675:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:16"
																},
																"nativeSrc": "4675:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4675:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4665:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:16"
																}
															]
														},
														{
															"nativeSrc": "4696:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4696:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4726:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4726:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4732:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4732:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:16"
																},
																"nativeSrc": "4722:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4722:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4700:18:16",
																	"nodeType": "YulTypedName",
																	"src": "4700:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4773:31:16",
																"nodeType": "YulBlock",
																"src": "4773:31:16",
																"statements": [
																	{
																		"nativeSrc": "4775:27:16",
																		"nodeType": "YulAssignment",
																		"src": "4775:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4789:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4789:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4797:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4797:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4785:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "4785:3:16"
																			},
																			"nativeSrc": "4785:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4785:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4775:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4775:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4753:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "4753:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4746:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4746:6:16"
																},
																"nativeSrc": "4746:26:16",
																"nodeType": "YulFunctionCall",
																"src": "4746:26:16"
															},
															"nativeSrc": "4743:61:16",
															"nodeType": "YulIf",
															"src": "4743:61:16"
														},
														{
															"body": {
																"nativeSrc": "4863:111:16",
																"nodeType": "YulBlock",
																"src": "4863:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4884:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4884:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4891:3:16",
																							"nodeType": "YulLiteral",
																							"src": "4891:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4896:10:16",
																							"nodeType": "YulLiteral",
																							"src": "4896:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4887:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "4887:3:16"
																					},
																					"nativeSrc": "4887:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4887:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4877:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4877:6:16"
																			},
																			"nativeSrc": "4877:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4877:31:16"
																		},
																		"nativeSrc": "4877:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4877:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4928:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4928:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4931:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4931:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4921:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4921:6:16"
																			},
																			"nativeSrc": "4921:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4921:15:16"
																		},
																		"nativeSrc": "4921:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4921:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4956:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4956:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4959:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4959:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4949:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4949:6:16"
																			},
																			"nativeSrc": "4949:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4949:15:16"
																		},
																		"nativeSrc": "4949:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4949:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4819:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "4819:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4842:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4842:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4850:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4850:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4839:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4839:2:16"
																		},
																		"nativeSrc": "4839:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4839:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4816:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4816:2:16"
																},
																"nativeSrc": "4816:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4816:38:16"
															},
															"nativeSrc": "4813:161:16",
															"nodeType": "YulIf",
															"src": "4813:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4600:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4635:4:16",
														"nodeType": "YulTypedName",
														"src": "4635:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4644:6:16",
														"nodeType": "YulTypedName",
														"src": "4644:6:16",
														"type": ""
													}
												],
												"src": "4600:380:16"
											},
											{
												"body": {
													"nativeSrc": "5017:95:16",
													"nodeType": "YulBlock",
													"src": "5017:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5034:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5034:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5041:3:16",
																				"nodeType": "YulLiteral",
																				"src": "5041:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5046:10:16",
																				"nodeType": "YulLiteral",
																				"src": "5046:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5037:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5037:3:16"
																		},
																		"nativeSrc": "5037:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5037:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5027:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5027:6:16"
																},
																"nativeSrc": "5027:31:16",
																"nodeType": "YulFunctionCall",
																"src": "5027:31:16"
															},
															"nativeSrc": "5027:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "5027:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5074:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5074:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5077:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5077:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5067:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:16"
																},
																"nativeSrc": "5067:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5067:15:16"
															},
															"nativeSrc": "5067:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5067:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5098:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5098:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5101:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5101:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5091:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5091:6:16"
																},
																"nativeSrc": "5091:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5091:15:16"
															},
															"nativeSrc": "5091:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5091:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4985:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4985:127:16"
											},
											{
												"body": {
													"nativeSrc": "5291:166:16",
													"nodeType": "YulBlock",
													"src": "5291:166:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5308:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5308:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5319:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5319:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5301:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5301:6:16"
																},
																"nativeSrc": "5301:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5301:21:16"
															},
															"nativeSrc": "5301:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "5301:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5342:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5342:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5353:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5353:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5338:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5338:3:16"
																		},
																		"nativeSrc": "5338:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5338:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5358:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5358:2:16",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5331:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5331:6:16"
																},
																"nativeSrc": "5331:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5331:30:16"
															},
															"nativeSrc": "5331:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "5331:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5381:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5381:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5392:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5392:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5377:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:16"
																		},
																		"nativeSrc": "5377:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:18:16"
																	},
																	{
																		"hexValue": "6578706972656420646561646c696e65",
																		"kind": "string",
																		"nativeSrc": "5397:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5397:18:16",
																		"type": "",
																		"value": "expired deadline"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5370:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:16"
																},
																"nativeSrc": "5370:46:16",
																"nodeType": "YulFunctionCall",
																"src": "5370:46:16"
															},
															"nativeSrc": "5370:46:16",
															"nodeType": "YulExpressionStatement",
															"src": "5370:46:16"
														},
														{
															"nativeSrc": "5425:26:16",
															"nodeType": "YulAssignment",
															"src": "5425:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5437:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5437:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5448:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5448:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5433:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5433:3:16"
																},
																"nativeSrc": "5433:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5433:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5425:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5425:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9c01aa97ea1d1338d23615397cff7556f82c336595551da4b9fcd308b578174__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5117:340:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5268:9:16",
														"nodeType": "YulTypedName",
														"src": "5268:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5282:4:16",
														"nodeType": "YulTypedName",
														"src": "5282:4:16",
														"type": ""
													}
												],
												"src": "5117:340:16"
											},
											{
												"body": {
													"nativeSrc": "5703:350:16",
													"nodeType": "YulBlock",
													"src": "5703:350:16",
													"statements": [
														{
															"nativeSrc": "5713:27:16",
															"nodeType": "YulAssignment",
															"src": "5713:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5725:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5725:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5736:3:16",
																		"nodeType": "YulLiteral",
																		"src": "5736:3:16",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5721:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5721:3:16"
																},
																"nativeSrc": "5721:19:16",
																"nodeType": "YulFunctionCall",
																"src": "5721:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5713:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5713:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5756:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5756:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5767:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5767:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5749:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:16"
																},
																"nativeSrc": "5749:25:16",
																"nodeType": "YulFunctionCall",
																"src": "5749:25:16"
															},
															"nativeSrc": "5749:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "5749:25:16"
														},
														{
															"nativeSrc": "5783:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5783:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5801:3:16",
																				"nodeType": "YulLiteral",
																				"src": "5801:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5806:1:16",
																				"nodeType": "YulLiteral",
																				"src": "5806:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5797:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5797:3:16"
																		},
																		"nativeSrc": "5797:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5797:11:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5810:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5793:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5793:3:16"
																},
																"nativeSrc": "5793:19:16",
																"nodeType": "YulFunctionCall",
																"src": "5793:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5787:2:16",
																	"nodeType": "YulTypedName",
																	"src": "5787:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5832:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5832:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5843:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5843:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5828:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5828:3:16"
																		},
																		"nativeSrc": "5828:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5828:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5852:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5852:6:16"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5860:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "5860:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5848:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5848:3:16"
																		},
																		"nativeSrc": "5848:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5848:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5821:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5821:6:16"
																},
																"nativeSrc": "5821:43:16",
																"nodeType": "YulFunctionCall",
																"src": "5821:43:16"
															},
															"nativeSrc": "5821:43:16",
															"nodeType": "YulExpressionStatement",
															"src": "5821:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5884:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5884:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5895:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5895:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5880:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5880:3:16"
																		},
																		"nativeSrc": "5880:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5880:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5904:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5904:6:16"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5912:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "5912:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5900:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:16"
																		},
																		"nativeSrc": "5900:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5900:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5873:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5873:6:16"
																},
																"nativeSrc": "5873:43:16",
																"nodeType": "YulFunctionCall",
																"src": "5873:43:16"
															},
															"nativeSrc": "5873:43:16",
															"nodeType": "YulExpressionStatement",
															"src": "5873:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5936:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5936:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5947:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5947:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5932:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:16"
																		},
																		"nativeSrc": "5932:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5932:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "5952:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5952:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:16"
																},
																"nativeSrc": "5925:34:16",
																"nodeType": "YulFunctionCall",
																"src": "5925:34:16"
															},
															"nativeSrc": "5925:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "5925:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5979:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5979:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5990:3:16",
																				"nodeType": "YulLiteral",
																				"src": "5990:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5975:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:16"
																		},
																		"nativeSrc": "5975:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5975:19:16"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5996:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5996:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5968:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5968:6:16"
																},
																"nativeSrc": "5968:35:16",
																"nodeType": "YulFunctionCall",
																"src": "5968:35:16"
															},
															"nativeSrc": "5968:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "5968:35:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6023:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6023:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6034:3:16",
																				"nodeType": "YulLiteral",
																				"src": "6034:3:16",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6019:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6019:3:16"
																		},
																		"nativeSrc": "6019:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6019:19:16"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "6040:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6040:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6012:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6012:6:16"
																},
																"nativeSrc": "6012:35:16",
																"nodeType": "YulFunctionCall",
																"src": "6012:35:16"
															},
															"nativeSrc": "6012:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "6012:35:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5462:591:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5632:9:16",
														"nodeType": "YulTypedName",
														"src": "5632:9:16",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5643:6:16",
														"nodeType": "YulTypedName",
														"src": "5643:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5651:6:16",
														"nodeType": "YulTypedName",
														"src": "5651:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5659:6:16",
														"nodeType": "YulTypedName",
														"src": "5659:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5667:6:16",
														"nodeType": "YulTypedName",
														"src": "5667:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5675:6:16",
														"nodeType": "YulTypedName",
														"src": "5675:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5683:6:16",
														"nodeType": "YulTypedName",
														"src": "5683:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5694:4:16",
														"nodeType": "YulTypedName",
														"src": "5694:4:16",
														"type": ""
													}
												],
												"src": "5462:591:16"
											},
											{
												"body": {
													"nativeSrc": "6232:180:16",
													"nodeType": "YulBlock",
													"src": "6232:180:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6249:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6249:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6260:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6260:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6242:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6242:6:16"
																},
																"nativeSrc": "6242:21:16",
																"nodeType": "YulFunctionCall",
																"src": "6242:21:16"
															},
															"nativeSrc": "6242:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "6242:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6283:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6283:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6294:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6294:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6279:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6279:3:16"
																		},
																		"nativeSrc": "6279:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6299:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6299:2:16",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6272:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6272:6:16"
																},
																"nativeSrc": "6272:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6272:30:16"
															},
															"nativeSrc": "6272:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6272:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6322:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6322:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6333:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6333:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6318:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6318:3:16"
																		},
																		"nativeSrc": "6318:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6318:18:16"
																	},
																	{
																		"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nativeSrc": "6338:32:16",
																		"nodeType": "YulLiteral",
																		"src": "6338:32:16",
																		"type": "",
																		"value": "ERC20Permit: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6311:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6311:6:16"
																},
																"nativeSrc": "6311:60:16",
																"nodeType": "YulFunctionCall",
																"src": "6311:60:16"
															},
															"nativeSrc": "6311:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "6311:60:16"
														},
														{
															"nativeSrc": "6380:26:16",
															"nodeType": "YulAssignment",
															"src": "6380:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6392:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6392:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6403:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6388:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6388:3:16"
																},
																"nativeSrc": "6388:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6388:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6380:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6380:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6058:354:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6209:9:16",
														"nodeType": "YulTypedName",
														"src": "6209:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6223:4:16",
														"nodeType": "YulTypedName",
														"src": "6223:4:16",
														"type": ""
													}
												],
												"src": "6058:354:16"
											},
											{
												"body": {
													"nativeSrc": "6574:188:16",
													"nodeType": "YulBlock",
													"src": "6574:188:16",
													"statements": [
														{
															"nativeSrc": "6584:26:16",
															"nodeType": "YulAssignment",
															"src": "6584:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6596:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6596:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6607:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6607:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6592:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6592:3:16"
																},
																"nativeSrc": "6592:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6592:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6584:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6584:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6626:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6626:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6641:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6641:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6657:3:16",
																								"nodeType": "YulLiteral",
																								"src": "6657:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6662:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6662:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6653:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6653:3:16"
																						},
																						"nativeSrc": "6653:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6653:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6666:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6666:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6649:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6649:3:16"
																				},
																				"nativeSrc": "6649:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6649:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6637:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6637:3:16"
																		},
																		"nativeSrc": "6637:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6637:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6619:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6619:6:16"
																},
																"nativeSrc": "6619:51:16",
																"nodeType": "YulFunctionCall",
																"src": "6619:51:16"
															},
															"nativeSrc": "6619:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "6619:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6690:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6690:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6686:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6686:3:16"
																		},
																		"nativeSrc": "6686:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6686:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6706:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6706:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6679:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6679:6:16"
																},
																"nativeSrc": "6679:34:16",
																"nodeType": "YulFunctionCall",
																"src": "6679:34:16"
															},
															"nativeSrc": "6679:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "6679:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6733:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6733:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6744:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6744:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6729:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6729:3:16"
																		},
																		"nativeSrc": "6729:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6729:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6749:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6749:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6722:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6722:6:16"
																},
																"nativeSrc": "6722:34:16",
																"nodeType": "YulFunctionCall",
																"src": "6722:34:16"
															},
															"nativeSrc": "6722:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "6722:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6417:345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6527:9:16",
														"nodeType": "YulTypedName",
														"src": "6527:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6538:6:16",
														"nodeType": "YulTypedName",
														"src": "6538:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6546:6:16",
														"nodeType": "YulTypedName",
														"src": "6546:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6554:6:16",
														"nodeType": "YulTypedName",
														"src": "6554:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6565:4:16",
														"nodeType": "YulTypedName",
														"src": "6565:4:16",
														"type": ""
													}
												],
												"src": "6417:345:16"
											},
											{
												"body": {
													"nativeSrc": "6868:102:16",
													"nodeType": "YulBlock",
													"src": "6868:102:16",
													"statements": [
														{
															"nativeSrc": "6878:26:16",
															"nodeType": "YulAssignment",
															"src": "6878:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6890:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6890:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6901:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6901:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6886:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6886:3:16"
																},
																"nativeSrc": "6886:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6886:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6878:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6878:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6920:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6920:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6935:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6935:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6951:3:16",
																								"nodeType": "YulLiteral",
																								"src": "6951:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6956:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6956:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6947:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6947:3:16"
																						},
																						"nativeSrc": "6947:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6947:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6960:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6960:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6943:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6943:3:16"
																				},
																				"nativeSrc": "6943:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6943:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6931:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6931:3:16"
																		},
																		"nativeSrc": "6931:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6931:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6913:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6913:6:16"
																},
																"nativeSrc": "6913:51:16",
																"nodeType": "YulFunctionCall",
																"src": "6913:51:16"
															},
															"nativeSrc": "6913:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "6913:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6767:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6837:9:16",
														"nodeType": "YulTypedName",
														"src": "6837:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6848:6:16",
														"nodeType": "YulTypedName",
														"src": "6848:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6859:4:16",
														"nodeType": "YulTypedName",
														"src": "6859:4:16",
														"type": ""
													}
												],
												"src": "6767:203:16"
											},
											{
												"body": {
													"nativeSrc": "7023:174:16",
													"nodeType": "YulBlock",
													"src": "7023:174:16",
													"statements": [
														{
															"nativeSrc": "7033:16:16",
															"nodeType": "YulAssignment",
															"src": "7033:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7047:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7047:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7040:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7040:3:16"
																},
																"nativeSrc": "7040:9:16",
																"nodeType": "YulFunctionCall",
																"src": "7040:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7033:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7033:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7080:111:16",
																"nodeType": "YulBlock",
																"src": "7080:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7101:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7101:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7108:3:16",
																							"nodeType": "YulLiteral",
																							"src": "7108:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7113:10:16",
																							"nodeType": "YulLiteral",
																							"src": "7113:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7104:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "7104:3:16"
																					},
																					"nativeSrc": "7104:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7104:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7094:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7094:6:16"
																			},
																			"nativeSrc": "7094:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7094:31:16"
																		},
																		"nativeSrc": "7094:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7094:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7145:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7145:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7148:4:16",
																					"nodeType": "YulLiteral",
																					"src": "7148:4:16",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7138:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7138:6:16"
																			},
																			"nativeSrc": "7138:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7138:15:16"
																		},
																		"nativeSrc": "7138:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7138:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7173:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7173:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7176:4:16",
																					"nodeType": "YulLiteral",
																					"src": "7176:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7166:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7166:6:16"
																			},
																			"nativeSrc": "7166:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7166:15:16"
																		},
																		"nativeSrc": "7166:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7166:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7064:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7064:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7067:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7067:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7061:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7061:2:16"
																},
																"nativeSrc": "7061:10:16",
																"nodeType": "YulFunctionCall",
																"src": "7061:10:16"
															},
															"nativeSrc": "7058:133:16",
															"nodeType": "YulIf",
															"src": "7058:133:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6975:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7006:1:16",
														"nodeType": "YulTypedName",
														"src": "7006:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7009:1:16",
														"nodeType": "YulTypedName",
														"src": "7009:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7015:3:16",
														"nodeType": "YulTypedName",
														"src": "7015:3:16",
														"type": ""
													}
												],
												"src": "6975:222:16"
											},
											{
												"body": {
													"nativeSrc": "7415:276:16",
													"nodeType": "YulBlock",
													"src": "7415:276:16",
													"statements": [
														{
															"nativeSrc": "7425:27:16",
															"nodeType": "YulAssignment",
															"src": "7425:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7437:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7437:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7448:3:16",
																		"nodeType": "YulLiteral",
																		"src": "7448:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7433:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:16"
																},
																"nativeSrc": "7433:19:16",
																"nodeType": "YulFunctionCall",
																"src": "7433:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7425:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7425:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7468:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7468:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7479:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7479:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7461:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:16"
																},
																"nativeSrc": "7461:25:16",
																"nodeType": "YulFunctionCall",
																"src": "7461:25:16"
															},
															"nativeSrc": "7461:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "7461:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7506:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7506:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7517:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7517:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7502:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7502:3:16"
																		},
																		"nativeSrc": "7502:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7502:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7522:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7522:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7495:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7495:6:16"
																},
																"nativeSrc": "7495:34:16",
																"nodeType": "YulFunctionCall",
																"src": "7495:34:16"
															},
															"nativeSrc": "7495:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "7495:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7549:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7549:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7560:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7560:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7545:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7545:3:16"
																		},
																		"nativeSrc": "7545:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7545:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7565:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7565:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7538:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7538:6:16"
																},
																"nativeSrc": "7538:34:16",
																"nodeType": "YulFunctionCall",
																"src": "7538:34:16"
															},
															"nativeSrc": "7538:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "7538:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7592:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7592:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7603:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7603:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7588:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7588:3:16"
																		},
																		"nativeSrc": "7588:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7588:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7608:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7608:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7581:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:16"
																},
																"nativeSrc": "7581:34:16",
																"nodeType": "YulFunctionCall",
																"src": "7581:34:16"
															},
															"nativeSrc": "7581:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "7581:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7635:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7635:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7646:3:16",
																				"nodeType": "YulLiteral",
																				"src": "7646:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7631:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:16"
																		},
																		"nativeSrc": "7631:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7631:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "7656:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7656:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7672:3:16",
																								"nodeType": "YulLiteral",
																								"src": "7672:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7677:1:16",
																								"nodeType": "YulLiteral",
																								"src": "7677:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7668:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7668:3:16"
																						},
																						"nativeSrc": "7668:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7668:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7681:1:16",
																						"nodeType": "YulLiteral",
																						"src": "7681:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7664:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7664:3:16"
																				},
																				"nativeSrc": "7664:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7664:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7652:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:16"
																		},
																		"nativeSrc": "7652:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7652:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7624:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7624:6:16"
																},
																"nativeSrc": "7624:61:16",
																"nodeType": "YulFunctionCall",
																"src": "7624:61:16"
															},
															"nativeSrc": "7624:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "7624:61:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "7202:489:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7352:9:16",
														"nodeType": "YulTypedName",
														"src": "7352:9:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7363:6:16",
														"nodeType": "YulTypedName",
														"src": "7363:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7371:6:16",
														"nodeType": "YulTypedName",
														"src": "7371:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7379:6:16",
														"nodeType": "YulTypedName",
														"src": "7379:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7387:6:16",
														"nodeType": "YulTypedName",
														"src": "7387:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7395:6:16",
														"nodeType": "YulTypedName",
														"src": "7395:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7406:4:16",
														"nodeType": "YulTypedName",
														"src": "7406:4:16",
														"type": ""
													}
												],
												"src": "7202:489:16"
											},
											{
												"body": {
													"nativeSrc": "7877:217:16",
													"nodeType": "YulBlock",
													"src": "7877:217:16",
													"statements": [
														{
															"nativeSrc": "7887:27:16",
															"nodeType": "YulAssignment",
															"src": "7887:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7899:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7899:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7910:3:16",
																		"nodeType": "YulLiteral",
																		"src": "7910:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7895:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7895:3:16"
																},
																"nativeSrc": "7895:19:16",
																"nodeType": "YulFunctionCall",
																"src": "7895:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7887:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7930:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7930:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7941:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7941:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7923:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:16"
																},
																"nativeSrc": "7923:25:16",
																"nodeType": "YulFunctionCall",
																"src": "7923:25:16"
															},
															"nativeSrc": "7923:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "7923:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7968:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7968:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7979:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7979:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7964:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7964:3:16"
																		},
																		"nativeSrc": "7964:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7964:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7988:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7988:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7996:4:16",
																				"nodeType": "YulLiteral",
																				"src": "7996:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7984:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7984:3:16"
																		},
																		"nativeSrc": "7984:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7984:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7957:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7957:6:16"
																},
																"nativeSrc": "7957:45:16",
																"nodeType": "YulFunctionCall",
																"src": "7957:45:16"
															},
															"nativeSrc": "7957:45:16",
															"nodeType": "YulExpressionStatement",
															"src": "7957:45:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8022:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8022:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8033:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8033:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8018:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8018:3:16"
																		},
																		"nativeSrc": "8018:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8018:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8038:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8038:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8011:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8011:6:16"
																},
																"nativeSrc": "8011:34:16",
																"nodeType": "YulFunctionCall",
																"src": "8011:34:16"
															},
															"nativeSrc": "8011:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "8011:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8065:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8065:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8076:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8076:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8061:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:16"
																		},
																		"nativeSrc": "8061:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8061:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "8081:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8081:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8054:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8054:6:16"
																},
																"nativeSrc": "8054:34:16",
																"nodeType": "YulFunctionCall",
																"src": "8054:34:16"
															},
															"nativeSrc": "8054:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "8054:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "7696:398:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7822:9:16",
														"nodeType": "YulTypedName",
														"src": "7822:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7833:6:16",
														"nodeType": "YulTypedName",
														"src": "7833:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7841:6:16",
														"nodeType": "YulTypedName",
														"src": "7841:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7849:6:16",
														"nodeType": "YulTypedName",
														"src": "7849:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7857:6:16",
														"nodeType": "YulTypedName",
														"src": "7857:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7868:4:16",
														"nodeType": "YulTypedName",
														"src": "7868:4:16",
														"type": ""
													}
												],
												"src": "7696:398:16"
											},
											{
												"body": {
													"nativeSrc": "8131:95:16",
													"nodeType": "YulBlock",
													"src": "8131:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8148:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8148:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8155:3:16",
																				"nodeType": "YulLiteral",
																				"src": "8155:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8160:10:16",
																				"nodeType": "YulLiteral",
																				"src": "8160:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8151:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8151:3:16"
																		},
																		"nativeSrc": "8151:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8151:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8141:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8141:6:16"
																},
																"nativeSrc": "8141:31:16",
																"nodeType": "YulFunctionCall",
																"src": "8141:31:16"
															},
															"nativeSrc": "8141:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "8141:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8188:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8188:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8191:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8191:4:16",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8181:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8181:6:16"
																},
																"nativeSrc": "8181:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8181:15:16"
															},
															"nativeSrc": "8181:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "8181:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8212:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8212:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8215:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8215:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8205:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8205:6:16"
																},
																"nativeSrc": "8205:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8205:15:16"
															},
															"nativeSrc": "8205:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "8205:15:16"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "8099:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "8099:127:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_a9c01aa97ea1d1338d23615397cff7556f82c336595551da4b9fcd308b578174__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC20Permit: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1797": [
									{
										"length": 32,
										"start": 1530
									}
								],
								"1799": [
									{
										"length": 32,
										"start": 1488
									}
								],
								"1801": [
									{
										"length": 32,
										"start": 1446
									}
								],
								"1803": [
									{
										"length": 32,
										"start": 1611
									}
								],
								"1805": [
									{
										"length": 32,
										"start": 1651
									}
								],
								"1808": [
									{
										"length": 32,
										"start": 1738
									}
								],
								"1811": [
									{
										"length": 32,
										"start": 1783
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101b7578063a9059cbb146101bf578063d505accf146101d2578063dd62ed3e146101e7575f80fd5b806370a082311461014c5780637ecebe001461017457806384b0196e1461019c575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce567146101355780633644e51514610144575b5f80fd5b6100d761021f565b6040516100e49190610c74565b60405180910390f35b6101006100fb366004610ca8565b6102af565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610cd0565b6102c8565b604051601281526020016100e4565b6101146102eb565b61011461015a366004610d09565b6001600160a01b03165f9081526020819052604090205490565b610114610182366004610d09565b6001600160a01b03165f9081526007602052604090205490565b6101a46102f9565b6040516100e49796959493929190610d22565b6100d761033b565b6101006101cd366004610ca8565b61034a565b6101e56101e0366004610db9565b610357565b005b6101146101f5366004610e26565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461022e90610e57565b80601f016020809104026020016040519081016040528092919081815260200182805461025a90610e57565b80156102a55780601f1061027c576101008083540402835291602001916102a5565b820191905f5260205f20905b81548152906001019060200180831161028857829003601f168201915b5050505050905090565b5f336102bc8185856104b0565b60019150505b92915050565b5f336102d58582856104c2565b6102e085858561053d565b506001949350505050565b5f6102f461059a565b905090565b5f6060805f805f606061030a6106c3565b6103126106f0565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461022e90610e57565b5f336102bc81858561053d565b8342111561039f5760405162461bcd60e51b815260206004820152601060248201526f6578706972656420646561646c696e6560801b60448201526064015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886103cd8c61071d565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f61042782610750565b90505f6104368287878761077c565b9050896001600160a01b0316816001600160a01b0316146104995760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610396565b6104a48a8a8a6104b0565b50505050505050505050565b6104bd83838360016107a8565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610537578181101561052957604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610396565b61053784848484035f6107a8565b50505050565b6001600160a01b03831661056657604051634b637e8f60e11b81525f6004820152602401610396565b6001600160a01b03821661058f5760405163ec442f0560e01b81525f6004820152602401610396565b6104bd83838361087a565b5f306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156105f257507f000000000000000000000000000000000000000000000000000000000000000046145b1561061c57507f000000000000000000000000000000000000000000000000000000000000000090565b6102f4604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60606102f47f000000000000000000000000000000000000000000000000000000000000000060056109a0565b60606102f47f000000000000000000000000000000000000000000000000000000000000000060066109a0565b6001600160a01b0381165f908152600760205260408120805491600191906107458385610e8f565b909155509092915050565b5f6102c261075c61059a565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f8061078c88888888610a49565b92509250925061079c8282610b11565b50909695505050505050565b6001600160a01b0384166107d15760405163e602df0560e01b81525f6004820152602401610396565b6001600160a01b0383166107fa57604051634a1406b160e11b81525f6004820152602401610396565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561053757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161086c91815260200190565b60405180910390a350505050565b6001600160a01b0383166108a4578060025f8282546108999190610e8f565b909155506109149050565b6001600160a01b0383165f90815260208190526040902054818110156108f65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610396565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166109305760028054829003905561094e565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161099391815260200190565b60405180910390a3505050565b606060ff83146109ba576109b383610bcd565b90506102c2565b8180546109c690610e57565b80601f01602080910402602001604051908101604052809291908181526020018280546109f290610e57565b8015610a3d5780601f10610a1457610100808354040283529160200191610a3d565b820191905f5260205f20905b815481529060010190602001808311610a2057829003601f168201915b505050505090506102c2565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610a8257505f91506003905082610b07565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610ad3573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610afe57505f925060019150829050610b07565b92505f91508190505b9450945094915050565b5f826003811115610b2457610b24610eae565b03610b2d575050565b6001826003811115610b4157610b41610eae565b03610b5f5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610b7357610b73610eae565b03610b945760405163fce698f760e01b815260048101829052602401610396565b6003826003811115610ba857610ba8610eae565b03610bc9576040516335e2f38360e21b815260048101829052602401610396565b5050565b60605f610bd983610c0a565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f60ff8216601f8111156102c257604051632cd44ac360e21b815260040160405180910390fd5b5f81518084525f5b81811015610c5557602081850181015186830182015201610c39565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610c866020830184610c31565b9392505050565b80356001600160a01b0381168114610ca3575f80fd5b919050565b5f8060408385031215610cb9575f80fd5b610cc283610c8d565b946020939093013593505050565b5f805f60608486031215610ce2575f80fd5b610ceb84610c8d565b9250610cf960208501610c8d565b9150604084013590509250925092565b5f60208284031215610d19575f80fd5b610c8682610c8d565b60ff60f81b881681525f602060e06020840152610d4260e084018a610c31565b8381036040850152610d54818a610c31565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b81811015610da757835183529284019291840191600101610d8b565b50909c9b505050505050505050505050565b5f805f805f805f60e0888a031215610dcf575f80fd5b610dd888610c8d565b9650610de660208901610c8d565b95506040880135945060608801359350608088013560ff81168114610e09575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f8060408385031215610e37575f80fd5b610e4083610c8d565b9150610e4e60208401610c8d565b90509250929050565b600181811c90821680610e6b57607f821691505b602082108103610e8957634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102c257634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220c23d902b89216ed0b3785b7e5d43c62b46ef03615902e89e39b93f12c72754b764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x19C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x2EB JUMP JUMPDEST PUSH2 0x114 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x33B JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x22E SWAP1 PUSH2 0xE57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25A SWAP1 PUSH2 0xE57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x27C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x288 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2BC DUP2 DUP6 DUP6 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2D5 DUP6 DUP3 DUP6 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x2E0 DUP6 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4 PUSH2 0x59A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x30A PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x22E SWAP1 PUSH2 0xE57 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2BC DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x3CD DUP13 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x427 DUP3 PUSH2 0x750 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x436 DUP3 DUP8 DUP8 DUP8 PUSH2 0x77C JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x396 JUMP JUMPDEST PUSH2 0x4A4 DUP11 DUP11 DUP11 PUSH2 0x4B0 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4BD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x537 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x396 JUMP JUMPDEST PUSH2 0x537 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x7A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH2 0x4BD DUP4 DUP4 DUP4 PUSH2 0x87A JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x5F2 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x61C JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2F4 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F4 PUSH32 0x0 PUSH1 0x5 PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F4 PUSH32 0x0 PUSH1 0x6 PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x745 DUP4 DUP6 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x75C PUSH2 0x59A JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x78C DUP9 DUP9 DUP9 DUP9 PUSH2 0xA49 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x79C DUP3 DUP3 PUSH2 0xB11 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x537 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x86C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8A4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x914 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x930 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x94E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x993 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x9BA JUMPI PUSH2 0x9B3 DUP4 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x9C6 SWAP1 PUSH2 0xE57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F2 SWAP1 PUSH2 0xE57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xA82 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAFE JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xB07 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB24 JUMPI PUSH2 0xB24 PUSH2 0xEAE JUMP JUMPDEST SUB PUSH2 0xB2D JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB41 PUSH2 0xEAE JUMP JUMPDEST SUB PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB73 JUMPI PUSH2 0xB73 PUSH2 0xEAE JUMP JUMPDEST SUB PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA8 PUSH2 0xEAE JUMP JUMPDEST SUB PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x396 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xBD9 DUP4 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC55 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC39 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC86 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCEB DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP3 POP PUSH2 0xCF9 PUSH1 0x20 DUP6 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC86 DUP3 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xD42 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xC31 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xD54 DUP2 DUP11 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDA7 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD8B JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xDCF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDD8 DUP9 PUSH2 0xC8D JUMP JUMPDEST SWAP7 POP PUSH2 0xDE6 PUSH1 0x20 DUP10 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE09 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE37 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE40 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP2 POP PUSH2 0xE4E PUSH1 0x20 DUP5 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE6B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 RETURNDATASIZE SWAP1 0x2B DUP10 0x21 PUSH15 0xD0B3785B7E5D43C62B46EF03615902 0xE8 SWAP15 CODECOPY 0xB9 EXTCODEHASH SLT 0xC7 0x27 SLOAD 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "334:1540:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:16;;1262:22;1244:41;;1232:2;1217:18;4293:186:2;1104:187:16;3144:97:2;3222:12;;3144:97;;;1442:25:16;;;1430:2;1415:18;3144:97:2;1296:177:16;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1953:36:16;;1941:2;1926:18;3002:82:2;1811:184:16;1592:113:15;;;:::i;3299:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;1456:130:15;;;;;;:::i;:::-;-1:-1:-1;;;;;1565:14:15;1539:7;1565:14;;;:7;:14;;;;;;;1456:130;5144:557:11;;;:::i;:::-;;;;;;;;;;;;;:::i;2276:93:2:-;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;737:713:15:-;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:6;4420:31:2;735:10:6;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:6;5182:37:2;5198:4;735:10:6;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;1592:113:15:-;1652:7;1678:20;:18;:20::i;:::-;1671:27;;1592:113;:::o;5144:557:11:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:11;;;-1:-1:-1;5482:212:11;;-1:-1:-1;5590:13:11;;-1:-1:-1;5625:4:11;;-1:-1:-1;5652:1:11;-1:-1:-1;5668:16:11;-1:-1:-1;5482:212:11;-1:-1:-1;5144:557:11:o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:6;3733:27:2;735:10:6;3750:2:2;3754:5;3733:9;:27::i;737:713:15:-;972:8;953:15;:27;;945:56;;;;-1:-1:-1;;;945:56:15;;5319:2:16;945:56:15;;;5301:21:16;5358:2;5338:18;;;5331:30;-1:-1:-1;;;5377:18:16;;;5370:46;5433:18;;945:56:15;;;;;;;;;1034:18;491:117;1094:5;1101:7;1110:5;1117:16;1127:5;1117:9;:16::i;:::-;1065:79;;;;;;5749:25:16;;;;-1:-1:-1;;;;;5848:15:16;;;5828:18;;;5821:43;5900:15;;;;5880:18;;;5873:43;5932:18;;;5925:34;5975:19;;;5968:35;6019:19;;;6012:35;;;5721:19;;1065:79:15;;;;;;;;;;;;1055:90;;;;;;1034:111;;1155:12;1170:28;1187:10;1170:16;:28::i;:::-;1155:43;;1269:14;1286:28;1300:4;1306:1;1309;1312;1286:13;:28::i;:::-;1269:45;;1342:5;-1:-1:-1;;;;;1332:15:15;:6;-1:-1:-1;;;;;1332:15:15;;1324:58;;;;-1:-1:-1;;;1324:58:15;;6260:2:16;1324:58:15;;;6242:21:16;6299:2;6279:18;;;6272:30;6338:32;6318:18;;;6311:60;6388:18;;1324:58:15;6058:354:16;1324:58:15;1412:31;1421:5;1428:7;1437:5;1412:8;:31::i;:::-;935:515;;;737:713;;;;;;;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;6637:32:16;;10936:60:2;;;6619:51:16;6686:18;;;6679:34;;;6729:18;;;6722:34;;;6592:18;;10936:60:2;6417:345:16;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;6913:51:16;6886:18;;5780:30:2;6767:203:16;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;6913:51:16;6886:18;;5873:32:2;6767:203:16;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;3845:262:11:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:11;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:11;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;7461:25:16;4226:11:11;7502:18:16;;;7495:34;;;;4239:14:11;7545:18:16;;;7538:34;4255:13:11;7588:18:16;;;7581:34;4278:4:11;7631:19:16;;;7624:61;4168:7:11;;7433:19:16;;4204:80:11;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;6021:126;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;1711:161:15:-;-1:-1:-1;;;;;1822:14:15;;1785:15;1822:14;;;:7;:14;;;;;;;;1864:1;;1822:14;1846:19;1864:1;1822:14;1846:19;:::i;:::-;;;;-1:-1:-1;1711:161:15;;;-1:-1:-1;;1711:161:15:o;4917:176:11:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3555:4:12;3549:11;-1:-1:-1;;;3573:23:12;;3625:4;3616:14;;3609:39;;;;3677:4;3668:14;;3661:34;3733:4;3718:20;;;3353:401;6803:260:10;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;-1:-1:-1;7047:9:10;;6803:260;-1:-1:-1;;;;;;6803:260:10:o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;6913:51:16;6886:18;;10103:32:2;6767:203:16;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;6913:51:16;6886:18;;10203:31:2;6767:203:16;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1442:25:16;;1430:2;1415:18;;1296:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;6637:32:16;;6649:50:2;;;6619:51:16;6686:18;;;6679:34;;;6729:18;;;6722:34;;;6592:18;;6649:50:2;6417:345:16;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1442::16;;1430:2;1415:18;;1296:177;7346:25:2;;;;;;;;6271:1107;;;:::o;3385:267:7:-;3479:13;1390:66;3508:46;;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5140:1530:10;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:10;;-1:-1:-1;6301:30:10;;-1:-1:-1;6333:1:10;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;7923:25:16;;;7996:4;7984:17;;7964:18;;;7957:45;;;;8018:18;;;8011:34;;;8061:18;;;8054:34;;;6457:24:10;;7895:19:16;;6457:24:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:10;;-1:-1:-1;;6457:24:10;;;-1:-1:-1;;;;;;;6495:20:10;;6491:113;;-1:-1:-1;6547:1:10;;-1:-1:-1;6551:29:10;;-1:-1:-1;6547:1:10;;-1:-1:-1;6531:62:10;;6491:113;6622:6;-1:-1:-1;6630:20:10;;-1:-1:-1;6630:20:10;;-1:-1:-1;5140:1530:10;;;;;;;;;:::o;7196:532::-;7291:20;7282:5;:29;;;;;;;;:::i;:::-;;7278:444;;7196:532;;:::o;7278:444::-;7387:29;7378:5;:38;;;;;;;;:::i;:::-;;7374:348;;7439:23;;-1:-1:-1;;;7439:23:10;;;;;;;;;;;7374:348;7492:35;7483:5;:44;;;;;;;;:::i;:::-;;7479:243;;7550:46;;-1:-1:-1;;;7550:46:10;;;;;1442:25:16;;;1415:18;;7550:46:10;1296:177:16;7479:243:10;7626:30;7617:5;:39;;;;;;;;:::i;:::-;;7613:109;;7679:32;;-1:-1:-1;;;7679:32:10;;;;;1442:25:16;;;1415:18;;7679:32:10;1296:177:16;7613:109:10;7196:532;;:::o;2078:405:7:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:7;;2300:14;;;;;;;;;-1:-1:-1;;;2390:16:7;;;-1:-1:-1;2435:4:7;2426:14;;2419:28;;;;-1:-1:-1;2390:16:7;2078:405::o;2555:245::-;2616:7;2688:4;2652:40;;2715:2;2706:11;;2702:69;;;2740:20;;-1:-1:-1;;;2740:20:7;;;;;;;;;;;14:423:16;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:16:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:16;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:16:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2182:186::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;2333:29;2352:9;2333:29;:::i;2373:1259::-;2779:3;2774;2770:13;2762:6;2758:26;2747:9;2740:45;2721:4;2804:2;2842:3;2837:2;2826:9;2822:18;2815:31;2869:46;2910:3;2899:9;2895:19;2887:6;2869:46;:::i;:::-;2963:9;2955:6;2951:22;2946:2;2935:9;2931:18;2924:50;2997:33;3023:6;3015;2997:33;:::i;:::-;3061:2;3046:18;;3039:34;;;-1:-1:-1;;;;;3110:32:16;;3104:3;3089:19;;3082:61;3130:3;3159:19;;3152:35;;;3224:22;;;3218:3;3203:19;;3196:51;3296:13;;3318:22;;;3368:2;3394:15;;;;-1:-1:-1;3356:15:16;;;;-1:-1:-1;3437:169:16;3451:6;3448:1;3445:13;3437:169;;;3512:13;;3500:26;;3581:15;;;;3546:12;;;;3473:1;3466:9;3437:169;;;-1:-1:-1;3623:3:16;;2373:1259;-1:-1:-1;;;;;;;;;;;;2373:1259:16:o;3637:693::-;3748:6;3756;3764;3772;3780;3788;3796;3849:3;3837:9;3828:7;3824:23;3820:33;3817:53;;;3866:1;3863;3856:12;3817:53;3889:29;3908:9;3889:29;:::i;:::-;3879:39;;3937:38;3971:2;3960:9;3956:18;3937:38;:::i;:::-;3927:48;;4022:2;4011:9;4007:18;3994:32;3984:42;;4073:2;4062:9;4058:18;4045:32;4035:42;;4127:3;4116:9;4112:19;4099:33;4172:4;4165:5;4161:16;4154:5;4151:27;4141:55;;4192:1;4189;4182:12;4141:55;3637:693;;;;-1:-1:-1;3637:693:16;;;;4215:5;4267:3;4252:19;;4239:33;;-1:-1:-1;4319:3:16;4304:19;;;4291:33;;3637:693;-1:-1:-1;;3637:693:16:o;4335:260::-;4403:6;4411;4464:2;4452:9;4443:7;4439:23;4435:32;4432:52;;;4480:1;4477;4470:12;4432:52;4503:29;4522:9;4503:29;:::i;:::-;4493:39;;4551:38;4585:2;4574:9;4570:18;4551:38;:::i;:::-;4541:48;;4335:260;;;;;:::o;4600:380::-;4679:1;4675:12;;;;4722;;;4743:61;;4797:4;4789:6;4785:17;4775:27;;4743:61;4850:2;4842:6;4839:14;4819:18;4816:38;4813:161;;4896:10;4891:3;4887:20;4884:1;4877:31;4931:4;4928:1;4921:15;4959:4;4956:1;4949:15;4813:161;;4600:380;;;:::o;6975:222::-;7040:9;;;7061:10;;;7058:133;;;7113:10;7108:3;7104:20;7101:1;7094:31;7148:4;7145:1;7138:15;7176:4;7173:1;7166:15;8099:127;8160:10;8155:3;8151:20;8148:1;8141:31;8191:4;8188:1;8181:15;8215:4;8212:1;8205:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "766400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2560",
								"decimals()": "265",
								"eip712Domain()": "infinite",
								"name()": "infinite",
								"nonces(address)": "2579",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_useNonce(address)": "24415"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 615,
									"end": 731,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 615,
									"end": 731,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 615,
									"end": 731,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 615,
									"end": 731,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 615,
									"end": 731,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 615,
									"end": 731,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 615,
									"end": 731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 615,
									"end": 731,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 615,
									"end": 731,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 698,
									"end": 702,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 698,
									"end": 702,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 698,
									"end": 702,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 721,
									"end": 727,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 698,
									"end": 702,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 11
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 11,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4486,
									"end": 4511,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4527,
									"end": 4545,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4527,
									"end": 4545,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4527,
									"end": 4545,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4520,
									"end": 4554,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4520,
									"end": 4554,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4520,
									"end": 4554,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4520,
									"end": 4554,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4570,
									"end": 4588,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 4570,
									"end": 4588,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4570,
									"end": 4588,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4563,
									"end": 4597,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 11
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4606,
									"end": 4640,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 4656,
									"end": 4675,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 4656,
									"end": 4675,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4656,
									"end": 4675,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4649,
									"end": 4710,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4458,
									"end": 4477,
									"name": "PUSH",
									"source": 16,
									"value": "C0"
								},
								{
									"begin": 4458,
									"end": 4477,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "305A27A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 146,
									"end": 396,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 146,
									"end": 396,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 231,
									"end": 232,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 255,
									"end": 261,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 252,
									"end": 253,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 249,
									"end": 262,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 241,
									"end": 354,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 331,
									"end": 342,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 325,
									"end": 343,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 312,
									"end": 323,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 305,
									"end": 344,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 270,
									"end": 280,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 386,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 370,
									"end": 386,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 363,
									"end": 390,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 146,
									"end": 396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 401,
									"end": 1100,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 401,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 455,
									"end": 460,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 511,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 501,
									"end": 505,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 493,
									"end": 499,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 489,
									"end": 506,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 485,
									"end": 512,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 475,
									"end": 530,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 475,
									"end": 530,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 524,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 516,
									"end": 528,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 475,
									"end": 530,
									"name": "tag",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 475,
									"end": 530,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 549,
									"end": 562,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 549,
									"end": 562,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 611,
									"end": 621,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 611,
									"end": 621,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 611,
									"end": 621,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 608,
									"end": 644,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 608,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 608,
									"end": 644,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 624,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 624,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 624,
									"end": 642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 624,
									"end": 642,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 624,
									"end": 642,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 699,
									"end": 701,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 693,
									"end": 702,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 753,
									"end": 766,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 753,
									"end": 766,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 749,
									"end": 771,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 749,
									"end": 771,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 773,
									"end": 775,
									"name": "PUSH",
									"source": 16,
									"value": "3F"
								},
								{
									"begin": 745,
									"end": 776,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 741,
									"end": 781,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 729,
									"end": 782,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 729,
									"end": 782,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 729,
									"end": 782,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 797,
									"end": 815,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 797,
									"end": 815,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 797,
									"end": 815,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 817,
									"end": 839,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 817,
									"end": 839,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 817,
									"end": 839,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 794,
									"end": 840,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 791,
									"end": 863,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 791,
									"end": 863,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 791,
									"end": 863,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 843,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 843,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 843,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 843,
									"end": 861,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 843,
									"end": 861,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 883,
									"end": 893,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 879,
									"end": 881,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 894,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 918,
									"end": 920,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 910,
									"end": 916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 903,
									"end": 921,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 964,
									"end": 967,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 957,
									"end": 961,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 954,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 944,
									"end": 950,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 940,
									"end": 955,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 936,
									"end": 962,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 933,
									"end": 968,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 930,
									"end": 985,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 930,
									"end": 985,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 930,
									"end": 985,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 981,
									"end": 982,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 978,
									"end": 979,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 971,
									"end": 983,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 930,
									"end": 985,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 930,
									"end": 985,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 994,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 1067,
									"end": 1069,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1060,
									"end": 1064,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1052,
									"end": 1058,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1048,
									"end": 1065,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1041,
									"end": 1045,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1033,
									"end": 1039,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 1029,
									"end": 1046,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 994,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 994,
									"end": 1070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 994,
									"end": 1070,
									"name": "tag",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 994,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1088,
									"end": 1094,
									"name": "SWAP7",
									"source": 16
								},
								{
									"begin": 401,
									"end": 1100,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 401,
									"end": 1100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1667,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1105,
									"end": 1667,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1204,
									"end": 1210,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1218,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1265,
									"end": 1267,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1253,
									"end": 1262,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1244,
									"end": 1251,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1240,
									"end": 1263,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1236,
									"end": 1268,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1233,
									"end": 1285,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1233,
									"end": 1285,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 1233,
									"end": 1285,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1281,
									"end": 1282,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1278,
									"end": 1279,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1271,
									"end": 1283,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1233,
									"end": 1285,
									"name": "tag",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 1233,
									"end": 1285,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1308,
									"end": 1324,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1308,
									"end": 1324,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1373,
									"end": 1387,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1373,
									"end": 1387,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1373,
									"end": 1387,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1400,
									"end": 1401,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1398,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1390,
									"end": 1402,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1370,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1423,
									"end": 1484,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1476,
									"end": 1483,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1467,
									"end": 1473,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1456,
									"end": 1465,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 1452,
									"end": 1474,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1423,
									"end": 1484,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1423,
									"end": 1484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1423,
									"end": 1484,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1423,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1413,
									"end": 1484,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1413,
									"end": 1484,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1530,
									"end": 1532,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1519,
									"end": 1528,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1515,
									"end": 1533,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1509,
									"end": 1534,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1493,
									"end": 1534,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1493,
									"end": 1534,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1559,
									"end": 1561,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1549,
									"end": 1557,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1562,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1543,
									"end": 1579,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1543,
									"end": 1579,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1543,
									"end": 1579,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1575,
									"end": 1576,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1572,
									"end": 1573,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1565,
									"end": 1577,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1543,
									"end": 1579,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1543,
									"end": 1579,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1543,
									"end": 1579,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1598,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1642,
									"end": 1650,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1631,
									"end": 1640,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1627,
									"end": 1651,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1598,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1598,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1598,
									"end": 1661,
									"name": "tag",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 1598,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1588,
									"end": 1661,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1588,
									"end": 1661,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1588,
									"end": 1661,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1667,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1667,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1667,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1667,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1667,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1672,
									"end": 2052,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1672,
									"end": 2052,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1751,
									"end": 1752,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1747,
									"end": 1759,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1747,
									"end": 1759,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1747,
									"end": 1759,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1747,
									"end": 1759,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1794,
									"end": 1806,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1794,
									"end": 1806,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1794,
									"end": 1806,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1815,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1815,
									"end": 1876,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 1861,
									"end": 1867,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1857,
									"end": 1874,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1847,
									"end": 1874,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1847,
									"end": 1874,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1815,
									"end": 1876,
									"name": "tag",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1815,
									"end": 1876,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1924,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1911,
									"end": 1925,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1891,
									"end": 1909,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1888,
									"end": 1926,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1885,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1885,
									"end": 2046,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1968,
									"end": 1978,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 1963,
									"end": 1966,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 1959,
									"end": 1979,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1980,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2003,
									"end": 2007,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2000,
									"end": 2001,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2031,
									"end": 2035,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2028,
									"end": 2029,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2021,
									"end": 2036,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1885,
									"end": 2046,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1885,
									"end": 2046,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1885,
									"end": 2046,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1672,
									"end": 2052,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1672,
									"end": 2052,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1672,
									"end": 2052,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1672,
									"end": 2052,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2183,
									"end": 2701,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 2183,
									"end": 2701,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2285,
									"end": 2287,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2280,
									"end": 2283,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2277,
									"end": 2288,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2274,
									"end": 2695,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2274,
									"end": 2695,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 2274,
									"end": 2695,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2321,
									"end": 2326,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2318,
									"end": 2319,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2311,
									"end": 2327,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2365,
									"end": 2369,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2362,
									"end": 2363,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2370,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 2435,
									"end": 2437,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2423,
									"end": 2433,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2419,
									"end": 2438,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2416,
									"end": 2417,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2412,
									"end": 2439,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2402,
									"end": 2440,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2471,
									"end": 2475,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2459,
									"end": 2469,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2456,
									"end": 2476,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2453,
									"end": 2500,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2453,
									"end": 2500,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 2453,
									"end": 2500,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2494,
									"end": 2498,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2453,
									"end": 2500,
									"name": "tag",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 2453,
									"end": 2500,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2549,
									"end": 2551,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2544,
									"end": 2547,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2540,
									"end": 2552,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2537,
									"end": 2538,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2533,
									"end": 2553,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2527,
									"end": 2531,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2523,
									"end": 2554,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2513,
									"end": 2554,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2513,
									"end": 2554,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2622,
									"end": 2624,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2615,
									"end": 2620,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2612,
									"end": 2625,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2681,
									"end": 2682,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2667,
									"end": 2683,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2667,
									"end": 2683,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2648,
									"end": 2649,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2637,
									"end": 2650,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "tag",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 2604,
									"end": 2685,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2608,
									"end": 2611,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2608,
									"end": 2611,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2274,
									"end": 2695,
									"name": "tag",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 2274,
									"end": 2695,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2183,
									"end": 2701,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2183,
									"end": 2701,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2183,
									"end": 2701,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2183,
									"end": 2701,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2877,
									"end": 4222,
									"name": "tag",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 2877,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2997,
									"end": 3007,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2997,
									"end": 3007,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3019,
									"end": 3049,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3019,
									"end": 3049,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3016,
									"end": 3072,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3016,
									"end": 3072,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3016,
									"end": 3072,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3052,
									"end": 3070,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3052,
									"end": 3070,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 3052,
									"end": 3070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3052,
									"end": 3070,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3052,
									"end": 3070,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3081,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 3171,
									"end": 3177,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3131,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 3163,
									"end": 3167,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3157,
									"end": 3168,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3131,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3131,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3131,
									"end": 3169,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 3131,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3125,
									"end": 3129,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3081,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 3081,
									"end": 3178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3081,
									"end": 3178,
									"name": "tag",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 3081,
									"end": 3178,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3233,
									"end": 3237,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3233,
									"end": 3237,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3290,
									"end": 3292,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 3279,
									"end": 3293,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3279,
									"end": 3293,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3307,
									"end": 3308,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3302,
									"end": 3965,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3302,
									"end": 3965,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 3302,
									"end": 3965,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 3302,
									"end": 3965,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4009,
									"end": 4010,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4026,
									"end": 4032,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4023,
									"end": 4112,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4023,
									"end": 4112,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 4023,
									"end": 4112,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4078,
									"end": 4097,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4078,
									"end": 4097,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4078,
									"end": 4097,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4072,
									"end": 4098,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4023,
									"end": 4112,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 4023,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2834,
									"end": 2835,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 2830,
									"end": 2841,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2830,
									"end": 2841,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2830,
									"end": 2841,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2826,
									"end": 2850,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2851,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 2812,
									"end": 2852,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2858,
									"end": 2859,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2854,
									"end": 2865,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2854,
									"end": 2865,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2854,
									"end": 2865,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2809,
									"end": 2866,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4125,
									"end": 4206,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4125,
									"end": 4206,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 4216,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 3272,
									"end": 4216,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3302,
									"end": 3965,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 3302,
									"end": 3965,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2130,
									"end": 2131,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2123,
									"end": 2137,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2123,
									"end": 2137,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2123,
									"end": 2137,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2167,
									"end": 2171,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2154,
									"end": 2172,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2154,
									"end": 2172,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3338,
									"end": 3358,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3338,
									"end": 3358,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3338,
									"end": 3358,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "tag",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3470,
									"end": 3477,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3468,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3464,
									"end": 3478,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3559,
									"end": 3578,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 3559,
									"end": 3578,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3559,
									"end": 3578,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3553,
									"end": 3579,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3538,
									"end": 3580,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3538,
									"end": 3580,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3651,
									"end": 3678,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 3651,
									"end": 3678,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3651,
									"end": 3678,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3651,
									"end": 3678,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 3619,
									"end": 3620,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3607,
									"end": 3621,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3607,
									"end": 3621,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3607,
									"end": 3621,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3607,
									"end": 3621,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3486,
									"end": 3505,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3486,
									"end": 3505,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "tag",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3456,
									"end": 3692,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3460,
									"end": 3463,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3720,
									"end": 3726,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3711,
									"end": 3718,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3708,
									"end": 3727,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3705,
									"end": 3906,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3705,
									"end": 3906,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 3705,
									"end": 3906,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3781,
									"end": 3800,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 3781,
									"end": 3800,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3781,
									"end": 3800,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3775,
									"end": 3801,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3864,
									"end": 3865,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 3860,
									"end": 3874,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 3860,
									"end": 3874,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3860,
									"end": 3874,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3876,
									"end": 3879,
									"name": "PUSH",
									"source": 16,
									"value": "F8"
								},
								{
									"begin": 3856,
									"end": 3880,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3852,
									"end": 3889,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3848,
									"end": 3890,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 3891,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3818,
									"end": 3892,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3818,
									"end": 3892,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3705,
									"end": 3906,
									"name": "tag",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 3705,
									"end": 3906,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3705,
									"end": 3906,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3705,
									"end": 3906,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3952,
									"end": 3953,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3949,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3940,
									"end": 3941,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3936,
									"end": 3950,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3932,
									"end": 3954,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3930,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3919,
									"end": 3955,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 4216,
									"name": "tag",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 3272,
									"end": 4216,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 4216,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 4216,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 4216,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 4216,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2877,
									"end": 4222,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2877,
									"end": 4222,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2877,
									"end": 4222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4721,
									"end": 5117,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 4721,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4870,
									"end": 4872,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4859,
									"end": 4868,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4852,
									"end": 4873,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4833,
									"end": 4837,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4902,
									"end": 4908,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4896,
									"end": 4909,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4945,
									"end": 4951,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4940,
									"end": 4942,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4929,
									"end": 4938,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4925,
									"end": 4943,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4918,
									"end": 4952,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4961,
									"end": 5040,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 5033,
									"end": 5039,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5028,
									"end": 5030,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 5017,
									"end": 5026,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5008,
									"end": 5010,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5000,
									"end": 5006,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 4996,
									"end": 5011,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4961,
									"end": 5040,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 4961,
									"end": 5040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4961,
									"end": 5040,
									"name": "tag",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4961,
									"end": 5040,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5101,
									"end": 5103,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 5080,
									"end": 5095,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5076,
									"end": 5105,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 5061,
									"end": 5106,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5061,
									"end": 5106,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5061,
									"end": 5106,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5061,
									"end": 5106,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5108,
									"end": 5110,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 5057,
									"end": 5111,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5057,
									"end": 5111,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4721,
									"end": 5117,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4721,
									"end": 5117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5122,
									"end": 5419,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 5122,
									"end": 5419,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5240,
									"end": 5252,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 5240,
									"end": 5252,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5287,
									"end": 5291,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5276,
									"end": 5292,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 5276,
									"end": 5292,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5276,
									"end": 5292,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5270,
									"end": 5293,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5270,
									"end": 5293,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5240,
									"end": 5252,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5305,
									"end": 5321,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5305,
									"end": 5321,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 5302,
									"end": 5413,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5302,
									"end": 5413,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 5302,
									"end": 5413,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5375,
									"end": 5392,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5375,
									"end": 5392,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5375,
									"end": 5392,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5375,
									"end": 5392,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 5372,
									"end": 5373,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 5368,
									"end": 5393,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 5364,
									"end": 5402,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 5353,
									"end": 5403,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 5353,
									"end": 5403,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5122,
									"end": 5419,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5122,
									"end": 5419,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5122,
									"end": 5419,
									"name": "tag",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 5122,
									"end": 5419,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "C0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1811"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1808"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1805"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1803"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1801"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1799"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1797"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 1874,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c23d902b89216ed0b3785b7e5d43c62b46ef03615902e89e39b93f12c72754b764736f6c63430008180033",
									".code": [
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "D505ACCF"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "7ECEBE00"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "84B0196E"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "3644E515"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 1874,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1262,
											"end": 1284,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1291,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1953,
											"end": 1989,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1953,
											"end": 1989,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1995,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1705,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 1592,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1592,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1592,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1592,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1456,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1586,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 737,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 737,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1705,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1592,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1652,
											"end": 1659,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 1678,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 1678,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1671,
											"end": 1698,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1671,
											"end": 1698,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1592,
											"end": 1705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1592,
											"end": 1705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP12",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP11",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 972,
											"end": 980,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 953,
											"end": 968,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 953,
											"end": 980,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 953,
											"end": 980,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5319,
											"end": 5321,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5360,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 5338,
											"end": 5356,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5338,
											"end": 5356,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5338,
											"end": 5356,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5331,
											"end": 5361,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6578706972656420646561646C696E65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5370,
											"end": 5416,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "tag",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 945,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 608,
											"name": "PUSH",
											"source": 15,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1101,
											"end": 1108,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1110,
											"end": 1115,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 1127,
											"end": 1132,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 1117,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5749,
											"end": 5774,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5774,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5774,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5774,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5848,
											"end": 5863,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 5848,
											"end": 5863,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5848,
											"end": 5863,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5828,
											"end": 5846,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5828,
											"end": 5846,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5828,
											"end": 5846,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5821,
											"end": 5864,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5873,
											"end": 5916,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5975,
											"end": 5994,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 5975,
											"end": 5994,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5975,
											"end": 5994,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5968,
											"end": 6003,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6019,
											"end": 6038,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 6019,
											"end": 6038,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6019,
											"end": 6038,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6012,
											"end": 6047,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6012,
											"end": 6047,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6012,
											"end": 6047,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5721,
											"end": 5740,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5721,
											"end": 5740,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1144,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 1145,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 1145,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 1145,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 1145,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1145,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 1145,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1034,
											"end": 1145,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1034,
											"end": 1145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 1187,
											"end": 1197,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 1170,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1300,
											"end": 1304,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1312,
											"end": 1313,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 1286,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1314,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1286,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1269,
											"end": 1314,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1269,
											"end": 1314,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6260,
											"end": 6262,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6242,
											"end": 6263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6299,
											"end": 6301,
											"name": "PUSH",
											"source": 16,
											"value": "1E"
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6302,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6338,
											"end": 6370,
											"name": "PUSH",
											"source": 16,
											"value": "45524332305065726D69743A20696E76616C6964207369676E61747572650000"
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 6371,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 6058,
											"end": 6412,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 1324,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 1437,
											"end": 1442,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 1412,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1443,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 1412,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 935,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 935,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 935,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 737,
											"end": 1450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6637,
											"end": 6669,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6637,
											"end": 6669,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6670,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6686,
											"end": 6704,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6686,
											"end": 6704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6686,
											"end": 6704,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6679,
											"end": 6713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6679,
											"end": 6713,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6679,
											"end": 6713,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6722,
											"end": 6756,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6722,
											"end": 6756,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6722,
											"end": 6756,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6417,
											"end": 6762,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6913,
											"end": 6964,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6767,
											"end": 6970,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6913,
											"end": 6964,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6767,
											"end": 6970,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1801"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1799"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1797"
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 11,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7461,
											"end": 7486,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1803"
										},
										{
											"begin": 7502,
											"end": 7520,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7502,
											"end": 7520,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7502,
											"end": 7520,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7495,
											"end": 7529,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1805"
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7538,
											"end": 7572,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7581,
											"end": 7615,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7631,
											"end": 7650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7624,
											"end": 7685,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7452,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 7433,
											"end": 7452,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1808"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1811"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1711,
											"end": 1872,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 1711,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1785,
											"end": 1800,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1829,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 1836,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1846,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1872,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1711,
											"end": 1872,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1711,
											"end": 1872,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6967,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7021,
											"end": 7029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 7002,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6913,
											"end": 6964,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6767,
											"end": 6970,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6913,
											"end": 6964,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6767,
											"end": 6970,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6637,
											"end": 6669,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6637,
											"end": 6669,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6670,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6686,
											"end": 6704,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6686,
											"end": 6704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6686,
											"end": 6704,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6679,
											"end": 6713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6679,
											"end": 6713,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6679,
											"end": 6713,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6722,
											"end": 6756,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6722,
											"end": 6756,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6722,
											"end": 6756,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6417,
											"end": 6762,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 7948,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 7923,
											"end": 7948,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7923,
											"end": 7948,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7996,
											"end": 8000,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7957,
											"end": 8002,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7957,
											"end": 8002,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7957,
											"end": 8002,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7957,
											"end": 8002,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8011,
											"end": 8045,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8011,
											"end": 8045,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8011,
											"end": 8045,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8054,
											"end": 8088,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8054,
											"end": 8088,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8054,
											"end": 8088,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 7914,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 7895,
											"end": 7914,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CD44AC3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14,
											"end": 437,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 14,
											"end": 437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 146,
											"end": 147,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 170,
											"end": 176,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 164,
											"end": 177,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 156,
											"end": 318,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 232,
											"end": 236,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 288,
											"end": 301,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 284,
											"end": 306,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 284,
											"end": 306,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 278,
											"end": 307,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 260,
											"end": 271,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 256,
											"end": 276,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 256,
											"end": 276,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 249,
											"end": 308,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 185,
											"end": 197,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 160,
											"end": 163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 342,
											"end": 345,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 338,
											"end": 354,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 334,
											"end": 361,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 327,
											"end": 365,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 426,
											"end": 430,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 421,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 415,
											"end": 422,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 410,
											"end": 412,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 398,
											"end": 413,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 394,
											"end": 423,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 389,
											"end": 392,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 385,
											"end": 424,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 381,
											"end": 431,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 374,
											"end": 431,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 442,
											"end": 662,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 442,
											"end": 662,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 573,
											"end": 594,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 637,
											"end": 655,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 611,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 611,
											"end": 656,
											"name": "tag",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 603,
											"end": 656,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 442,
											"end": 662,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 442,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 667,
											"end": 840,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 667,
											"end": 840,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 735,
											"end": 755,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 735,
											"end": 755,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 784,
											"end": 815,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 784,
											"end": 815,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 774,
											"end": 816,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 774,
											"end": 816,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 764,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 764,
											"end": 834,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 667,
											"end": 840,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 667,
											"end": 840,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 667,
											"end": 840,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 667,
											"end": 840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 913,
											"end": 919,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 927,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 971,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 949,
											"end": 972,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 945,
											"end": 977,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 942,
											"end": 994,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 942,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "260"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 980,
											"end": 992,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 942,
											"end": 994,
											"name": "tag",
											"source": 16,
											"value": "260"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 1013,
											"end": 1042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "tag",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1042,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 845,
											"end": 1099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1599,
											"end": 1622,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1595,
											"end": 1627,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1630,
											"end": 1642,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "tag",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 1663,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "tag",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1653,
											"end": 1692,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1653,
											"end": 1692,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 1711,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "tag",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1749,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1749,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1768,
											"end": 1800,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1758,
											"end": 1800,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1758,
											"end": 1800,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2368,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 2182,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2296,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2273,
											"end": 2280,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2269,
											"end": 2292,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2297,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2300,
											"end": 2312,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "tag",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 2352,
											"end": 2361,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 2333,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2373,
											"end": 3632,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 2373,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2774,
											"end": 2777,
											"name": "PUSH",
											"source": 16,
											"value": "F8"
										},
										{
											"begin": 2770,
											"end": 2783,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2762,
											"end": 2768,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 2784,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2740,
											"end": 2785,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2806,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2845,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2835,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2822,
											"end": 2840,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2815,
											"end": 2846,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2869,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 2910,
											"end": 2913,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2887,
											"end": 2893,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 2869,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 2869,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2869,
											"end": 2915,
											"name": "tag",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 2869,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 2973,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2924,
											"end": 2974,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 2997,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3061,
											"end": 3063,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3039,
											"end": 3073,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 3039,
											"end": 3073,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3039,
											"end": 3073,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3110,
											"end": 3142,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 3110,
											"end": 3142,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3104,
											"end": 3107,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3089,
											"end": 3108,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3143,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3130,
											"end": 3133,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 3159,
											"end": 3178,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3178,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3152,
											"end": 3187,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3152,
											"end": 3187,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3152,
											"end": 3187,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3224,
											"end": 3246,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3224,
											"end": 3246,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3224,
											"end": 3246,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3218,
											"end": 3221,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 3203,
											"end": 3222,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3203,
											"end": 3222,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3196,
											"end": 3247,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3318,
											"end": 3340,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3318,
											"end": 3340,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3318,
											"end": 3340,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3356,
											"end": 3371,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3356,
											"end": 3371,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3356,
											"end": 3371,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3356,
											"end": 3371,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "tag",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3445,
											"end": 3458,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3512,
											"end": 3525,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3512,
											"end": 3525,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3500,
											"end": 3526,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3500,
											"end": 3526,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "SWAP13",
											"source": 16
										},
										{
											"begin": 2373,
											"end": 3632,
											"name": "SWAP12",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2373,
											"end": 3632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3794,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3852,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 3828,
											"end": 3835,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 3824,
											"end": 3847,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3820,
											"end": 3853,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3817,
											"end": 3870,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3817,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 3817,
											"end": 3870,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3856,
											"end": 3868,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3817,
											"end": 3870,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 3817,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3889,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 3889,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 3889,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3889,
											"end": 3918,
											"name": "tag",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 3889,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3879,
											"end": 3918,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 3879,
											"end": 3918,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3937,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 3971,
											"end": 3973,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3960,
											"end": 3969,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3937,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 3937,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3937,
											"end": 3975,
											"name": "tag",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 3937,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3927,
											"end": 3975,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 3927,
											"end": 3975,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4022,
											"end": 4024,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 4007,
											"end": 4025,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3994,
											"end": 4026,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4026,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4026,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4073,
											"end": 4075,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 4062,
											"end": 4071,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 4058,
											"end": 4076,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4035,
											"end": 4077,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4035,
											"end": 4077,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4127,
											"end": 4130,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 4112,
											"end": 4131,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4099,
											"end": 4132,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4172,
											"end": 4176,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4161,
											"end": 4177,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4154,
											"end": 4159,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4151,
											"end": 4178,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4141,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 4141,
											"end": 4196,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4182,
											"end": 4194,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4141,
											"end": 4196,
											"name": "tag",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 4141,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP10",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP9",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 4215,
											"end": 4220,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4267,
											"end": 4270,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 4252,
											"end": 4271,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4252,
											"end": 4271,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4272,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4272,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4319,
											"end": 4322,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 4304,
											"end": 4323,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4304,
											"end": 4323,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4304,
											"end": 4323,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4291,
											"end": 4324,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4291,
											"end": 4324,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3637,
											"end": 4330,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 4330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4335,
											"end": 4595,
											"name": "tag",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 4335,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4417,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4466,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4435,
											"end": 4467,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4432,
											"end": 4484,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4432,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 4432,
											"end": 4484,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4480,
											"end": 4481,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4478,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4470,
											"end": 4482,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4432,
											"end": 4484,
											"name": "tag",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 4432,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 4522,
											"end": 4531,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 4503,
											"end": 4532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4532,
											"name": "tag",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 4503,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4493,
											"end": 4532,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4493,
											"end": 4532,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4551,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 4585,
											"end": 4587,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4583,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4551,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 4551,
											"end": 4589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4551,
											"end": 4589,
											"name": "tag",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 4551,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4589,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4589,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4335,
											"end": 4595,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4335,
											"end": 4595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4335,
											"end": 4595,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4335,
											"end": 4595,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4335,
											"end": 4595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4335,
											"end": 4595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4980,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 4600,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4679,
											"end": 4680,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4675,
											"end": 4687,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4675,
											"end": 4687,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4675,
											"end": 4687,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 4675,
											"end": 4687,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 4743,
											"end": 4804,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4797,
											"end": 4801,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4785,
											"end": 4802,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4804,
											"name": "tag",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 4743,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4850,
											"end": 4852,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4839,
											"end": 4853,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4816,
											"end": 4854,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4813,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 4813,
											"end": 4974,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4896,
											"end": 4906,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 4891,
											"end": 4894,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4887,
											"end": 4907,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4908,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 4928,
											"end": 4929,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4921,
											"end": 4936,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4964,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4813,
											"end": 4974,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 4813,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4813,
											"end": 4974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4980,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4980,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4980,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6975,
											"end": 7197,
											"name": "tag",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 6975,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7040,
											"end": 7049,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7040,
											"end": 7049,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7040,
											"end": 7049,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7058,
											"end": 7191,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7058,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 7058,
											"end": 7191,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7113,
											"end": 7123,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 7108,
											"end": 7111,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 7104,
											"end": 7124,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7125,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 7145,
											"end": 7146,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7138,
											"end": 7153,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7176,
											"end": 7180,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7173,
											"end": 7174,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7181,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8099,
											"end": 8226,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 8099,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8160,
											"end": 8170,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 8155,
											"end": 8158,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 8151,
											"end": 8171,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8141,
											"end": 8172,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8191,
											"end": 8195,
											"name": "PUSH",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8215,
											"end": 8219,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8220,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC20Permit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/ERC20Permit.sol\":{\"keccak256\":\"0x95c72e6c9f6ad4058b9b88f54b8978804d296ad589487db9cde661c8ac24bf6b\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://fa38480d2b2d5bae09a27fe63e6f398017d4286e8b5196d9a2bdebf4c3b997c0\",\"dweb:/ipfs/QmSkeoWeWJEPoTui5eaWvVEQyDyXJnwVPPUN4QhvSpEeXm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "contracts/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "contracts/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "contracts/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "contracts/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "contracts/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1813,
								"contract": "contracts/ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1815,
								"contract": "contracts/ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3252,
								"contract": "contracts/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "IERC5267",
							"nameLocation": "143:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 4,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"src": "247:28:0"
								},
								{
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 7,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "537:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "569:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "604:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "633:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "698:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 19,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ArrayTypeName",
													"src": "698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:0"
									},
									"scope": 24,
									"src": "426:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "133:605:0",
							"usedErrors": [],
							"usedEvents": [
								4
							]
						}
					],
					"src": "107:632:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							161
						],
						"IERC20Errors": [
							66
						],
						"IERC721Errors": [
							114
						]
					},
					"id": 162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 36,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 41,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 46,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 55,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 60,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 65,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 162,
							"src": "278:1764:1",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 72,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 77,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 86,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 91,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 96,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 103,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 108,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 113,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 162,
							"src": "2186:2092:1",
							"usedErrors": [
								72,
								77,
								86,
								91,
								96,
								103,
								108,
								113
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 126,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 131,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 136,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 143,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 148,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 153,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 160,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 162,
							"src": "4424:2107:1",
							"usedErrors": [
								126,
								131,
								136,
								143,
								148,
								153,
								160
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							846
						],
						"ERC20": [
							676
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							780
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 163,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 755,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 164,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 781,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 166,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 780,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 847,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 168,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 846,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 162,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 66,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 173,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 846,
										"src": "1428:7:2"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 175,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "1437:6:2"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 177,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 780,
										"src": "1445:14:2"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 179,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 66,
										"src": "1461:12:2"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								66,
								780,
								754,
								846
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 189,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 193,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 195,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 208,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 676,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										767
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 219,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 218,
												"id": 220,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 676,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 228,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 676,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 234,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 676,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 245,
												"id": 247,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 676,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										711
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 257,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 260,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 676,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 272,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 274,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 271,
												"id": 284,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 676,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 296,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 298,
														"indexExpression": {
															"id": 297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 300,
													"indexExpression": {
														"id": 299,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 301,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 676,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 313,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 315,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 319,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 318,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 312,
												"id": 325,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 676,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										753
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 341,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 338,
												"id": 357,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 676,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 369,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 370,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 376,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 375,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 381,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 385,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 391,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 390,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 396,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 676,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 416,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																428
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 428,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 453,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 432,
															"initialValue": {
																"baseExpression": {
																	"id": 429,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 430,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 433,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 443,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 442,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 437,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 438,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 428,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 439,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 413,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 436,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 36,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 441,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 452,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 444,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 446,
																			"indexExpression": {
																				"id": 445,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 448,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 451,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 422,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 467,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 469,
																			"indexExpression": {
																				"id": 468,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 411,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 465,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 461,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 464,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 676,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 492,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 498,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 497,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 676,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 531,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 536,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 676,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 627,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 676,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 586,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 585,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 591,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 594,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 595,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 601,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 600,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 606,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 617,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 576,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 620,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 676,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"arguments": [
														{
															"id": 640,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 645,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 661,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 660,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 657,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 654,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 659,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 671,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 663,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 664,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 665,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 666,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 662,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				567,
																				627
																			],
																			"referencedDeclaration": 627,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 670,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 676,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "1401:9741:2",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 679,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 688,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 697,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 754,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 754,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 754,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 754,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 754,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 754,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 755,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						],
						"IERC20Metadata": [
							780
						]
					},
					"id": 781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 755,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 757,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 760,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "305:6:4"
									},
									"id": 761,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 759,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								754
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 780,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 780,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 776,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 780,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 781,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							816
						]
					},
					"id": 817,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 782,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 783,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "3022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "3045:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "3070:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "3093:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "3119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 793,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "3136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 795,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "3155:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 797,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:5"
									},
									"scope": 816,
									"src": "2997:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "3501:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "3539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:5"
									},
									"scope": 816,
									"src": "3485:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:5"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "3791:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 812,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:5"
									},
									"scope": 816,
									"src": "3740:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 817,
							"src": "2113:1689:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							846
						]
					},
					"id": 847,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 818,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 819,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 846,
							"linearizedBaseContracts": [
								846
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 824,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 823,
												"id": 826,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 846,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 833,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 832,
												"id": 835,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 846,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 846,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 847,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							852
						],
						"ShortStrings": [
							1063
						],
						"StorageSlot": [
							1173
						]
					},
					"id": 1064,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 848,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1064,
							"sourceUnit": 1174,
							"src": "132:46:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 849,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "140:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 852,
							"name": "ShortString",
							"nameLocation": "353:11:7",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:7",
							"underlyingType": {
								"id": 851,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:7",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 853,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:7",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1063,
							"linearizedBaseContracts": [
								1063
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 856,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1063,
									"src": "1345:111:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 854,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 860,
									"name": "StringTooLong",
									"nameLocation": "1469:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1483:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:7"
									},
									"src": "1463:32:7"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 862,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:7"
									},
									"src": "1500:27:7"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "1786:208:7",
										"statements": [
											{
												"assignments": [
													872
												],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "1796:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 871,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 877,
												"initialValue": {
													"arguments": [
														{
															"id": 875,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "1822:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 873,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:7",
															"typeDescriptions": {}
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 878,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "1840:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "IfStatement",
												"src": "1836:72:7",
												"trueBody": {
													"id": 886,
													"nodeType": "Block",
													"src": "1858:50:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 883,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "1893:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 882,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "1879:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 885,
															"nodeType": "RevertStatement",
															"src": "1872:25:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 896,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 872,
																						"src": "1965:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 894,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 892,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 899,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 872,
																			"src": "1974:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 890,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 888,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "1924:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$852_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:7",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$852_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 870,
												"id": 904,
												"nodeType": "Return",
												"src": "1917:70:7"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:7",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1731:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 864,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:7"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1773:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 867,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 852,
														"src": "1773:11:7"
													},
													"referencedDeclaration": 852,
													"src": "1773:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:7"
									},
									"scope": 1063,
									"src": "1708:286:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "2152:331:7",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "2162:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"arguments": [
														{
															"id": 918,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "2187:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																"typeString": "ShortString"
															}
														],
														"id": 917,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "2176:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$852_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:7"
											},
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "2280:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 921,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 923,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:7"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:7",
													"nodeType": "YulBlock",
													"src": "2376:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:7"
																},
																"nativeSrc": "2390:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:7"
															},
															"nativeSrc": "2390:16:7",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:7"
																		},
																		"nativeSrc": "2426:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:7"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:7"
																},
																"nativeSrc": "2419:28:7",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:7"
															},
															"nativeSrc": "2419:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:7"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 916,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:7",
														"valueSize": 1
													},
													{
														"declaration": 910,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:7",
														"valueSize": 1
													},
													{
														"declaration": 922,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:7",
														"valueSize": 1
													},
													{
														"declaration": 922,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:7",
														"valueSize": 1
													}
												],
												"id": 928,
												"nodeType": "InlineAssembly",
												"src": "2367:90:7"
											},
											{
												"expression": {
													"id": 929,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 922,
													"src": "2473:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 914,
												"id": 930,
												"nodeType": "Return",
												"src": "2466:10:7"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:7",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "2096:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 909,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 908,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 852,
														"src": "2096:11:7"
													},
													"referencedDeclaration": 852,
													"src": "2096:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:7"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "2137:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 912,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:7"
									},
									"scope": 1063,
									"src": "2078:405:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "2625:175:7",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "2635:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 941,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 952,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 947,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "2679:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 945,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "2660:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$852_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:7",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$852_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 943,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 953,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2706:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 960,
												"nodeType": "IfStatement",
												"src": "2702:69:7",
												"trueBody": {
													"id": 959,
													"nodeType": "Block",
													"src": "2719:52:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 956,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "2740:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 958,
															"nodeType": "RevertStatement",
															"src": "2733:27:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 961,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 942,
													"src": "2787:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 940,
												"id": 962,
												"nodeType": "Return",
												"src": "2780:13:7"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:7",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2575:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 934,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 852,
														"src": "2575:11:7"
													},
													"referencedDeclaration": 852,
													"src": "2575:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:7"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2616:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:7"
									},
									"scope": 1063,
									"src": "2555:245:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "3023:231:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 977,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "3043:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 975,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "3121:127:7",
													"statements": [
														{
															"expression": {
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 990,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "3161:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 987,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "3135:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1173_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:7",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1150,
																			"src": "3135:25:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1081_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1081_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 992,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1080,
																	"src": "3135:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 993,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "3176:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 998,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "3219:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 996,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "3202:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$852_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:7",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$852_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 974,
															"id": 1000,
															"nodeType": "Return",
															"src": "3195:42:7"
														}
													]
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "3033:215:7",
												"trueBody": {
													"id": 986,
													"nodeType": "Block",
													"src": "3063:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 983,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "3098:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 982,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "3084:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$852_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 974,
															"id": 985,
															"nodeType": "Return",
															"src": "3077:27:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:7",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "2949:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 966,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "2970:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 968,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:7"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "3010:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 971,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 852,
														"src": "3010:11:7"
													},
													"referencedDeclaration": 852,
													"src": "3010:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:7"
									},
									"scope": 1063,
									"src": "2914:340:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "3494:158:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1017,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "3527:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1015,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "3508:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$852_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:7",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$852_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1019,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3537:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "3609:37:7",
													"statements": [
														{
															"expression": {
																"id": 1026,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "3630:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1014,
															"id": 1027,
															"nodeType": "Return",
															"src": "3623:12:7"
														}
													]
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "3504:142:7",
												"trueBody": {
													"id": 1025,
													"nodeType": "Block",
													"src": "3556:47:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1022,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "3586:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1021,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "3577:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$852_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1014,
															"id": 1024,
															"nodeType": "Return",
															"src": "3570:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:7",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3415:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1006,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 852,
														"src": "3415:11:7"
													},
													"referencedDeclaration": 852,
													"src": "3415:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3434:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3479:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1012,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:7"
									},
									"scope": 1063,
									"src": "3385:267:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "4132:174:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1044,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "4165:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1042,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "4146:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$852_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:7",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$852_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1046,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "4175:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1059,
													"nodeType": "Block",
													"src": "4249:51:7",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1055,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1037,
																			"src": "4276:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1053,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1041,
															"id": 1058,
															"nodeType": "Return",
															"src": "4263:26:7"
														}
													]
												},
												"id": 1060,
												"nodeType": "IfStatement",
												"src": "4142:158:7",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "4194:49:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "4226:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1048,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "4215:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$852_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1041,
															"id": 1051,
															"nodeType": "Return",
															"src": "4208:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:7",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4059:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1033,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 852,
														"src": "4059:11:7"
													},
													"referencedDeclaration": 852,
													"src": "4059:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4078:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4123:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:7"
									},
									"scope": 1063,
									"src": "4027:279:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1064,
							"src": "1255:3053:7",
							"usedErrors": [
								860,
								862
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1173
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1065,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1066,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1173,
							"linearizedBaseContracts": [
								1173
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1069,
									"members": [
										{
											"constant": false,
											"id": 1068,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1069,
											"src": "1300:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1067,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:8",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "1271:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1072,
									"members": [
										{
											"constant": false,
											"id": 1071,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1072,
											"src": "1355:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1070,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:8",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "1326:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1075,
									"members": [
										{
											"constant": false,
											"id": 1074,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1075,
											"src": "1407:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1073,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:8",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "1378:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1078,
									"members": [
										{
											"constant": false,
											"id": 1077,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1078,
											"src": "1462:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1076,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:8",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "1433:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1081,
									"members": [
										{
											"constant": false,
											"id": 1080,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1081,
											"src": "1516:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1079,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:8",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "1488:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1084,
									"members": [
										{
											"constant": false,
											"id": 1083,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1084,
											"src": "1568:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1082,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:8",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "1541:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "1768:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:8",
													"nodeType": "YulBlock",
													"src": "1830:38:8",
													"statements": [
														{
															"nativeSrc": "1844:14:8",
															"nodeType": "YulAssignment",
															"src": "1844:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:8",
																"nodeType": "YulIdentifier",
																"src": "1854:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1091,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1087,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:8",
														"valueSize": 1
													}
												],
												"id": 1093,
												"nodeType": "InlineAssembly",
												"src": "1821:47:8"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1708:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1745:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1069_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1090,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1089,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1069,
														"src": "1745:11:8"
													},
													"referencedDeclaration": 1069,
													"src": "1745:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1069_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:8"
									},
									"scope": 1173,
									"src": "1684:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "2056:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:8",
													"nodeType": "YulBlock",
													"src": "2118:38:8",
													"statements": [
														{
															"nativeSrc": "2132:14:8",
															"nodeType": "YulAssignment",
															"src": "2132:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:8",
																"nodeType": "YulIdentifier",
																"src": "2142:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1098,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:8",
														"valueSize": 1
													}
												],
												"id": 1104,
												"nodeType": "InlineAssembly",
												"src": "2109:47:8"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1996:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:8"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "2033:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1072_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1100,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1072,
														"src": "2033:11:8"
													},
													"referencedDeclaration": 1072,
													"src": "2033:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1072_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:8"
									},
									"scope": 1173,
									"src": "1972:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "2344:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:8",
													"nodeType": "YulBlock",
													"src": "2406:38:8",
													"statements": [
														{
															"nativeSrc": "2420:14:8",
															"nodeType": "YulAssignment",
															"src": "2420:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:8",
																"nodeType": "YulIdentifier",
																"src": "2430:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1113,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:8",
														"valueSize": 1
													}
												],
												"id": 1115,
												"nodeType": "InlineAssembly",
												"src": "2397:47:8"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2284:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:8"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2321:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1075_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1111,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1075,
														"src": "2321:11:8"
													},
													"referencedDeclaration": 1075,
													"src": "2321:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1075_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:8"
									},
									"scope": 1173,
									"src": "2260:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "2632:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:8",
													"nodeType": "YulBlock",
													"src": "2694:38:8",
													"statements": [
														{
															"nativeSrc": "2708:14:8",
															"nodeType": "YulAssignment",
															"src": "2708:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:8",
																"nodeType": "YulIdentifier",
																"src": "2718:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1124,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1120,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:8",
														"valueSize": 1
													}
												],
												"id": 1126,
												"nodeType": "InlineAssembly",
												"src": "2685:47:8"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2572:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:8"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2609:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1078_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1122,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1078,
														"src": "2609:11:8"
													},
													"referencedDeclaration": 1078,
													"src": "2609:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1078_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:8"
									},
									"scope": 1173,
									"src": "2548:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "2917:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:8",
													"nodeType": "YulBlock",
													"src": "2979:38:8",
													"statements": [
														{
															"nativeSrc": "2993:14:8",
															"nodeType": "YulAssignment",
															"src": "2993:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:8",
																"nodeType": "YulIdentifier",
																"src": "3003:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1131,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:8",
														"valueSize": 1
													}
												],
												"id": 1137,
												"nodeType": "InlineAssembly",
												"src": "2970:47:8"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:8"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2895:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1081_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1134,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1133,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1081,
														"src": "2895:10:8"
													},
													"referencedDeclaration": 1081,
													"src": "2895:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1081_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:8"
									},
									"scope": 1173,
									"src": "2835:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "3225:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:8",
													"nodeType": "YulBlock",
													"src": "3287:44:8",
													"statements": [
														{
															"nativeSrc": "3301:20:8",
															"nodeType": "YulAssignment",
															"src": "3301:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:8",
																"nodeType": "YulIdentifier",
																"src": "3311:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1146,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1142,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1148,
												"nodeType": "InlineAssembly",
												"src": "3278:53:8"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3158:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3203:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1081_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1144,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1081,
														"src": "3203:10:8"
													},
													"referencedDeclaration": 1081,
													"src": "3203:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1081_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:8"
									},
									"scope": 1173,
									"src": "3135:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "3513:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:8",
													"nodeType": "YulBlock",
													"src": "3575:38:8",
													"statements": [
														{
															"nativeSrc": "3589:14:8",
															"nodeType": "YulAssignment",
															"src": "3589:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:8",
																"nodeType": "YulIdentifier",
																"src": "3599:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1157,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													}
												],
												"id": 1159,
												"nodeType": "InlineAssembly",
												"src": "3566:47:8"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "3455:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:8"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "3492:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1084_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1156,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1155,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1084,
														"src": "3492:9:8"
													},
													"referencedDeclaration": 1084,
													"src": "3492:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1084_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:8"
									},
									"scope": 1173,
									"src": "3433:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "3816:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:8",
													"nodeType": "YulBlock",
													"src": "3878:44:8",
													"statements": [
														{
															"nativeSrc": "3892:20:8",
															"nodeType": "YulAssignment",
															"src": "3892:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:8",
																"nodeType": "YulIdentifier",
																"src": "3902:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1168,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1164,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1170,
												"nodeType": "InlineAssembly",
												"src": "3869:53:8"
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3751:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:8"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3795:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1084_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1167,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1166,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1084,
														"src": "3795:9:8"
													},
													"referencedDeclaration": 1084,
													"src": "3795:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1084_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:8"
									},
									"scope": 1173,
									"src": "3729:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1174,
							"src": "1245:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3131
						],
						"SignedMath": [
							3236
						],
						"Strings": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 3132,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1176,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3131,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 3237,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1178,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3236,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1180,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1183,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1181,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1186,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1184,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1193,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1239,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1202
														],
														"declarations": [
															{
																"constant": false,
																"id": 1202,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1239,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1201,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1209,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1203,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3131,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3131_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2951,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1211
														],
														"declarations": [
															{
																"constant": false,
																"id": 1211,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1239,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1210,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1216,
														"initialValue": {
															"arguments": [
																{
																	"id": 1214,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1212,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1218
														],
														"declarations": [
															{
																"constant": false,
																"id": 1218,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1239,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1219,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1211,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1202,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1218,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1220,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1235,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1222,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1183,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1218,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1196,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1225,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1226,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1229,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1234,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1233,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1236,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1237,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1200,
														"id": 1238,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 1428,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1252,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1244,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1259,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3236,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3236_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3235,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1258,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1249,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1248,
												"id": 1265,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1243,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 1428,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1285,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1276,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1279,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1270,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1277,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3131,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3131_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3073,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1275,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1287,
																	1370,
																	1390
																],
																"referencedDeclaration": 1370,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1274,
														"id": 1284,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 1428,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"id": 1299,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1290,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1302
												],
												"declarations": [
													{
														"constant": false,
														"id": 1302,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1306,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1303,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1312,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1314,
														"indexExpression": {
															"hexValue": "30",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1318,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1320,
														"indexExpression": {
															"hexValue": "31",
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1352,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1338,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1340,
																	"indexExpression": {
																		"id": 1339,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1341,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1345,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1342,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1298,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1347,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1348,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1332,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1353,
												"initializationExpression": {
													"assignments": [
														1325
													],
													"declarations": [
														{
															"constant": false,
															"id": 1325,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1353,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1324,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1331,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1327,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1335,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1337,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1354,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1363,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1362,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1358,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1290,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1359,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1357,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1361,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1366,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1364,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1368,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 1428,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1383,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1381,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1379,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1386,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1378,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1287,
															1370,
															1390
														],
														"referencedDeclaration": 1370,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1377,
												"id": 1388,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 1428,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1402,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1400,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1407,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1405,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1414,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1393,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1412,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1411,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1420,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1395,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1418,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1417,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1399,
												"id": 1425,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 1428,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1429,
							"src": "251:2847:9",
							"usedErrors": [
								1193
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1776
						]
					},
					"id": 1777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1431,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:10",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1776,
							"linearizedBaseContracts": [
								1776
							],
							"name": "ECDSA",
							"nameLocation": "352:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1436,
									"members": [
										{
											"id": 1432,
											"name": "NoError",
											"nameLocation": "392:7:10",
											"nodeType": "EnumValue",
											"src": "392:7:10"
										},
										{
											"id": 1433,
											"name": "InvalidSignature",
											"nameLocation": "409:16:10",
											"nodeType": "EnumValue",
											"src": "409:16:10"
										},
										{
											"id": 1434,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:10",
											"nodeType": "EnumValue",
											"src": "435:22:10"
										},
										{
											"id": 1435,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:10",
											"nodeType": "EnumValue",
											"src": "467:17:10"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:10",
									"nodeType": "EnumDefinition",
									"src": "364:126:10"
								},
								{
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:10",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1439,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:10"
									},
									"src": "564:30:10"
								},
								{
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:10",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1444,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "699:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:10"
									},
									"src": "665:50:10"
								},
								{
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:10",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1449,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "840:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:10"
									},
									"src": "811:40:10"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "2242:653:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1464,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "2256:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1499,
													"nodeType": "Block",
													"src": "2781:108:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1490,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "2815:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1436_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:10",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1434,
																		"src": "2815:35:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1436",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1494,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "2860:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:10",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1492,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1497,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1463,
															"id": 1498,
															"nodeType": "Return",
															"src": "2795:83:10"
														}
													]
												},
												"id": 1500,
												"nodeType": "IfStatement",
												"src": "2252:637:10",
												"trueBody": {
													"id": 1485,
													"nodeType": "Block",
													"src": "2280:495:10",
													"statements": [
														{
															"assignments": [
																1469
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1469,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1485,
																	"src": "2294:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1468,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1470,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:10"
														},
														{
															"assignments": [
																1472
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1472,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1485,
																	"src": "2317:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1471,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1473,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:10"
														},
														{
															"assignments": [
																1475
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1475,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1485,
																	"src": "2340:7:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1474,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1476,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:10"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:10",
																"nodeType": "YulBlock",
																"src": "2548:171:10",
																"statements": [
																	{
																		"nativeSrc": "2566:32:10",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:10",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:10",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:10"
																					},
																					"nativeSrc": "2577:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:10"
																			},
																			"nativeSrc": "2571:27:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:10"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:10",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:10",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:10",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:10",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:10"
																					},
																					"nativeSrc": "2626:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:10"
																			},
																			"nativeSrc": "2620:27:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:10"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:10",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:10",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:10",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:10"
																							},
																							"nativeSrc": "2683:20:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:10"
																					},
																					"nativeSrc": "2677:27:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:10"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:10"
																			},
																			"nativeSrc": "2669:36:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:10"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:10"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1469,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1472,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1454,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1454,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1454,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1475,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:10",
																	"valueSize": 1
																}
															],
															"id": 1477,
															"nodeType": "InlineAssembly",
															"src": "2539:180:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1479,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "2750:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1480,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "2756:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1481,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "2759:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1482,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "2762:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1478,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1502,
																		1582,
																		1690
																	],
																	"referencedDeclaration": 1690,
																	"src": "2739:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1463,
															"id": 1484,
															"nodeType": "Return",
															"src": "2732:32:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:10",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2149:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2163:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:10"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2219:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1436",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1459,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1458,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1436,
														"src": "2219:12:10"
													},
													"referencedDeclaration": 1436,
													"src": "2219:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1436",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2233:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:10"
									},
									"scope": 1776,
									"src": "2129:766:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "3789:168:10",
										"statements": [
											{
												"assignments": [
													1513,
													1516,
													1518
												],
												"declarations": [
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "3800:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "3819:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1436",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1515,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1514,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1436,
																"src": "3819:12:10"
															},
															"referencedDeclaration": 1436,
															"src": "3819:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1518,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "3839:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1517,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1523,
												"initialValue": {
													"arguments": [
														{
															"id": 1520,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "3870:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1521,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "3876:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1519,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1502,
															1582,
															1690
														],
														"referencedDeclaration": 1502,
														"src": "3859:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1525,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "3908:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1526,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "3915:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1524,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "3896:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1436_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:10"
											},
											{
												"expression": {
													"id": 1529,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1513,
													"src": "3941:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1511,
												"id": 1530,
												"nodeType": "Return",
												"src": "3934:16:10"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:10",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3719:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3733:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:10"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3780:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:10"
									},
									"scope": 1776,
									"src": "3702:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "4285:342:10",
										"statements": [
											{
												"id": 1580,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:10",
												"statements": [
													{
														"assignments": [
															1550
														],
														"declarations": [
															{
																"constant": false,
																"id": 1550,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1580,
																"src": "4319:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1549,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1557,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1551,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "4331:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1552,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:10"
													},
													{
														"assignments": [
															1559
														],
														"declarations": [
															{
																"constant": false,
																"id": 1559,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1580,
																"src": "4522:7:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1558,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1572,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1564,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1539,
																							"src": "4547:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1563,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1562,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1566,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1568,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1560,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1574,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "4596:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1575,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "4602:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1576,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "4605:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1577,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "4608:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1573,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1502,
																	1582,
																	1690
																],
																"referencedDeclaration": 1690,
																"src": "4585:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1548,
														"id": 1579,
														"nodeType": "Return",
														"src": "4578:32:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:10",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4193:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4207:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4218:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1538,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:10"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4253:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4262:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1436",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1543,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1436,
														"src": "4262:12:10"
													},
													"referencedDeclaration": 1436,
													"src": "4262:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1436",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4276:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:10"
									},
									"scope": 1776,
									"src": "4173:454:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "4840:164:10",
										"statements": [
											{
												"assignments": [
													1595,
													1598,
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1614,
														"src": "4851:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1594,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1614,
														"src": "4870:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1436",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1597,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1596,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1436,
																"src": "4870:12:10"
															},
															"referencedDeclaration": 1436,
															"src": "4870:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1614,
														"src": "4890:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1599,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"arguments": [
														{
															"id": 1602,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "4921:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1603,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "4927:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1604,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "4930:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1601,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1502,
															1582,
															1690
														],
														"referencedDeclaration": 1582,
														"src": "4910:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1608,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "4955:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1609,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "4962:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1607,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "4943:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1436_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:10"
											},
											{
												"expression": {
													"id": 1612,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1595,
													"src": "4988:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1613,
												"nodeType": "Return",
												"src": "4981:16:10"
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:10",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4771:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1584,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4785:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4796:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:10"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4831:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:10"
									},
									"scope": 1776,
									"src": "4754:250:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "5298:1372:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1636,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "6194:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1634,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1650,
												"nodeType": "IfStatement",
												"src": "6182:164:10",
												"trueBody": {
													"id": 1649,
													"nodeType": "Block",
													"src": "6267:79:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1640,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1644,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "6301:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1436_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:10",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1435,
																		"src": "6301:30:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1436",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1646,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "6333:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1647,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1633,
															"id": 1648,
															"nodeType": "Return",
															"src": "6281:54:10"
														}
													]
												}
											},
											{
												"assignments": [
													1652
												],
												"declarations": [
													{
														"constant": false,
														"id": 1652,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "6440:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1651,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"arguments": [
														{
															"id": 1654,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "6467:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1655,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "6473:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1656,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "6476:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1657,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "6479:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1653,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1660,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "6495:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1661,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "6491:113:10",
												"trueBody": {
													"id": 1678,
													"nodeType": "Block",
													"src": "6517:87:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1666,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1670,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "6551:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1436_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:10",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1433,
																		"src": "6551:29:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1436",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1672,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1676,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1633,
															"id": 1677,
															"nodeType": "Return",
															"src": "6531:62:10"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1680,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "6622:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1681,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "6630:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1436_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:10",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1432,
															"src": "6630:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1683,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1687,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1688,
												"nodeType": "Return",
												"src": "6614:49:10"
											}
										]
									},
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:10",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5169:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1617,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5191:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1619,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5208:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5227:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1623,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:10"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5266:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5275:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1436",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1629,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1628,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1436,
														"src": "5275:12:10"
													},
													"referencedDeclaration": 1436,
													"src": "5275:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1436",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5289:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:10"
									},
									"scope": 1776,
									"src": "5140:1530:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "6897:166:10",
										"statements": [
											{
												"assignments": [
													1705,
													1708,
													1710
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "6908:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1704,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "6927:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1436",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1707,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1706,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1436,
																"src": "6927:12:10"
															},
															"referencedDeclaration": 1436,
															"src": "6927:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1710,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "6947:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1709,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1717,
												"initialValue": {
													"arguments": [
														{
															"id": 1712,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "6978:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1713,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "6984:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1714,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "6987:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1715,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "6990:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1711,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1502,
															1582,
															1690
														],
														"referencedDeclaration": 1690,
														"src": "6967:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1436_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1719,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "7014:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1720,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "7021:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1718,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "7002:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1436_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:10"
											},
											{
												"expression": {
													"id": 1723,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1705,
													"src": "7047:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1724,
												"nodeType": "Return",
												"src": "7040:16:10"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:10",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "6820:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "6834:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1694,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "6843:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "6854:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:10"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "6888:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:10"
									},
									"scope": 1776,
									"src": "6803:260:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "7268:460:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1436",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1735,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "7282:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1436",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1736,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "7291:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1436_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:10",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1432,
														"src": "7291:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1436",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1436",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1741,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "7378:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1742,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "7387:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1436_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:10",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1433,
															"src": "7387:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1436",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1749,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "7483:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1436",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1750,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "7492:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1436_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:10",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1434,
																"src": "7492:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1436",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1436",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1761,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "7617:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1436",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1762,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "7626:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1436_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:10",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1435,
																	"src": "7626:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1436",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1770,
															"nodeType": "IfStatement",
															"src": "7613:109:10",
															"trueBody": {
																"id": 1769,
																"nodeType": "Block",
																"src": "7658:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1766,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1732,
																					"src": "7702:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1765,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1449,
																				"src": "7679:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1768,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:10"
																	}
																]
															}
														},
														"id": 1771,
														"nodeType": "IfStatement",
														"src": "7479:243:10",
														"trueBody": {
															"id": 1760,
															"nodeType": "Block",
															"src": "7529:78:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1756,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1732,
																						"src": "7586:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1755,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1754,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1753,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1444,
																			"src": "7550:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1759,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:10"
																}
															]
														}
													},
													"id": 1772,
													"nodeType": "IfStatement",
													"src": "7374:348:10",
													"trueBody": {
														"id": 1748,
														"nodeType": "Block",
														"src": "7418:55:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1745,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "7439:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1747,
																"nodeType": "RevertStatement",
																"src": "7432:30:10"
															}
														]
													}
												},
												"id": 1773,
												"nodeType": "IfStatement",
												"src": "7278:444:10",
												"trueBody": {
													"id": 1740,
													"nodeType": "Block",
													"src": "7313:55:10",
													"statements": [
														{
															"functionReturnParameters": 1734,
															"id": 1739,
															"nodeType": "Return",
															"src": "7327:7:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:10",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "7217:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1436",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1728,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1436,
														"src": "7217:12:10"
													},
													"referencedDeclaration": 1436,
													"src": "7217:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1436",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "7237:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1731,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:10"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:10"
									},
									"scope": 1776,
									"src": "7196:532:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1777,
							"src": "344:7386:10",
							"usedErrors": [
								1439,
								1444,
								1449
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2003
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							2077
						],
						"ShortString": [
							852
						],
						"ShortStrings": [
							1063
						]
					},
					"id": 2004,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 1780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2004,
							"sourceUnit": 2078,
							"src": "139:56:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1779,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2077,
										"src": "147:16:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 1783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2004,
							"sourceUnit": 1064,
							"src": "196:62:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1781,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1063,
										"src": "204:12:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1782,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 852,
										"src": "218:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 1785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2004,
							"sourceUnit": 25,
							"src": "259:55:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1784,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 24,
										"src": "267:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1787,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "1988:8:11"
									},
									"id": 1788,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:11"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1786,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:11",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2003,
							"linearizedBaseContracts": [
								2003,
								24
							],
							"name": "EIP712",
							"nameLocation": "1978:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1790,
									"libraryName": {
										"id": 1789,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "2009:12:11"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:11"
								},
								{
									"constant": true,
									"id": 1795,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2034:140:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1791,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1793,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1792,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1794,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1797,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2373:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1796,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1799,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2427:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1801,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2473:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1800,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1803,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2517:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1802,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1805,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2560:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1804,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1808,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2607:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1807,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1806,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 852,
											"src": "2607:11:11"
										},
										"referencedDeclaration": 852,
										"src": "2607:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1811,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2648:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1810,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1809,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 852,
											"src": "2648:11:11"
										},
										"referencedDeclaration": 852,
										"src": "2648:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1813,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2692:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1812,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1815,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "2726:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1814,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "3383:376:11",
										"statements": [
											{
												"expression": {
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1823,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "3393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1826,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "3432:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1824,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "3401:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:11",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1004,
															"src": "3401:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$852_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:11"
											},
											{
												"expression": {
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1830,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "3456:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1833,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "3501:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1831,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "3467:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:11",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1004,
															"src": "3467:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$852_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
														"typeString": "ShortString"
													}
												},
												"id": 1836,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:11"
											},
											{
												"expression": {
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1837,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "3528:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1841,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "3558:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1839,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1838,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:11"
											},
											{
												"expression": {
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1846,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "3574:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1850,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "3607:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1848,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1847,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:11"
											},
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1855,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "3627:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1856,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:11",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:11"
											},
											{
												"expression": {
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1860,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "3667:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1861,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "3692:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:11"
											},
											{
												"expression": {
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1865,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "3725:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1868,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2003",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2003",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1866,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:11"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:11",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1873,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "3340:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "3360:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:11"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:11"
									},
									"scope": 2003,
									"src": "3328:431:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "3907:200:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1881,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2003",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2003",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1883,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "3938:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1885,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:11",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1887,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "3970:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1896,
													"nodeType": "Block",
													"src": "4046:55:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1893,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "4067:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1878,
															"id": 1895,
															"nodeType": "Return",
															"src": "4060:30:11"
														}
													]
												},
												"id": 1897,
												"nodeType": "IfStatement",
												"src": "3917:184:11",
												"trueBody": {
													"id": 1892,
													"nodeType": "Block",
													"src": "3986:54:11",
													"statements": [
														{
															"expression": {
																"id": 1890,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "4007:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1878,
															"id": 1891,
															"nodeType": "Return",
															"src": "4000:29:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:11",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:11"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "3898:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1876,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:11"
									},
									"scope": 2003,
									"src": "3845:262:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "4177:115:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1907,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "4215:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1908,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "4226:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1909,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "4239:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1910,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:11",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1914,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2003",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2003",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1912,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1905,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:11",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1904,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1903,
												"id": 1918,
												"nodeType": "Return",
												"src": "4187:98:11"
											}
										]
									},
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:11"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "4168:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1901,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:11"
									},
									"scope": 2003,
									"src": "4113:179:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "5003:90:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1930,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "5053:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1932,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "5075:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1928,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "5020:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2077_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 1929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:11",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2076,
														"src": "5020:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1934,
												"nodeType": "Return",
												"src": "5013:73:11"
											}
										]
									},
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:11",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "4943:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1922,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:11"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "4994:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1925,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:11"
									},
									"scope": 2003,
									"src": "4917:176:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "5472:229:11",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1956,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "5533:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1958,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "5560:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1960,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:11",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1964,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2003",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2003",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1966,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 1970,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1971,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1975,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1954,
												"id": 1976,
												"nodeType": "Return",
												"src": "5482:212:11"
											}
										]
									},
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:11",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:11"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5242:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1939,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5269:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5301:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5336:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5365:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5404:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5430:27:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1951,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1952,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:11"
									},
									"scope": 2003,
									"src": "5144:557:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "6082:65:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1986,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "6126:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1984,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "6099:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																"typeString": "ShortString"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:11",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1031,
														"src": "6099:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$852_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$852_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1988,
												"nodeType": "Return",
												"src": "6092:48:11"
											}
										]
									},
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:11",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:11"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "6067:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:11"
									},
									"scope": 2003,
									"src": "6021:126:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "6537:71:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1998,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "6584:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1996,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "6554:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$852",
																"typeString": "ShortString"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:11",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1031,
														"src": "6554:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$852_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$852_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1995,
												"id": 2000,
												"nodeType": "Return",
												"src": "6547:54:11"
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:11",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:11"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "6522:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1993,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:11"
									},
									"scope": 2003,
									"src": "6473:135:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2004,
							"src": "1960:4650:11",
							"usedErrors": [
								860,
								862
							],
							"usedEvents": [
								4
							]
						}
					],
					"src": "113:6498:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2077
						],
						"Strings": [
							1428
						]
					},
					"id": 2078,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2005,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2007,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2078,
							"sourceUnit": 1429,
							"src": "149:39:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2006,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "157:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2008,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:12",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2077,
							"linearizedBaseContracts": [
								2077
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "1314:368:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:12",
													"nodeType": "YulBlock",
													"src": "1376:300:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:12",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:12",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:12",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:12"
																},
																"nativeSrc": "1390:48:12",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:12"
															},
															"nativeSrc": "1390:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:12",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:12"
																},
																"nativeSrc": "1492:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:12"
															},
															"nativeSrc": "1492:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:12"
														},
														{
															"nativeSrc": "1571:31:12",
															"nodeType": "YulAssignment",
															"src": "1571:31:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:12",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:12",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:12"
																},
																"nativeSrc": "1581:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:12"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2014,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2011,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:12",
														"valueSize": 1
													}
												],
												"id": 2016,
												"nodeType": "InlineAssembly",
												"src": "1367:309:12"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:12",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1254:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2010,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:12"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1298:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:12"
									},
									"scope": 2077,
									"src": "1222:460:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "2234:143:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2035,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2021,
																						"src": "2343:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2036,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:12",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2033,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1428,
																					"src": "2326:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1428_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:12",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1241,
																				"src": "2326:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2031,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2039,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "2361:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2027,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:12",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2026,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2042,
												"nodeType": "Return",
												"src": "2244:126:12"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:12",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2180:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:12"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2225:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2023,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:12"
									},
									"scope": 2077,
									"src": "2148:229:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "2831:80:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2058,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "2887:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2059,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "2898:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2055,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2054,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2062,
												"nodeType": "Return",
												"src": "2841:63:12"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:12",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2761:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2780:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:12"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2822:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2051,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:12"
									},
									"scope": 2077,
									"src": "2720:191:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "3462:292:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:12",
													"nodeType": "YulBlock",
													"src": "3524:224:12",
													"statements": [
														{
															"nativeSrc": "3538:22:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:12",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:12"
																},
																"nativeSrc": "3549:11:12",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:12"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:12",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:12"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:12",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:12",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:12"
																},
																"nativeSrc": "3573:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:12"
															},
															"nativeSrc": "3573:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:12",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:12"
																		},
																		"nativeSrc": "3616:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:12"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:12",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:12"
																},
																"nativeSrc": "3609:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:12"
															},
															"nativeSrc": "3609:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:12",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:12"
																		},
																		"nativeSrc": "3668:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:12"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:12"
																},
																"nativeSrc": "3661:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:12"
															},
															"nativeSrc": "3661:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:12"
														},
														{
															"nativeSrc": "3708:30:12",
															"nodeType": "YulAssignment",
															"src": "3708:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:12",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:12"
																},
																"nativeSrc": "3718:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:12"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2072,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2067,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:12",
														"valueSize": 1
													},
													{
														"declaration": 2069,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:12",
														"valueSize": 1
													}
												],
												"id": 2074,
												"nodeType": "InlineAssembly",
												"src": "3515:233:12"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:12",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3378:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2066,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3403:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2068,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:12"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3446:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2071,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:12"
									},
									"scope": 2077,
									"src": "3353:401:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2078,
							"src": "521:3235:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3131
						]
					},
					"id": 3132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2080,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3131,
							"linearizedBaseContracts": [
								3131
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2083,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2088,
									"members": [
										{
											"id": 2084,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2085,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2086,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2087,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2118,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2101
														],
														"declarations": [
															{
																"constant": false,
																"id": 2101,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2118,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2100,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2105,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2102,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2103,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2106,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2107,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2113,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2111,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2099,
															"id": 2112,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2115,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2116,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2099,
														"id": 2117,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3131,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2146,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2132,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2139,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2137,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2131,
															"id": 2138,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2142,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2125,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2144,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2131,
														"id": 2145,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3131,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2188,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2160,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2167,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2165,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2159,
															"id": 2166,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2169
														],
														"declarations": [
															{
																"constant": false,
																"id": 2169,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2188,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2168,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2173,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2170,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2171,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2153,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2174,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2169,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2175,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2151,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2177,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2153,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2183,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2181,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2159,
															"id": 2182,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2185,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2169,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2186,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2159,
														"id": 2187,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3131,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2216,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2202,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2209,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2207,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2201,
															"id": 2208,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2211,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2212,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2214,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2201,
														"id": 2215,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2191,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3131,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2244,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2230,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2237,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2235,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2229,
															"id": 2236,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2239,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2221,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2240,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2223,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2242,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2229,
														"id": 2243,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3131,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2256,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2257,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2260,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2259,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2249,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2255,
												"id": 2262,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3131,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2281,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2274,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2275,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2277,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2267,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2280,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3131,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2292,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2293,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2287,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2295,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2296,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2285,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2297,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2299,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2291,
												"id": 2303,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3131,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2315,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2323,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2322,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2318,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2319,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2314,
															"id": 2321,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2324,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2328,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2332,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2314,
												"id": 2337,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2306,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3131,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2463,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2352
														],
														"declarations": [
															{
																"constant": false,
																"id": 2352,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2463,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2351,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2356,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2353,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2354,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2344,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2358
														],
														"declarations": [
															{
																"constant": false,
																"id": 2358,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2463,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2357,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2359,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2358,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2342,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2344,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2360,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2361,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2369,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2368,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2364,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2352,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2365,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2346,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2350,
																	"id": 2367,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2370,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2371,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2377,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2376,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2373,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2375,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2379
														],
														"declarations": [
															{
																"constant": false,
																"id": 2379,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2463,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2378,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2380,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2346,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2358,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2358,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2379,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2379,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2379,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2342,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2344,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2381,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2383
														],
														"declarations": [
															{
																"constant": false,
																"id": 2383,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2463,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2390,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2384,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2386,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2346,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2346,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2346,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2383,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2383,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2383,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2383,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2383,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2391,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2392,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2393,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2394,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2397,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2399
														],
														"declarations": [
															{
																"constant": false,
																"id": 2399,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2463,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2398,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2406,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2401,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2346,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2403,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2407,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2409,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2410,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2414,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2415,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2417,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2418,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2422,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2423,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2425,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2426,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2430,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2431,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2433,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2434,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2438,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2439,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2441,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2442,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2446,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2447,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2449,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2450,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2454,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2455,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2349,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2456,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2352,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2457,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2460,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2461,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2350,
														"id": 2462,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 3131,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2481
												],
												"declarations": [
													{
														"constant": false,
														"id": 2481,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2507,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2480,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2487,
												"initialValue": {
													"arguments": [
														{
															"id": 2483,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2468,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2484,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2485,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2482,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2465,
															2508
														],
														"referencedDeclaration": 2465,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2489,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2088",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2088",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2488,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3130,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2088_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2492,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2493,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2494,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2472,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2491,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2504,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2503,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2499,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2502,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2505,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2481,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2479,
												"id": 2506,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2088",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2473,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 2088,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2088",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 3131,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2522,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2521,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2515,
															"id": 2520,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2524
												],
												"declarations": [
													{
														"constant": false,
														"id": 2524,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2619,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2533,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2527,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2511,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2526,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2787,
																			2822
																		],
																		"referencedDeclaration": 2787,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2531,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2618,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2534,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2535,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2524,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2536,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2511,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2537,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2540,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2544,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2545,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2546,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2524,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2547,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2511,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2548,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2551,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2555,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2556,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2557,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2524,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2558,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2511,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2559,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2562,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2566,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2567,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2568,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2524,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2569,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2511,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2570,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2573,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2577,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2578,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2579,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2524,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2580,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2511,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2581,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2584,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2588,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2589,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2590,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2524,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2591,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2511,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2592,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2595,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2599,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2600,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2601,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2524,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2602,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2511,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2603,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2606,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2610,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2612,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2524,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2613,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2511,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2614,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2524,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2611,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2515,
														"id": 2617,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2509,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 3131,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2654,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2653,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2632
														],
														"declarations": [
															{
																"constant": false,
																"id": 2632,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2653,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2631,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2636,
														"initialValue": {
															"arguments": [
																{
																	"id": 2634,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2623,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2633,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2620,
																	2655
																],
																"referencedDeclaration": 2620,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2637,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2639,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2626,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2088",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2088",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2638,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3130,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2088_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2641,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2632,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2642,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2632,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2644,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2623,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2650,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2630,
														"id": 2652,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2088",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2624,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 2088,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2088",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 3131,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2664
												],
												"declarations": [
													{
														"constant": false,
														"id": 2664,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2786,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2666,
												"initialValue": {
													"hexValue": "30",
													"id": 2665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2783,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2667,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2681,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2680,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2672,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2658,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2675,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2682,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2696,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2695,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2687,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2658,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2690,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2691,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2694,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2697,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2711,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2710,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2702,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2658,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2705,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2706,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2709,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2712,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2726,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2725,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2717,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2658,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2720,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2721,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2724,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2727,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2741,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2740,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2732,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2658,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2735,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2736,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2739,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2742,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2756,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2755,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2658,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2750,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2751,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2754,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2757,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2771,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2770,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2762,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2658,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2765,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2766,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2769,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2772,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2782,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2781,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2777,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2784,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2664,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2662,
												"id": 2785,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2656,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 3131,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2821,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 2820,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2799
														],
														"declarations": [
															{
																"constant": false,
																"id": 2799,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2820,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2798,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2803,
														"initialValue": {
															"arguments": [
																{
																	"id": 2801,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2790,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2800,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2787,
																	2822
																],
																"referencedDeclaration": 2787,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2804,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2806,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2793,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2088",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2088",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2805,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3130,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2088_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2810,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2808,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2809,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2799,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2811,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2790,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2817,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2797,
														"id": 2819,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2788,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2088",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2792,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2791,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 2088,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2088",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 3131,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2950,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													2831
												],
												"declarations": [
													{
														"constant": false,
														"id": 2831,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2833,
												"initialValue": {
													"hexValue": "30",
													"id": 2832,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 2947,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2834,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2825,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2850,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 2849,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2839,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2825,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2844,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 2847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2845,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2831,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2848,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2851,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2825,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2867,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 2866,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2856,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2825,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2861,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2862,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2831,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2865,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2868,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2825,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2884,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 2883,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2873,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2825,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2878,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 2881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2879,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2831,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2882,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2885,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2825,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2901,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 2900,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2890,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2825,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2895,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 2898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2896,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2831,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2899,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2902,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2825,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2918,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 2917,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2907,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2825,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2912,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 2915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2831,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2916,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2919,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2825,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2935,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 2934,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2825,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2929,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 2932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2930,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2831,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2933,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2936,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2825,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2946,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 2945,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2941,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2831,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2944,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2948,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2831,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2829,
												"id": 2949,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 2823,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 3131,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 2984,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															2963
														],
														"declarations": [
															{
																"constant": false,
																"id": 2963,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2984,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2962,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2967,
														"initialValue": {
															"arguments": [
																{
																	"id": 2965,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2954,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2964,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2951,
																	2986
																],
																"referencedDeclaration": 2951,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2968,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2963,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2970,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2957,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2088",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2088",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2969,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3130,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2088_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2974,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2973,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2963,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2975,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2961,
														"id": 2983,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2952,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2088",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2955,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 2088,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2088",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 3131,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3072,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													2995
												],
												"declarations": [
													{
														"constant": false,
														"id": 2995,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3072,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2994,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2997,
												"initialValue": {
													"hexValue": "30",
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 3069,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2998,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3012,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 3011,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 3005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3003,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2989,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3006,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 3009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3007,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3010,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3013,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3027,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 3026,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3018,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2989,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3021,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 3024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3022,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3025,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3028,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3042,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 3041,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2989,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3036,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 3039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3037,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3040,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3043,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3057,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 3056,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3048,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2989,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3051,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 3054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3052,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3055,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3058,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3068,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 3067,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3063,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2995,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3066,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3070,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2995,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2993,
												"id": 3071,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 2987,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 3131,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 3109,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															3085
														],
														"declarations": [
															{
																"constant": false,
																"id": 3085,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3109,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3084,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3089,
														"initialValue": {
															"arguments": [
																{
																	"id": 3087,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3076,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3086,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3073,
																	3111
																],
																"referencedDeclaration": 3073,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3090,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3085,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3092,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3079,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2088",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2088",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3091,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3130,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2088_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3099,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3094,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3097,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3095,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3085,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3096,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3098,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3100,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3076,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3106,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3083,
														"id": 3108,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3074,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2088",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3077,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 2088,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2088",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 3083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 3131,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3129,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3122,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3115,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2088",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2088",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3120,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3119,
												"id": 3128,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 3112,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2088",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3113,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 2088,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2088",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 3131,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3132,
							"src": "203:14914:13",
							"usedErrors": [
								2083
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3236
						]
					},
					"id": 3237,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3134,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3236,
							"linearizedBaseContracts": [
								3236
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3151,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3144,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3137,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3145,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3139,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3148,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 3147,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3137,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3143,
												"id": 3150,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 3135,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3136,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3138,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 3236,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3169,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3162,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3163,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3157,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3166,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3157,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 3165,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3155,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3161,
												"id": 3168,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 3153,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3154,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3156,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3159,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 3236,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3213,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													3181
												],
												"declarations": [
													{
														"constant": false,
														"id": 3181,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3213,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3180,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3194,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3182,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3173,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3183,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3175,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3185,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3186,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3187,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3175,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3189,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3192,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3195,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3200,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3181,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3199,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3198,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3196,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3205,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3206,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3175,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3208,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3210,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3179,
												"id": 3212,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 3171,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3214,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3172,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3214,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3174,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 3179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3214,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3177,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 3236,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3234,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 3233,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3224,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3217,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 3228,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3217,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 3227,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3217,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3222,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3221,
														"id": 3232,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3215,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3216,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 3221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 3236,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3237,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"contracts/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20Permit.sol",
					"exportedSymbols": {
						"Context": [
							846
						],
						"ECDSA": [
							1776
						],
						"EIP712": [
							2003
						],
						"ERC20": [
							676
						],
						"ERC20Permit": [
							3389
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							780
						],
						"IERC20Permit": [
							816
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							2077
						],
						"ShortString": [
							852
						],
						"ShortStrings": [
							1063
						]
					},
					"id": 3390,
					"license": "SEE LICENSE IN LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3238,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "51:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"id": 3239,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3390,
							"sourceUnit": 817,
							"src": "76:73:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3390,
							"sourceUnit": 677,
							"src": "150:55:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 3241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3390,
							"sourceUnit": 1777,
							"src": "206:62:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"id": 3242,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3390,
							"sourceUnit": 2004,
							"src": "269:63:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3243,
										"name": "ERC20",
										"nameLocations": [
											"358:5:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "358:5:15"
									},
									"id": 3244,
									"nodeType": "InheritanceSpecifier",
									"src": "358:5:15"
								},
								{
									"baseName": {
										"id": 3245,
										"name": "IERC20Permit",
										"nameLocations": [
											"365:12:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "365:12:15"
									},
									"id": 3246,
									"nodeType": "InheritanceSpecifier",
									"src": "365:12:15"
								},
								{
									"baseName": {
										"id": 3247,
										"name": "EIP712",
										"nameLocations": [
											"379:6:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2003,
										"src": "379:6:15"
									},
									"id": 3248,
									"nodeType": "InheritanceSpecifier",
									"src": "379:6:15"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3389,
							"linearizedBaseContracts": [
								3389,
								2003,
								24,
								816,
								676,
								66,
								780,
								754,
								846
							],
							"name": "ERC20Permit",
							"nameLocation": "343:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3252,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "425:7:15",
									"nodeType": "VariableDeclaration",
									"scope": 3389,
									"src": "392:40:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3251,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3249,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "400:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "392:24:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3250,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "411:4:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3257,
									"mutability": "constant",
									"name": "_PERMIT_TYPEHASH",
									"nameLocation": "464:16:15",
									"nodeType": "VariableDeclaration",
									"scope": 3389,
									"src": "439:169:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3253,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "439:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3255,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "514:84:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3254,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "491:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3256,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "491:117:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3272,
										"nodeType": "Block",
										"src": "729:2:15",
										"statements": []
									},
									"id": 3273,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3264,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3259,
													"src": "698:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "704:3:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3266,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3263,
												"name": "EIP712",
												"nameLocations": [
													"691:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2003,
												"src": "691:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "691:17:15"
										},
										{
											"arguments": [
												{
													"id": 3268,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3259,
													"src": "715:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3269,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3261,
													"src": "721:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3270,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3267,
												"name": "ERC20",
												"nameLocations": [
													"709:5:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "709:5:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "709:19:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3259,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "650:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "636:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3261,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "678:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "664:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "664:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:64:15"
									},
									"returnParameters": {
										"id": 3271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:0:15"
									},
									"scope": 3389,
									"src": "615:116:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										801
									],
									"body": {
										"id": 3344,
										"nodeType": "Block",
										"src": "935:515:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3292,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "953:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "959:9:15",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "953:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3294,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3281,
																"src": "972:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "953:27:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6578706972656420646561646c696e65",
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "982:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a9c01aa97ea1d1338d23615397cff7556f82c336595551da4b9fcd308b578174",
																"typeString": "literal_string \"expired deadline\""
															},
															"value": "expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a9c01aa97ea1d1338d23615397cff7556f82c336595551da4b9fcd308b578174",
																"typeString": "literal_string \"expired deadline\""
															}
														],
														"id": 3291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "945:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "945:56:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3298,
												"nodeType": "ExpressionStatement",
												"src": "945:56:15"
											},
											{
												"assignments": [
													3300
												],
												"declarations": [
													{
														"constant": false,
														"id": 3300,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1042:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 3344,
														"src": "1034:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3299,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3304,
																	"name": "_PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3257,
																	"src": "1076:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3305,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3275,
																	"src": "1094:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3306,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3277,
																	"src": "1101:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3279,
																	"src": "1110:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3309,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3275,
																			"src": "1127:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3308,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3388,
																		"src": "1117:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1117:16:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3311,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3281,
																	"src": "1135:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3302,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1065:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1069:6:15",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1065:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1065:79:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3301,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1055:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1055:90:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:111:15"
											},
											{
												"assignments": [
													3316
												],
												"declarations": [
													{
														"constant": false,
														"id": 3316,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "1163:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 3344,
														"src": "1155:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3315,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1155:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3320,
												"initialValue": {
													"arguments": [
														{
															"id": 3318,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3300,
															"src": "1187:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3317,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "1170:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1155:43:15"
											},
											{
												"assignments": [
													3322
												],
												"declarations": [
													{
														"constant": false,
														"id": 3322,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "1277:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3344,
														"src": "1269:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3321,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1269:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3330,
												"initialValue": {
													"arguments": [
														{
															"id": 3325,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3316,
															"src": "1300:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3326,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3283,
															"src": "1306:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3327,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3285,
															"src": "1309:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3328,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3287,
															"src": "1312:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3323,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "1286:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1776_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1292:7:15",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1726,
														"src": "1286:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1269:45:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3332,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3322,
																"src": "1332:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3333,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3275,
																"src": "1342:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1332:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
															"id": 3335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1349:32:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															},
															"value": "ERC20Permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															}
														],
														"id": 3331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1324:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1324:58:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3337,
												"nodeType": "ExpressionStatement",
												"src": "1324:58:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3339,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3275,
															"src": "1421:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3340,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3277,
															"src": "1428:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3341,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3279,
															"src": "1437:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3338,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "1412:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:31:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3343,
												"nodeType": "ExpressionStatement",
												"src": "1412:31:15"
											}
										]
									},
									"functionSelector": "d505accf",
									"id": 3345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "746:6:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3289,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "926:8:15"
									},
									"parameters": {
										"id": 3288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3275,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "770:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3345,
												"src": "762:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "793:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3345,
												"src": "785:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "818:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3345,
												"src": "810:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "841:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3345,
												"src": "833:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "865:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3345,
												"src": "859:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3282,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "859:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "884:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3345,
												"src": "876:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3284,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "903:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3345,
												"src": "895:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3286,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:158:15"
									},
									"returnParameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:0:15"
									},
									"scope": 3389,
									"src": "737:713:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										809
									],
									"body": {
										"id": 3357,
										"nodeType": "Block",
										"src": "1548:38:15",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3353,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3252,
														"src": "1565:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3355,
													"indexExpression": {
														"id": 3354,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3347,
														"src": "1573:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1565:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3352,
												"id": 3356,
												"nodeType": "Return",
												"src": "1558:21:15"
											}
										]
									},
									"functionSelector": "7ecebe00",
									"id": 3358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1465:6:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3349,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1521:8:15"
									},
									"parameters": {
										"id": 3348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1489:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1481:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:29:15"
									},
									"returnParameters": {
										"id": 3352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1539:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:9:15"
									},
									"scope": 3389,
									"src": "1456:130:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										815
									],
									"body": {
										"id": 3367,
										"nodeType": "Block",
										"src": "1661:44:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3364,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "1678:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3363,
												"id": 3366,
												"nodeType": "Return",
												"src": "1671:27:15"
											}
										]
									},
									"functionSelector": "3644e515",
									"id": 3368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "1601:16:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1634:8:15"
									},
									"parameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:2:15"
									},
									"returnParameters": {
										"id": 3363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "1652:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:9:15"
									},
									"scope": 3389,
									"src": "1592:113:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3387,
										"nodeType": "Block",
										"src": "1802:70:15",
										"statements": [
											{
												"expression": {
													"id": 3379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3375,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3373,
														"src": "1812:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 3376,
															"name": "_nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "1822:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3378,
														"indexExpression": {
															"id": 3377,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3370,
															"src": "1830:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1822:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1812:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3380,
												"nodeType": "ExpressionStatement",
												"src": "1812:24:15"
											},
											{
												"expression": {
													"id": 3385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3381,
															"name": "_nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "1846:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3383,
														"indexExpression": {
															"id": 3382,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3370,
															"src": "1854:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1846:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1864:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1846:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3386,
												"nodeType": "ExpressionStatement",
												"src": "1846:19:15"
											}
										]
									},
									"id": 3388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "1720:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3370,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1747:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3388,
												"src": "1739:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1729:29:15"
									},
									"returnParameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "current",
												"nameLocation": "1793:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3388,
												"src": "1785:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:17:15"
									},
									"scope": 3389,
									"src": "1711:161:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3390,
							"src": "334:1540:15",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65,
								860,
								862,
								1439,
								1444,
								1449
							],
							"usedEvents": [
								4,
								688,
								697
							]
						}
					],
					"src": "51:1823:15"
				},
				"id": 15
			}
		}
	}
}